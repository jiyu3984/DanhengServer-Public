// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MultiPathAvatarInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from MultiPathAvatarInfo.proto</summary>
  public static partial class MultiPathAvatarInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for MultiPathAvatarInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultiPathAvatarInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlNdWx0aVBhdGhBdmF0YXJJbmZvLnByb3RvGhlNdWx0aVBhdGhBdmF0YXJU",
            "eXBlLnByb3RvGhBFcXVpcFJlbGljLnByb3RvGhVBdmF0YXJTa2lsbFRyZWUu",
            "cHJvdG8ivwEKE011bHRpUGF0aEF2YXRhckluZm8SDAoEcmFuaxgFIAEoDRIn",
            "CglhdmF0YXJfaWQYAyABKA4yFC5NdWx0aVBhdGhBdmF0YXJUeXBlEhkKEXBh",
            "dGhfZXF1aXBtZW50X2lkGAYgASgNEi8KFW11bHRpX3BhdGhfc2tpbGxfdHJl",
            "ZRgNIAMoCzIQLkF2YXRhclNraWxsVHJlZRIlChBlcXVpcF9yZWxpY19saXN0",
            "GAkgAygLMgsuRXF1aXBSZWxpY0IeqgIbRWdnTGluay5EYW5oZW5nU2VydmVy",
            "LlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.MultiPathAvatarTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.EquipRelicReflection.Descriptor, global::EggLink.DanhengServer.Proto.AvatarSkillTreeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.MultiPathAvatarInfo), global::EggLink.DanhengServer.Proto.MultiPathAvatarInfo.Parser, new[]{ "Rank", "AvatarId", "PathEquipmentId", "MultiPathSkillTree", "EquipRelicList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MultiPathAvatarInfo : pb::IMessage<MultiPathAvatarInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiPathAvatarInfo> _parser = new pb::MessageParser<MultiPathAvatarInfo>(() => new MultiPathAvatarInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MultiPathAvatarInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.MultiPathAvatarInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiPathAvatarInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiPathAvatarInfo(MultiPathAvatarInfo other) : this() {
      rank_ = other.rank_;
      avatarId_ = other.avatarId_;
      pathEquipmentId_ = other.pathEquipmentId_;
      multiPathSkillTree_ = other.multiPathSkillTree_.Clone();
      equipRelicList_ = other.equipRelicList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiPathAvatarInfo Clone() {
      return new MultiPathAvatarInfo(this);
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 5;
    private uint rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "avatar_id" field.</summary>
    public const int AvatarIdFieldNumber = 3;
    private global::EggLink.DanhengServer.Proto.MultiPathAvatarType avatarId_ = global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.MultiPathAvatarType AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "path_equipment_id" field.</summary>
    public const int PathEquipmentIdFieldNumber = 6;
    private uint pathEquipmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PathEquipmentId {
      get { return pathEquipmentId_; }
      set {
        pathEquipmentId_ = value;
      }
    }

    /// <summary>Field number for the "multi_path_skill_tree" field.</summary>
    public const int MultiPathSkillTreeFieldNumber = 13;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AvatarSkillTree> _repeated_multiPathSkillTree_codec
        = pb::FieldCodec.ForMessage(106, global::EggLink.DanhengServer.Proto.AvatarSkillTree.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree> multiPathSkillTree_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree> MultiPathSkillTree {
      get { return multiPathSkillTree_; }
    }

    /// <summary>Field number for the "equip_relic_list" field.</summary>
    public const int EquipRelicListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.EquipRelic> _repeated_equipRelicList_codec
        = pb::FieldCodec.ForMessage(74, global::EggLink.DanhengServer.Proto.EquipRelic.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipRelic> equipRelicList_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipRelic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipRelic> EquipRelicList {
      get { return equipRelicList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MultiPathAvatarInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MultiPathAvatarInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (AvatarId != other.AvatarId) return false;
      if (PathEquipmentId != other.PathEquipmentId) return false;
      if(!multiPathSkillTree_.Equals(other.multiPathSkillTree_)) return false;
      if(!equipRelicList_.Equals(other.equipRelicList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (AvatarId != global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None) hash ^= AvatarId.GetHashCode();
      if (PathEquipmentId != 0) hash ^= PathEquipmentId.GetHashCode();
      hash ^= multiPathSkillTree_.GetHashCode();
      hash ^= equipRelicList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AvatarId != global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AvatarId);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Rank);
      }
      if (PathEquipmentId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathEquipmentId);
      }
      equipRelicList_.WriteTo(output, _repeated_equipRelicList_codec);
      multiPathSkillTree_.WriteTo(output, _repeated_multiPathSkillTree_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AvatarId != global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AvatarId);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Rank);
      }
      if (PathEquipmentId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathEquipmentId);
      }
      equipRelicList_.WriteTo(ref output, _repeated_equipRelicList_codec);
      multiPathSkillTree_.WriteTo(ref output, _repeated_multiPathSkillTree_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank);
      }
      if (AvatarId != global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AvatarId);
      }
      if (PathEquipmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PathEquipmentId);
      }
      size += multiPathSkillTree_.CalculateSize(_repeated_multiPathSkillTree_codec);
      size += equipRelicList_.CalculateSize(_repeated_equipRelicList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MultiPathAvatarInfo other) {
      if (other == null) {
        return;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.AvatarId != global::EggLink.DanhengServer.Proto.MultiPathAvatarType.None) {
        AvatarId = other.AvatarId;
      }
      if (other.PathEquipmentId != 0) {
        PathEquipmentId = other.PathEquipmentId;
      }
      multiPathSkillTree_.Add(other.multiPathSkillTree_);
      equipRelicList_.Add(other.equipRelicList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            AvatarId = (global::EggLink.DanhengServer.Proto.MultiPathAvatarType) input.ReadEnum();
            break;
          }
          case 40: {
            Rank = input.ReadUInt32();
            break;
          }
          case 48: {
            PathEquipmentId = input.ReadUInt32();
            break;
          }
          case 74: {
            equipRelicList_.AddEntriesFrom(input, _repeated_equipRelicList_codec);
            break;
          }
          case 106: {
            multiPathSkillTree_.AddEntriesFrom(input, _repeated_multiPathSkillTree_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            AvatarId = (global::EggLink.DanhengServer.Proto.MultiPathAvatarType) input.ReadEnum();
            break;
          }
          case 40: {
            Rank = input.ReadUInt32();
            break;
          }
          case 48: {
            PathEquipmentId = input.ReadUInt32();
            break;
          }
          case 74: {
            equipRelicList_.AddEntriesFrom(ref input, _repeated_equipRelicList_codec);
            break;
          }
          case 106: {
            multiPathSkillTree_.AddEntriesFrom(ref input, _repeated_multiPathSkillTree_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
