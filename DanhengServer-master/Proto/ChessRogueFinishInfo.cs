// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueFinishInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueFinishInfo.proto</summary>
  public static partial class ChessRogueFinishInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueFinishInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueFinishInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpDaGVzc1JvZ3VlRmluaXNoSW5mby5wcm90bxoXQ2hlc3NSb2d1ZU1pcmFj",
            "bGUucHJvdG8aGUNoZXNzUm9ndWVTdG9yeUluZm8ucHJvdG8aDkl0ZW1MaXN0",
            "LnByb3RvGhRDaGVzc1JvZ3VlQnVmZi5wcm90bxoaQ2hlc3NSb2d1ZVF1aXRS",
            "ZWFzb24ucHJvdG8aEExpbmV1cEluZm8ucHJvdG8isAQKFENoZXNzUm9ndWVG",
            "aW5pc2hJbmZvEhMKC05PRkpHTEZLR0ZJGAYgASgNEioKC05PTE5BRkhHTklD",
            "GAIgASgOMhUuQ2hlc3NSb2d1ZVF1aXRSZWFzb24SKAoPcm9ndWVfYnVmZl9p",
            "bmZvGAMgASgLMg8uQ2hlc3NSb2d1ZUJ1ZmYSEQoJaXNfZmluaXNoGAsgASgI",
            "EiAKC0lJQkxGTEpEUE1EGAkgASgLMgsuTGluZXVwSW5mbxIhChljaGVzc19y",
            "b2d1ZV9tYWluX3N0b3J5X2lkGAcgASgNEhMKC0lMT09DT0RJRUpPGA4gASgN",
            "EhQKC0dESVBQSkJLTkJQGKYLIAEoDRIXCg5yb2d1ZV9zdWJfbW9kZRjnCyAB",
            "KA0SEwoLQ0dGS0tBS0pGQ0EYCiABKA0SLQoRZ2FtZV9taXJhY2xlX2luZm8Y",
            "BSABKAsyEi5DaGVzc1JvZ3VlTWlyYWNsZRIvChByb2d1ZV9zdG9yeV9pbmZv",
            "GM4DIAEoCzIULkNoZXNzUm9ndWVTdG9yeUluZm8SEQoIc2NvcmVfaWQYiwkg",
            "ASgNEhMKC0pPTkZBR0dDR0xPGAwgASgNEhQKC0RBTElJTk1CTEFEGJwKIAEo",
            "DRIeCgtPR01NT0xFRU9QTBgEIAEoCzIJLkl0ZW1MaXN0EhQKC0VOREVMSkdQ",
            "TEFCGLoFIAEoDRITCgtMR0tBSkdBTkVISRgIIAMoDRITCgtBRERORk9HTlBQ",
            "RxgBIAEoDUIeqgIbRWdnTGluay5EYW5oZW5nU2VydmVyLlByb3RvYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueMiracleReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueStoryInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ItemListReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBuffReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueQuitReasonReflection.Descriptor, global::EggLink.DanhengServer.Proto.LineupInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo), global::EggLink.DanhengServer.Proto.ChessRogueFinishInfo.Parser, new[]{ "NOFJGLFKGFI", "NOLNAFHGNIC", "RogueBuffInfo", "IsFinish", "IIBLFLJDPMD", "ChessRogueMainStoryId", "ILOOCODIEJO", "GDIPPJBKNBP", "RogueSubMode", "CGFKKAKJFCA", "GameMiracleInfo", "RogueStoryInfo", "ScoreId", "JONFAGGCGLO", "DALIINMBLAD", "OGMMOLEEOPL", "ENDELJGPLAB", "LGKAJGANEHI", "ADDNFOGNPPG" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueFinishInfo : pb::IMessage<ChessRogueFinishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueFinishInfo> _parser = new pb::MessageParser<ChessRogueFinishInfo>(() => new ChessRogueFinishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueFinishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueFinishInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo(ChessRogueFinishInfo other) : this() {
      nOFJGLFKGFI_ = other.nOFJGLFKGFI_;
      nOLNAFHGNIC_ = other.nOLNAFHGNIC_;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      isFinish_ = other.isFinish_;
      iIBLFLJDPMD_ = other.iIBLFLJDPMD_ != null ? other.iIBLFLJDPMD_.Clone() : null;
      chessRogueMainStoryId_ = other.chessRogueMainStoryId_;
      iLOOCODIEJO_ = other.iLOOCODIEJO_;
      gDIPPJBKNBP_ = other.gDIPPJBKNBP_;
      rogueSubMode_ = other.rogueSubMode_;
      cGFKKAKJFCA_ = other.cGFKKAKJFCA_;
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      rogueStoryInfo_ = other.rogueStoryInfo_ != null ? other.rogueStoryInfo_.Clone() : null;
      scoreId_ = other.scoreId_;
      jONFAGGCGLO_ = other.jONFAGGCGLO_;
      dALIINMBLAD_ = other.dALIINMBLAD_;
      oGMMOLEEOPL_ = other.oGMMOLEEOPL_ != null ? other.oGMMOLEEOPL_.Clone() : null;
      eNDELJGPLAB_ = other.eNDELJGPLAB_;
      lGKAJGANEHI_ = other.lGKAJGANEHI_.Clone();
      aDDNFOGNPPG_ = other.aDDNFOGNPPG_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueFinishInfo Clone() {
      return new ChessRogueFinishInfo(this);
    }

    /// <summary>Field number for the "NOFJGLFKGFI" field.</summary>
    public const int NOFJGLFKGFIFieldNumber = 6;
    private uint nOFJGLFKGFI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NOFJGLFKGFI {
      get { return nOFJGLFKGFI_; }
      set {
        nOFJGLFKGFI_ = value;
      }
    }

    /// <summary>Field number for the "NOLNAFHGNIC" field.</summary>
    public const int NOLNAFHGNICFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.ChessRogueQuitReason nOLNAFHGNIC_ = global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueQuitReason NOLNAFHGNIC {
      get { return nOLNAFHGNIC_; }
      set {
        nOLNAFHGNIC_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 3;
    private global::EggLink.DanhengServer.Proto.ChessRogueBuff rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBuff RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_finish" field.</summary>
    public const int IsFinishFieldNumber = 11;
    private bool isFinish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinish {
      get { return isFinish_; }
      set {
        isFinish_ = value;
      }
    }

    /// <summary>Field number for the "IIBLFLJDPMD" field.</summary>
    public const int IIBLFLJDPMDFieldNumber = 9;
    private global::EggLink.DanhengServer.Proto.LineupInfo iIBLFLJDPMD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LineupInfo IIBLFLJDPMD {
      get { return iIBLFLJDPMD_; }
      set {
        iIBLFLJDPMD_ = value;
      }
    }

    /// <summary>Field number for the "chess_rogue_main_story_id" field.</summary>
    public const int ChessRogueMainStoryIdFieldNumber = 7;
    private uint chessRogueMainStoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChessRogueMainStoryId {
      get { return chessRogueMainStoryId_; }
      set {
        chessRogueMainStoryId_ = value;
      }
    }

    /// <summary>Field number for the "ILOOCODIEJO" field.</summary>
    public const int ILOOCODIEJOFieldNumber = 14;
    private uint iLOOCODIEJO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ILOOCODIEJO {
      get { return iLOOCODIEJO_; }
      set {
        iLOOCODIEJO_ = value;
      }
    }

    /// <summary>Field number for the "GDIPPJBKNBP" field.</summary>
    public const int GDIPPJBKNBPFieldNumber = 1446;
    private uint gDIPPJBKNBP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GDIPPJBKNBP {
      get { return gDIPPJBKNBP_; }
      set {
        gDIPPJBKNBP_ = value;
      }
    }

    /// <summary>Field number for the "rogue_sub_mode" field.</summary>
    public const int RogueSubModeFieldNumber = 1511;
    private uint rogueSubMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueSubMode {
      get { return rogueSubMode_; }
      set {
        rogueSubMode_ = value;
      }
    }

    /// <summary>Field number for the "CGFKKAKJFCA" field.</summary>
    public const int CGFKKAKJFCAFieldNumber = 10;
    private uint cGFKKAKJFCA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CGFKKAKJFCA {
      get { return cGFKKAKJFCA_; }
      set {
        cGFKKAKJFCA_ = value;
      }
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracle gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracle GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_story_info" field.</summary>
    public const int RogueStoryInfoFieldNumber = 462;
    private global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo rogueStoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo RogueStoryInfo {
      get { return rogueStoryInfo_; }
      set {
        rogueStoryInfo_ = value;
      }
    }

    /// <summary>Field number for the "score_id" field.</summary>
    public const int ScoreIdFieldNumber = 1163;
    private uint scoreId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreId {
      get { return scoreId_; }
      set {
        scoreId_ = value;
      }
    }

    /// <summary>Field number for the "JONFAGGCGLO" field.</summary>
    public const int JONFAGGCGLOFieldNumber = 12;
    private uint jONFAGGCGLO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint JONFAGGCGLO {
      get { return jONFAGGCGLO_; }
      set {
        jONFAGGCGLO_ = value;
      }
    }

    /// <summary>Field number for the "DALIINMBLAD" field.</summary>
    public const int DALIINMBLADFieldNumber = 1308;
    private uint dALIINMBLAD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DALIINMBLAD {
      get { return dALIINMBLAD_; }
      set {
        dALIINMBLAD_ = value;
      }
    }

    /// <summary>Field number for the "OGMMOLEEOPL" field.</summary>
    public const int OGMMOLEEOPLFieldNumber = 4;
    private global::EggLink.DanhengServer.Proto.ItemList oGMMOLEEOPL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ItemList OGMMOLEEOPL {
      get { return oGMMOLEEOPL_; }
      set {
        oGMMOLEEOPL_ = value;
      }
    }

    /// <summary>Field number for the "ENDELJGPLAB" field.</summary>
    public const int ENDELJGPLABFieldNumber = 698;
    private uint eNDELJGPLAB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ENDELJGPLAB {
      get { return eNDELJGPLAB_; }
      set {
        eNDELJGPLAB_ = value;
      }
    }

    /// <summary>Field number for the "LGKAJGANEHI" field.</summary>
    public const int LGKAJGANEHIFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_lGKAJGANEHI_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> lGKAJGANEHI_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LGKAJGANEHI {
      get { return lGKAJGANEHI_; }
    }

    /// <summary>Field number for the "ADDNFOGNPPG" field.</summary>
    public const int ADDNFOGNPPGFieldNumber = 1;
    private uint aDDNFOGNPPG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ADDNFOGNPPG {
      get { return aDDNFOGNPPG_; }
      set {
        aDDNFOGNPPG_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueFinishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueFinishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NOFJGLFKGFI != other.NOFJGLFKGFI) return false;
      if (NOLNAFHGNIC != other.NOLNAFHGNIC) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if (IsFinish != other.IsFinish) return false;
      if (!object.Equals(IIBLFLJDPMD, other.IIBLFLJDPMD)) return false;
      if (ChessRogueMainStoryId != other.ChessRogueMainStoryId) return false;
      if (ILOOCODIEJO != other.ILOOCODIEJO) return false;
      if (GDIPPJBKNBP != other.GDIPPJBKNBP) return false;
      if (RogueSubMode != other.RogueSubMode) return false;
      if (CGFKKAKJFCA != other.CGFKKAKJFCA) return false;
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (!object.Equals(RogueStoryInfo, other.RogueStoryInfo)) return false;
      if (ScoreId != other.ScoreId) return false;
      if (JONFAGGCGLO != other.JONFAGGCGLO) return false;
      if (DALIINMBLAD != other.DALIINMBLAD) return false;
      if (!object.Equals(OGMMOLEEOPL, other.OGMMOLEEOPL)) return false;
      if (ENDELJGPLAB != other.ENDELJGPLAB) return false;
      if(!lGKAJGANEHI_.Equals(other.lGKAJGANEHI_)) return false;
      if (ADDNFOGNPPG != other.ADDNFOGNPPG) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NOFJGLFKGFI != 0) hash ^= NOFJGLFKGFI.GetHashCode();
      if (NOLNAFHGNIC != global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone) hash ^= NOLNAFHGNIC.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      if (IsFinish != false) hash ^= IsFinish.GetHashCode();
      if (iIBLFLJDPMD_ != null) hash ^= IIBLFLJDPMD.GetHashCode();
      if (ChessRogueMainStoryId != 0) hash ^= ChessRogueMainStoryId.GetHashCode();
      if (ILOOCODIEJO != 0) hash ^= ILOOCODIEJO.GetHashCode();
      if (GDIPPJBKNBP != 0) hash ^= GDIPPJBKNBP.GetHashCode();
      if (RogueSubMode != 0) hash ^= RogueSubMode.GetHashCode();
      if (CGFKKAKJFCA != 0) hash ^= CGFKKAKJFCA.GetHashCode();
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (rogueStoryInfo_ != null) hash ^= RogueStoryInfo.GetHashCode();
      if (ScoreId != 0) hash ^= ScoreId.GetHashCode();
      if (JONFAGGCGLO != 0) hash ^= JONFAGGCGLO.GetHashCode();
      if (DALIINMBLAD != 0) hash ^= DALIINMBLAD.GetHashCode();
      if (oGMMOLEEOPL_ != null) hash ^= OGMMOLEEOPL.GetHashCode();
      if (ENDELJGPLAB != 0) hash ^= ENDELJGPLAB.GetHashCode();
      hash ^= lGKAJGANEHI_.GetHashCode();
      if (ADDNFOGNPPG != 0) hash ^= ADDNFOGNPPG.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ADDNFOGNPPG != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ADDNFOGNPPG);
      }
      if (NOLNAFHGNIC != global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NOLNAFHGNIC);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueBuffInfo);
      }
      if (oGMMOLEEOPL_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OGMMOLEEOPL);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GameMiracleInfo);
      }
      if (NOFJGLFKGFI != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(NOFJGLFKGFI);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      lGKAJGANEHI_.WriteTo(output, _repeated_lGKAJGANEHI_codec);
      if (iIBLFLJDPMD_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(IIBLFLJDPMD);
      }
      if (CGFKKAKJFCA != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CGFKKAKJFCA);
      }
      if (IsFinish != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsFinish);
      }
      if (JONFAGGCGLO != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(JONFAGGCGLO);
      }
      if (ILOOCODIEJO != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ILOOCODIEJO);
      }
      if (rogueStoryInfo_ != null) {
        output.WriteRawTag(242, 28);
        output.WriteMessage(RogueStoryInfo);
      }
      if (ENDELJGPLAB != 0) {
        output.WriteRawTag(208, 43);
        output.WriteUInt32(ENDELJGPLAB);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(216, 72);
        output.WriteUInt32(ScoreId);
      }
      if (DALIINMBLAD != 0) {
        output.WriteRawTag(224, 81);
        output.WriteUInt32(DALIINMBLAD);
      }
      if (GDIPPJBKNBP != 0) {
        output.WriteRawTag(176, 90);
        output.WriteUInt32(GDIPPJBKNBP);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(184, 94);
        output.WriteUInt32(RogueSubMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ADDNFOGNPPG != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ADDNFOGNPPG);
      }
      if (NOLNAFHGNIC != global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NOLNAFHGNIC);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueBuffInfo);
      }
      if (oGMMOLEEOPL_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OGMMOLEEOPL);
      }
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GameMiracleInfo);
      }
      if (NOFJGLFKGFI != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(NOFJGLFKGFI);
      }
      if (ChessRogueMainStoryId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChessRogueMainStoryId);
      }
      lGKAJGANEHI_.WriteTo(ref output, _repeated_lGKAJGANEHI_codec);
      if (iIBLFLJDPMD_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(IIBLFLJDPMD);
      }
      if (CGFKKAKJFCA != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CGFKKAKJFCA);
      }
      if (IsFinish != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsFinish);
      }
      if (JONFAGGCGLO != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(JONFAGGCGLO);
      }
      if (ILOOCODIEJO != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(ILOOCODIEJO);
      }
      if (rogueStoryInfo_ != null) {
        output.WriteRawTag(242, 28);
        output.WriteMessage(RogueStoryInfo);
      }
      if (ENDELJGPLAB != 0) {
        output.WriteRawTag(208, 43);
        output.WriteUInt32(ENDELJGPLAB);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(216, 72);
        output.WriteUInt32(ScoreId);
      }
      if (DALIINMBLAD != 0) {
        output.WriteRawTag(224, 81);
        output.WriteUInt32(DALIINMBLAD);
      }
      if (GDIPPJBKNBP != 0) {
        output.WriteRawTag(176, 90);
        output.WriteUInt32(GDIPPJBKNBP);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(184, 94);
        output.WriteUInt32(RogueSubMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NOFJGLFKGFI != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NOFJGLFKGFI);
      }
      if (NOLNAFHGNIC != global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NOLNAFHGNIC);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      if (IsFinish != false) {
        size += 1 + 1;
      }
      if (iIBLFLJDPMD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IIBLFLJDPMD);
      }
      if (ChessRogueMainStoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChessRogueMainStoryId);
      }
      if (ILOOCODIEJO != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ILOOCODIEJO);
      }
      if (GDIPPJBKNBP != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GDIPPJBKNBP);
      }
      if (RogueSubMode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RogueSubMode);
      }
      if (CGFKKAKJFCA != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CGFKKAKJFCA);
      }
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (rogueStoryInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RogueStoryInfo);
      }
      if (ScoreId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreId);
      }
      if (JONFAGGCGLO != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JONFAGGCGLO);
      }
      if (DALIINMBLAD != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DALIINMBLAD);
      }
      if (oGMMOLEEOPL_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OGMMOLEEOPL);
      }
      if (ENDELJGPLAB != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ENDELJGPLAB);
      }
      size += lGKAJGANEHI_.CalculateSize(_repeated_lGKAJGANEHI_codec);
      if (ADDNFOGNPPG != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ADDNFOGNPPG);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueFinishInfo other) {
      if (other == null) {
        return;
      }
      if (other.NOFJGLFKGFI != 0) {
        NOFJGLFKGFI = other.NOFJGLFKGFI;
      }
      if (other.NOLNAFHGNIC != global::EggLink.DanhengServer.Proto.ChessRogueQuitReason.ChessRogueAccountByNone) {
        NOLNAFHGNIC = other.NOLNAFHGNIC;
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      if (other.IsFinish != false) {
        IsFinish = other.IsFinish;
      }
      if (other.iIBLFLJDPMD_ != null) {
        if (iIBLFLJDPMD_ == null) {
          IIBLFLJDPMD = new global::EggLink.DanhengServer.Proto.LineupInfo();
        }
        IIBLFLJDPMD.MergeFrom(other.IIBLFLJDPMD);
      }
      if (other.ChessRogueMainStoryId != 0) {
        ChessRogueMainStoryId = other.ChessRogueMainStoryId;
      }
      if (other.ILOOCODIEJO != 0) {
        ILOOCODIEJO = other.ILOOCODIEJO;
      }
      if (other.GDIPPJBKNBP != 0) {
        GDIPPJBKNBP = other.GDIPPJBKNBP;
      }
      if (other.RogueSubMode != 0) {
        RogueSubMode = other.RogueSubMode;
      }
      if (other.CGFKKAKJFCA != 0) {
        CGFKKAKJFCA = other.CGFKKAKJFCA;
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.rogueStoryInfo_ != null) {
        if (rogueStoryInfo_ == null) {
          RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
        }
        RogueStoryInfo.MergeFrom(other.RogueStoryInfo);
      }
      if (other.ScoreId != 0) {
        ScoreId = other.ScoreId;
      }
      if (other.JONFAGGCGLO != 0) {
        JONFAGGCGLO = other.JONFAGGCGLO;
      }
      if (other.DALIINMBLAD != 0) {
        DALIINMBLAD = other.DALIINMBLAD;
      }
      if (other.oGMMOLEEOPL_ != null) {
        if (oGMMOLEEOPL_ == null) {
          OGMMOLEEOPL = new global::EggLink.DanhengServer.Proto.ItemList();
        }
        OGMMOLEEOPL.MergeFrom(other.OGMMOLEEOPL);
      }
      if (other.ENDELJGPLAB != 0) {
        ENDELJGPLAB = other.ENDELJGPLAB;
      }
      lGKAJGANEHI_.Add(other.lGKAJGANEHI_);
      if (other.ADDNFOGNPPG != 0) {
        ADDNFOGNPPG = other.ADDNFOGNPPG;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ADDNFOGNPPG = input.ReadUInt32();
            break;
          }
          case 16: {
            NOLNAFHGNIC = (global::EggLink.DanhengServer.Proto.ChessRogueQuitReason) input.ReadEnum();
            break;
          }
          case 26: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 34: {
            if (oGMMOLEEOPL_ == null) {
              OGMMOLEEOPL = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(OGMMOLEEOPL);
            break;
          }
          case 42: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 48: {
            NOFJGLFKGFI = input.ReadUInt32();
            break;
          }
          case 56: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 66:
          case 64: {
            lGKAJGANEHI_.AddEntriesFrom(input, _repeated_lGKAJGANEHI_codec);
            break;
          }
          case 74: {
            if (iIBLFLJDPMD_ == null) {
              IIBLFLJDPMD = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(IIBLFLJDPMD);
            break;
          }
          case 80: {
            CGFKKAKJFCA = input.ReadUInt32();
            break;
          }
          case 88: {
            IsFinish = input.ReadBool();
            break;
          }
          case 96: {
            JONFAGGCGLO = input.ReadUInt32();
            break;
          }
          case 112: {
            ILOOCODIEJO = input.ReadUInt32();
            break;
          }
          case 3698: {
            if (rogueStoryInfo_ == null) {
              RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(RogueStoryInfo);
            break;
          }
          case 5584: {
            ENDELJGPLAB = input.ReadUInt32();
            break;
          }
          case 9304: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 10464: {
            DALIINMBLAD = input.ReadUInt32();
            break;
          }
          case 11568: {
            GDIPPJBKNBP = input.ReadUInt32();
            break;
          }
          case 12088: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ADDNFOGNPPG = input.ReadUInt32();
            break;
          }
          case 16: {
            NOLNAFHGNIC = (global::EggLink.DanhengServer.Proto.ChessRogueQuitReason) input.ReadEnum();
            break;
          }
          case 26: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuff();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 34: {
            if (oGMMOLEEOPL_ == null) {
              OGMMOLEEOPL = new global::EggLink.DanhengServer.Proto.ItemList();
            }
            input.ReadMessage(OGMMOLEEOPL);
            break;
          }
          case 42: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracle();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 48: {
            NOFJGLFKGFI = input.ReadUInt32();
            break;
          }
          case 56: {
            ChessRogueMainStoryId = input.ReadUInt32();
            break;
          }
          case 66:
          case 64: {
            lGKAJGANEHI_.AddEntriesFrom(ref input, _repeated_lGKAJGANEHI_codec);
            break;
          }
          case 74: {
            if (iIBLFLJDPMD_ == null) {
              IIBLFLJDPMD = new global::EggLink.DanhengServer.Proto.LineupInfo();
            }
            input.ReadMessage(IIBLFLJDPMD);
            break;
          }
          case 80: {
            CGFKKAKJFCA = input.ReadUInt32();
            break;
          }
          case 88: {
            IsFinish = input.ReadBool();
            break;
          }
          case 96: {
            JONFAGGCGLO = input.ReadUInt32();
            break;
          }
          case 112: {
            ILOOCODIEJO = input.ReadUInt32();
            break;
          }
          case 3698: {
            if (rogueStoryInfo_ == null) {
              RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(RogueStoryInfo);
            break;
          }
          case 5584: {
            ENDELJGPLAB = input.ReadUInt32();
            break;
          }
          case 9304: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 10464: {
            DALIINMBLAD = input.ReadUInt32();
            break;
          }
          case 11568: {
            GDIPPJBKNBP = input.ReadUInt32();
            break;
          }
          case 12088: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
