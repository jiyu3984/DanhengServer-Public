// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ModifyRelicFilterPlanCsReq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ModifyRelicFilterPlanCsReq.proto</summary>
  public static partial class ModifyRelicFilterPlanCsReqReflection {

    #region Descriptor
    /// <summary>File descriptor for ModifyRelicFilterPlanCsReq.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModifyRelicFilterPlanCsReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBNb2RpZnlSZWxpY0ZpbHRlclBsYW5Dc1JlcS5wcm90bxoZUmVsaWNGaWx0",
            "ZXJQbGFuSWNvbi5wcm90bxodUmVsaWNGaWx0ZXJQbGFuU2V0dGluZ3MucHJv",
            "dG8ipQEKGk1vZGlmeVJlbGljRmlsdGVyUGxhbkNzUmVxEhIKCnNsb3RfaW5k",
            "ZXgYASABKA0SDgoEbmFtZRgJIAEoCUgAEiQKBGljb24YDiABKAsyFC5SZWxp",
            "Y0ZpbHRlclBsYW5JY29uSAASLAoIc2V0dGluZ3MYBCABKAsyGC5SZWxpY0Zp",
            "bHRlclBsYW5TZXR0aW5nc0gAQg8KDUluZm9PbmVvZkNhc2VCHqoCG0VnZ0xp",
            "bmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.RelicFilterPlanIconReflection.Descriptor, global::EggLink.DanhengServer.Proto.RelicFilterPlanSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ModifyRelicFilterPlanCsReq), global::EggLink.DanhengServer.Proto.ModifyRelicFilterPlanCsReq.Parser, new[]{ "SlotIndex", "Name", "Icon", "Settings" }, new[]{ "InfoOneofCase" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ModifyRelicFilterPlanCsReq : pb::IMessage<ModifyRelicFilterPlanCsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyRelicFilterPlanCsReq> _parser = new pb::MessageParser<ModifyRelicFilterPlanCsReq>(() => new ModifyRelicFilterPlanCsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModifyRelicFilterPlanCsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ModifyRelicFilterPlanCsReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModifyRelicFilterPlanCsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModifyRelicFilterPlanCsReq(ModifyRelicFilterPlanCsReq other) : this() {
      slotIndex_ = other.slotIndex_;
      switch (other.InfoOneofCaseCase) {
        case InfoOneofCaseOneofCase.Name:
          Name = other.Name;
          break;
        case InfoOneofCaseOneofCase.Icon:
          Icon = other.Icon.Clone();
          break;
        case InfoOneofCaseOneofCase.Settings:
          Settings = other.Settings.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModifyRelicFilterPlanCsReq Clone() {
      return new ModifyRelicFilterPlanCsReq(this);
    }

    /// <summary>Field number for the "slot_index" field.</summary>
    public const int SlotIndexFieldNumber = 1;
    private uint slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return HasName ? (string) infoOneofCase_ : ""; }
      set {
        infoOneofCase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        infoOneofCaseCase_ = InfoOneofCaseOneofCase.Name;
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.Name; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      if (HasName) {
        ClearInfoOneofCase();
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon Icon {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon ? (global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.Icon;
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings Settings {
      get { return infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings ? (global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings) infoOneofCase_ : null; }
      set {
        infoOneofCase_ = value;
        infoOneofCaseCase_ = value == null ? InfoOneofCaseOneofCase.None : InfoOneofCaseOneofCase.Settings;
      }
    }

    private object infoOneofCase_;
    /// <summary>Enum of possible cases for the "InfoOneofCase" oneof.</summary>
    public enum InfoOneofCaseOneofCase {
      None = 0,
      Name = 9,
      Icon = 14,
      Settings = 4,
    }
    private InfoOneofCaseOneofCase infoOneofCaseCase_ = InfoOneofCaseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoOneofCaseOneofCase InfoOneofCaseCase {
      get { return infoOneofCaseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfoOneofCase() {
      infoOneofCaseCase_ = InfoOneofCaseOneofCase.None;
      infoOneofCase_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModifyRelicFilterPlanCsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModifyRelicFilterPlanCsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlotIndex != other.SlotIndex) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Icon, other.Icon)) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      if (InfoOneofCaseCase != other.InfoOneofCaseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) hash ^= Icon.GetHashCode();
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) hash ^= Settings.GetHashCode();
      hash ^= (int) infoOneofCaseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SlotIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SlotIndex);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) {
        output.WriteRawTag(114);
        output.WriteMessage(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SlotIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SlotIndex);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) {
        output.WriteRawTag(114);
        output.WriteMessage(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SlotIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotIndex);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Icon);
      }
      if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModifyRelicFilterPlanCsReq other) {
      if (other == null) {
        return;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      switch (other.InfoOneofCaseCase) {
        case InfoOneofCaseOneofCase.Name:
          Name = other.Name;
          break;
        case InfoOneofCaseOneofCase.Icon:
          if (Icon == null) {
            Icon = new global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon();
          }
          Icon.MergeFrom(other.Icon);
          break;
        case InfoOneofCaseOneofCase.Settings:
          if (Settings == null) {
            Settings = new global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings();
          }
          Settings.MergeFrom(other.Settings);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlotIndex = input.ReadUInt32();
            break;
          }
          case 34: {
            global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings subBuilder = new global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) {
              subBuilder.MergeFrom(Settings);
            }
            input.ReadMessage(subBuilder);
            Settings = subBuilder;
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 114: {
            global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon subBuilder = new global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) {
              subBuilder.MergeFrom(Icon);
            }
            input.ReadMessage(subBuilder);
            Icon = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SlotIndex = input.ReadUInt32();
            break;
          }
          case 34: {
            global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings subBuilder = new global::EggLink.DanhengServer.Proto.RelicFilterPlanSettings();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Settings) {
              subBuilder.MergeFrom(Settings);
            }
            input.ReadMessage(subBuilder);
            Settings = subBuilder;
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 114: {
            global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon subBuilder = new global::EggLink.DanhengServer.Proto.RelicFilterPlanIcon();
            if (infoOneofCaseCase_ == InfoOneofCaseOneofCase.Icon) {
              subBuilder.MergeFrom(Icon);
            }
            input.ReadMessage(subBuilder);
            Icon = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
