// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueCell.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueCell.proto</summary>
  public static partial class ChessRogueCellReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueCell.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueCellReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRDaGVzc1JvZ3VlQ2VsbC5wcm90bxoVQ2VsbEFkdmFuY2VJbmZvLnByb3Rv",
            "Gh9DaGVzc1JvZ3VlQ2VsbFNwZWNpYWxUeXBlLnByb3RvGh9DaGVzc1JvZ3Vl",
            "Qm9hcmRDZWxsU3RhdHVzLnByb3RvIrgCCg5DaGVzc1JvZ3VlQ2VsbBIPCgdy",
            "b29tX2lkGA8gASgNEg0KBXBvc194GAcgASgNEjAKDHNwZWNpYWxfdHlwZRgC",
            "IAEoDjIaLkNoZXNzUm9ndWVDZWxsU3BlY2lhbFR5cGUSLwoLY2VsbF9zdGF0",
            "dXMYCiABKA4yGi5DaGVzc1JvZ3VlQm9hcmRDZWxsU3RhdHVzEg0KBXBvc195",
            "GAwgASgNEhMKC0JGQ0JERU5NRUxEGA4gAygNEiQKCnN0YWdlX2luZm8YDSAB",
            "KAsyEC5DZWxsQWR2YW5jZUluZm8SCgoCaWQYBCABKA0SEgoKYmxvY2tfdHlw",
            "ZRgGIAEoDRIRCglpc191bmxvY2sYCyABKAgSEQoJbWFya190eXBlGAggASgN",
            "EhMKC2lzX3VubG9ja2VkGAkgASgIQh6qAhtFZ2dMaW5rLkRhbmhlbmdTZXJ2",
            "ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.CellAdvanceInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueCell), global::EggLink.DanhengServer.Proto.ChessRogueCell.Parser, new[]{ "RoomId", "PosX", "SpecialType", "CellStatus", "PosY", "BFCBDENMELD", "StageInfo", "Id", "BlockType", "IsUnlock", "MarkType", "IsUnlocked" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueCell : pb::IMessage<ChessRogueCell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueCell> _parser = new pb::MessageParser<ChessRogueCell>(() => new ChessRogueCell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueCell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueCellReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCell(ChessRogueCell other) : this() {
      roomId_ = other.roomId_;
      posX_ = other.posX_;
      specialType_ = other.specialType_;
      cellStatus_ = other.cellStatus_;
      posY_ = other.posY_;
      bFCBDENMELD_ = other.bFCBDENMELD_.Clone();
      stageInfo_ = other.stageInfo_ != null ? other.stageInfo_.Clone() : null;
      id_ = other.id_;
      blockType_ = other.blockType_;
      isUnlock_ = other.isUnlock_;
      markType_ = other.markType_;
      isUnlocked_ = other.isUnlocked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueCell Clone() {
      return new ChessRogueCell(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 15;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 7;
    private uint posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "special_type" field.</summary>
    public const int SpecialTypeFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType specialType_ = global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType SpecialType {
      get { return specialType_; }
      set {
        specialType_ = value;
      }
    }

    /// <summary>Field number for the "cell_status" field.</summary>
    public const int CellStatusFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus cellStatus_ = global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus CellStatus {
      get { return cellStatus_; }
      set {
        cellStatus_ = value;
      }
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 12;
    private uint posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "BFCBDENMELD" field.</summary>
    public const int BFCBDENMELDFieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_bFCBDENMELD_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> bFCBDENMELD_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> BFCBDENMELD {
      get { return bFCBDENMELD_; }
    }

    /// <summary>Field number for the "stage_info" field.</summary>
    public const int StageInfoFieldNumber = 13;
    private global::EggLink.DanhengServer.Proto.CellAdvanceInfo stageInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.CellAdvanceInfo StageInfo {
      get { return stageInfo_; }
      set {
        stageInfo_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "block_type" field.</summary>
    public const int BlockTypeFieldNumber = 6;
    private uint blockType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlockType {
      get { return blockType_; }
      set {
        blockType_ = value;
      }
    }

    /// <summary>Field number for the "is_unlock" field.</summary>
    public const int IsUnlockFieldNumber = 11;
    private bool isUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnlock {
      get { return isUnlock_; }
      set {
        isUnlock_ = value;
      }
    }

    /// <summary>Field number for the "mark_type" field.</summary>
    public const int MarkTypeFieldNumber = 8;
    private uint markType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarkType {
      get { return markType_; }
      set {
        markType_ = value;
      }
    }

    /// <summary>Field number for the "is_unlocked" field.</summary>
    public const int IsUnlockedFieldNumber = 9;
    private bool isUnlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnlocked {
      get { return isUnlocked_; }
      set {
        isUnlocked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueCell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueCell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (PosX != other.PosX) return false;
      if (SpecialType != other.SpecialType) return false;
      if (CellStatus != other.CellStatus) return false;
      if (PosY != other.PosY) return false;
      if(!bFCBDENMELD_.Equals(other.bFCBDENMELD_)) return false;
      if (!object.Equals(StageInfo, other.StageInfo)) return false;
      if (Id != other.Id) return false;
      if (BlockType != other.BlockType) return false;
      if (IsUnlock != other.IsUnlock) return false;
      if (MarkType != other.MarkType) return false;
      if (IsUnlocked != other.IsUnlocked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (PosX != 0) hash ^= PosX.GetHashCode();
      if (SpecialType != global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None) hash ^= SpecialType.GetHashCode();
      if (CellStatus != global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle) hash ^= CellStatus.GetHashCode();
      if (PosY != 0) hash ^= PosY.GetHashCode();
      hash ^= bFCBDENMELD_.GetHashCode();
      if (stageInfo_ != null) hash ^= StageInfo.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BlockType != 0) hash ^= BlockType.GetHashCode();
      if (IsUnlock != false) hash ^= IsUnlock.GetHashCode();
      if (MarkType != 0) hash ^= MarkType.GetHashCode();
      if (IsUnlocked != false) hash ^= IsUnlocked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpecialType != global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SpecialType);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Id);
      }
      if (BlockType != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BlockType);
      }
      if (PosX != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PosX);
      }
      if (MarkType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MarkType);
      }
      if (IsUnlocked != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsUnlocked);
      }
      if (CellStatus != global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle) {
        output.WriteRawTag(80);
        output.WriteEnum((int) CellStatus);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsUnlock);
      }
      if (PosY != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PosY);
      }
      if (stageInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StageInfo);
      }
      bFCBDENMELD_.WriteTo(output, _repeated_bFCBDENMELD_codec);
      if (RoomId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpecialType != global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SpecialType);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Id);
      }
      if (BlockType != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BlockType);
      }
      if (PosX != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PosX);
      }
      if (MarkType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MarkType);
      }
      if (IsUnlocked != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsUnlocked);
      }
      if (CellStatus != global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle) {
        output.WriteRawTag(80);
        output.WriteEnum((int) CellStatus);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsUnlock);
      }
      if (PosY != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PosY);
      }
      if (stageInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StageInfo);
      }
      bFCBDENMELD_.WriteTo(ref output, _repeated_bFCBDENMELD_codec);
      if (RoomId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (PosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosX);
      }
      if (SpecialType != global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpecialType);
      }
      if (CellStatus != global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CellStatus);
      }
      if (PosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosY);
      }
      size += bFCBDENMELD_.CalculateSize(_repeated_bFCBDENMELD_codec);
      if (stageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageInfo);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (BlockType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlockType);
      }
      if (IsUnlock != false) {
        size += 1 + 1;
      }
      if (MarkType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarkType);
      }
      if (IsUnlocked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueCell other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.PosX != 0) {
        PosX = other.PosX;
      }
      if (other.SpecialType != global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType.None) {
        SpecialType = other.SpecialType;
      }
      if (other.CellStatus != global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus.Idle) {
        CellStatus = other.CellStatus;
      }
      if (other.PosY != 0) {
        PosY = other.PosY;
      }
      bFCBDENMELD_.Add(other.bFCBDENMELD_);
      if (other.stageInfo_ != null) {
        if (stageInfo_ == null) {
          StageInfo = new global::EggLink.DanhengServer.Proto.CellAdvanceInfo();
        }
        StageInfo.MergeFrom(other.StageInfo);
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BlockType != 0) {
        BlockType = other.BlockType;
      }
      if (other.IsUnlock != false) {
        IsUnlock = other.IsUnlock;
      }
      if (other.MarkType != 0) {
        MarkType = other.MarkType;
      }
      if (other.IsUnlocked != false) {
        IsUnlocked = other.IsUnlocked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            SpecialType = (global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType) input.ReadEnum();
            break;
          }
          case 32: {
            Id = input.ReadUInt32();
            break;
          }
          case 48: {
            BlockType = input.ReadUInt32();
            break;
          }
          case 56: {
            PosX = input.ReadUInt32();
            break;
          }
          case 64: {
            MarkType = input.ReadUInt32();
            break;
          }
          case 72: {
            IsUnlocked = input.ReadBool();
            break;
          }
          case 80: {
            CellStatus = (global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus) input.ReadEnum();
            break;
          }
          case 88: {
            IsUnlock = input.ReadBool();
            break;
          }
          case 96: {
            PosY = input.ReadUInt32();
            break;
          }
          case 106: {
            if (stageInfo_ == null) {
              StageInfo = new global::EggLink.DanhengServer.Proto.CellAdvanceInfo();
            }
            input.ReadMessage(StageInfo);
            break;
          }
          case 114:
          case 112: {
            bFCBDENMELD_.AddEntriesFrom(input, _repeated_bFCBDENMELD_codec);
            break;
          }
          case 120: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            SpecialType = (global::EggLink.DanhengServer.Proto.ChessRogueCellSpecialType) input.ReadEnum();
            break;
          }
          case 32: {
            Id = input.ReadUInt32();
            break;
          }
          case 48: {
            BlockType = input.ReadUInt32();
            break;
          }
          case 56: {
            PosX = input.ReadUInt32();
            break;
          }
          case 64: {
            MarkType = input.ReadUInt32();
            break;
          }
          case 72: {
            IsUnlocked = input.ReadBool();
            break;
          }
          case 80: {
            CellStatus = (global::EggLink.DanhengServer.Proto.ChessRogueBoardCellStatus) input.ReadEnum();
            break;
          }
          case 88: {
            IsUnlock = input.ReadBool();
            break;
          }
          case 96: {
            PosY = input.ReadUInt32();
            break;
          }
          case 106: {
            if (stageInfo_ == null) {
              StageInfo = new global::EggLink.DanhengServer.Proto.CellAdvanceInfo();
            }
            input.ReadMessage(StageInfo);
            break;
          }
          case 114:
          case 112: {
            bFCBDENMELD_.AddEntriesFrom(ref input, _repeated_bFCBDENMELD_codec);
            break;
          }
          case 120: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
