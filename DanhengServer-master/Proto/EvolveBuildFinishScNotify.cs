// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EvolveBuildFinishScNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from EvolveBuildFinishScNotify.proto</summary>
  public static partial class EvolveBuildFinishScNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for EvolveBuildFinishScNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EvolveBuildFinishScNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Fdm9sdmVCdWlsZEZpbmlzaFNjTm90aWZ5LnByb3RvGhFMSkdJQURISkxI",
            "UC5wcm90bxoaRXZvbHZlQnVpbGRMZXZlbEluZm8ucHJvdG8i5AEKGUV2b2x2",
            "ZUJ1aWxkRmluaXNoU2NOb3RpZnkSDQoFc2NvcmUYDiABKA0SKAoSYmF0dGxl",
            "X3Jlc3VsdF90eXBlGAggASgOMgwuTEpHSUFESEpMSFASDAoEY29pbhgCIAEo",
            "DRIXCg9jdXJfcGVyaW9kX3R5cGUYCyABKA0SKQoKbGV2ZWxfaW5mbxgHIAEo",
            "CzIVLkV2b2x2ZUJ1aWxkTGV2ZWxJbmZvEg8KB2lzX2xvc2UYDCABKAgSCwoD",
            "ZXhwGAQgASgNEhAKCGxldmVsX2lkGAEgASgNEgwKBHdhdmUYBiABKA1CHqoC",
            "G0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.LJGIADHJLHPReflection.Descriptor, global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.EvolveBuildFinishScNotify), global::EggLink.DanhengServer.Proto.EvolveBuildFinishScNotify.Parser, new[]{ "Score", "BattleResultType", "Coin", "CurPeriodType", "LevelInfo", "IsLose", "Exp", "LevelId", "Wave" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EvolveBuildFinishScNotify : pb::IMessage<EvolveBuildFinishScNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvolveBuildFinishScNotify> _parser = new pb::MessageParser<EvolveBuildFinishScNotify>(() => new EvolveBuildFinishScNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EvolveBuildFinishScNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.EvolveBuildFinishScNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvolveBuildFinishScNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvolveBuildFinishScNotify(EvolveBuildFinishScNotify other) : this() {
      score_ = other.score_;
      battleResultType_ = other.battleResultType_;
      coin_ = other.coin_;
      curPeriodType_ = other.curPeriodType_;
      levelInfo_ = other.levelInfo_ != null ? other.levelInfo_.Clone() : null;
      isLose_ = other.isLose_;
      exp_ = other.exp_;
      levelId_ = other.levelId_;
      wave_ = other.wave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvolveBuildFinishScNotify Clone() {
      return new EvolveBuildFinishScNotify(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 14;
    private uint score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "battle_result_type" field.</summary>
    public const int BattleResultTypeFieldNumber = 8;
    private global::EggLink.DanhengServer.Proto.LJGIADHJLHP battleResultType_ = global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LJGIADHJLHP BattleResultType {
      get { return battleResultType_; }
      set {
        battleResultType_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 2;
    private uint coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "cur_period_type" field.</summary>
    public const int CurPeriodTypeFieldNumber = 11;
    private uint curPeriodType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurPeriodType {
      get { return curPeriodType_; }
      set {
        curPeriodType_ = value;
      }
    }

    /// <summary>Field number for the "level_info" field.</summary>
    public const int LevelInfoFieldNumber = 7;
    private global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfo levelInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfo LevelInfo {
      get { return levelInfo_; }
      set {
        levelInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_lose" field.</summary>
    public const int IsLoseFieldNumber = 12;
    private bool isLose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLose {
      get { return isLose_; }
      set {
        isLose_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private uint exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 1;
    private uint levelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    /// <summary>Field number for the "wave" field.</summary>
    public const int WaveFieldNumber = 6;
    private uint wave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wave {
      get { return wave_; }
      set {
        wave_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EvolveBuildFinishScNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EvolveBuildFinishScNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (BattleResultType != other.BattleResultType) return false;
      if (Coin != other.Coin) return false;
      if (CurPeriodType != other.CurPeriodType) return false;
      if (!object.Equals(LevelInfo, other.LevelInfo)) return false;
      if (IsLose != other.IsLose) return false;
      if (Exp != other.Exp) return false;
      if (LevelId != other.LevelId) return false;
      if (Wave != other.Wave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0) hash ^= Score.GetHashCode();
      if (BattleResultType != global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone) hash ^= BattleResultType.GetHashCode();
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (CurPeriodType != 0) hash ^= CurPeriodType.GetHashCode();
      if (levelInfo_ != null) hash ^= LevelInfo.GetHashCode();
      if (IsLose != false) hash ^= IsLose.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      if (Wave != 0) hash ^= Wave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LevelId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LevelId);
      }
      if (Coin != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Coin);
      }
      if (Exp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Exp);
      }
      if (Wave != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Wave);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LevelInfo);
      }
      if (BattleResultType != global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BattleResultType);
      }
      if (CurPeriodType != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurPeriodType);
      }
      if (IsLose != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsLose);
      }
      if (Score != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LevelId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LevelId);
      }
      if (Coin != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Coin);
      }
      if (Exp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Exp);
      }
      if (Wave != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Wave);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LevelInfo);
      }
      if (BattleResultType != global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BattleResultType);
      }
      if (CurPeriodType != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurPeriodType);
      }
      if (IsLose != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsLose);
      }
      if (Score != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
      }
      if (BattleResultType != global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleResultType);
      }
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Coin);
      }
      if (CurPeriodType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurPeriodType);
      }
      if (levelInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelInfo);
      }
      if (IsLose != false) {
        size += 1 + 1;
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Exp);
      }
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
      }
      if (Wave != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wave);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EvolveBuildFinishScNotify other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.BattleResultType != global::EggLink.DanhengServer.Proto.LJGIADHJLHP.EvolveBattleResultNone) {
        BattleResultType = other.BattleResultType;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      if (other.CurPeriodType != 0) {
        CurPeriodType = other.CurPeriodType;
      }
      if (other.levelInfo_ != null) {
        if (levelInfo_ == null) {
          LevelInfo = new global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfo();
        }
        LevelInfo.MergeFrom(other.LevelInfo);
      }
      if (other.IsLose != false) {
        IsLose = other.IsLose;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
      if (other.Wave != 0) {
        Wave = other.Wave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LevelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Coin = input.ReadUInt32();
            break;
          }
          case 32: {
            Exp = input.ReadUInt32();
            break;
          }
          case 48: {
            Wave = input.ReadUInt32();
            break;
          }
          case 58: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 64: {
            BattleResultType = (global::EggLink.DanhengServer.Proto.LJGIADHJLHP) input.ReadEnum();
            break;
          }
          case 88: {
            CurPeriodType = input.ReadUInt32();
            break;
          }
          case 96: {
            IsLose = input.ReadBool();
            break;
          }
          case 112: {
            Score = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LevelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Coin = input.ReadUInt32();
            break;
          }
          case 32: {
            Exp = input.ReadUInt32();
            break;
          }
          case 48: {
            Wave = input.ReadUInt32();
            break;
          }
          case 58: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.EvolveBuildLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 64: {
            BattleResultType = (global::EggLink.DanhengServer.Proto.LJGIADHJLHP) input.ReadEnum();
            break;
          }
          case 88: {
            CurPeriodType = input.ReadUInt32();
            break;
          }
          case 96: {
            IsLose = input.ReadBool();
            break;
          }
          case 112: {
            Score = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
