// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ItemCost.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ItemCost.proto</summary>
  public static partial class ItemCostReflection {

    #region Descriptor
    /// <summary>File descriptor for ItemCost.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemCostReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5JdGVtQ29zdC5wcm90bxoOUGlsZUl0ZW0ucHJvdG8idQoISXRlbUNvc3QS",
            "HgoJcGlsZV9pdGVtGAogASgLMgkuUGlsZUl0ZW1IABIdChNlcXVpcG1lbnRf",
            "dW5pcXVlX2lkGAUgASgNSAASGQoPcmVsaWNfdW5pcXVlX2lkGAQgASgNSABC",
            "DwoNSXRlbU9uZW9mQ2FzZUIeqgIbRWdnTGluay5EYW5oZW5nU2VydmVyLlBy",
            "b3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.PileItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ItemCost), global::EggLink.DanhengServer.Proto.ItemCost.Parser, new[]{ "PileItem", "EquipmentUniqueId", "RelicUniqueId" }, new[]{ "ItemOneofCase" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemCost : pb::IMessage<ItemCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemCost> _parser = new pb::MessageParser<ItemCost>(() => new ItemCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ItemCostReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemCost(ItemCost other) : this() {
      switch (other.ItemOneofCaseCase) {
        case ItemOneofCaseOneofCase.PileItem:
          PileItem = other.PileItem.Clone();
          break;
        case ItemOneofCaseOneofCase.EquipmentUniqueId:
          EquipmentUniqueId = other.EquipmentUniqueId;
          break;
        case ItemOneofCaseOneofCase.RelicUniqueId:
          RelicUniqueId = other.RelicUniqueId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemCost Clone() {
      return new ItemCost(this);
    }

    /// <summary>Field number for the "pile_item" field.</summary>
    public const int PileItemFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.PileItem PileItem {
      get { return itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem ? (global::EggLink.DanhengServer.Proto.PileItem) itemOneofCase_ : null; }
      set {
        itemOneofCase_ = value;
        itemOneofCaseCase_ = value == null ? ItemOneofCaseOneofCase.None : ItemOneofCaseOneofCase.PileItem;
      }
    }

    /// <summary>Field number for the "equipment_unique_id" field.</summary>
    public const int EquipmentUniqueIdFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EquipmentUniqueId {
      get { return HasEquipmentUniqueId ? (uint) itemOneofCase_ : 0; }
      set {
        itemOneofCase_ = value;
        itemOneofCaseCase_ = ItemOneofCaseOneofCase.EquipmentUniqueId;
      }
    }
    /// <summary>Gets whether the "equipment_unique_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEquipmentUniqueId {
      get { return itemOneofCaseCase_ == ItemOneofCaseOneofCase.EquipmentUniqueId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "equipment_unique_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEquipmentUniqueId() {
      if (HasEquipmentUniqueId) {
        ClearItemOneofCase();
      }
    }

    /// <summary>Field number for the "relic_unique_id" field.</summary>
    public const int RelicUniqueIdFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RelicUniqueId {
      get { return HasRelicUniqueId ? (uint) itemOneofCase_ : 0; }
      set {
        itemOneofCase_ = value;
        itemOneofCaseCase_ = ItemOneofCaseOneofCase.RelicUniqueId;
      }
    }
    /// <summary>Gets whether the "relic_unique_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelicUniqueId {
      get { return itemOneofCaseCase_ == ItemOneofCaseOneofCase.RelicUniqueId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "relic_unique_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelicUniqueId() {
      if (HasRelicUniqueId) {
        ClearItemOneofCase();
      }
    }

    private object itemOneofCase_;
    /// <summary>Enum of possible cases for the "ItemOneofCase" oneof.</summary>
    public enum ItemOneofCaseOneofCase {
      None = 0,
      PileItem = 10,
      EquipmentUniqueId = 5,
      RelicUniqueId = 4,
    }
    private ItemOneofCaseOneofCase itemOneofCaseCase_ = ItemOneofCaseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemOneofCaseOneofCase ItemOneofCaseCase {
      get { return itemOneofCaseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemOneofCase() {
      itemOneofCaseCase_ = ItemOneofCaseOneofCase.None;
      itemOneofCase_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PileItem, other.PileItem)) return false;
      if (EquipmentUniqueId != other.EquipmentUniqueId) return false;
      if (RelicUniqueId != other.RelicUniqueId) return false;
      if (ItemOneofCaseCase != other.ItemOneofCaseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) hash ^= PileItem.GetHashCode();
      if (HasEquipmentUniqueId) hash ^= EquipmentUniqueId.GetHashCode();
      if (HasRelicUniqueId) hash ^= RelicUniqueId.GetHashCode();
      hash ^= (int) itemOneofCaseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRelicUniqueId) {
        output.WriteRawTag(32);
        output.WriteUInt32(RelicUniqueId);
      }
      if (HasEquipmentUniqueId) {
        output.WriteRawTag(40);
        output.WriteUInt32(EquipmentUniqueId);
      }
      if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) {
        output.WriteRawTag(82);
        output.WriteMessage(PileItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRelicUniqueId) {
        output.WriteRawTag(32);
        output.WriteUInt32(RelicUniqueId);
      }
      if (HasEquipmentUniqueId) {
        output.WriteRawTag(40);
        output.WriteUInt32(EquipmentUniqueId);
      }
      if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) {
        output.WriteRawTag(82);
        output.WriteMessage(PileItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PileItem);
      }
      if (HasEquipmentUniqueId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquipmentUniqueId);
      }
      if (HasRelicUniqueId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RelicUniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemCost other) {
      if (other == null) {
        return;
      }
      switch (other.ItemOneofCaseCase) {
        case ItemOneofCaseOneofCase.PileItem:
          if (PileItem == null) {
            PileItem = new global::EggLink.DanhengServer.Proto.PileItem();
          }
          PileItem.MergeFrom(other.PileItem);
          break;
        case ItemOneofCaseOneofCase.EquipmentUniqueId:
          EquipmentUniqueId = other.EquipmentUniqueId;
          break;
        case ItemOneofCaseOneofCase.RelicUniqueId:
          RelicUniqueId = other.RelicUniqueId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            RelicUniqueId = input.ReadUInt32();
            break;
          }
          case 40: {
            EquipmentUniqueId = input.ReadUInt32();
            break;
          }
          case 82: {
            global::EggLink.DanhengServer.Proto.PileItem subBuilder = new global::EggLink.DanhengServer.Proto.PileItem();
            if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) {
              subBuilder.MergeFrom(PileItem);
            }
            input.ReadMessage(subBuilder);
            PileItem = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 32: {
            RelicUniqueId = input.ReadUInt32();
            break;
          }
          case 40: {
            EquipmentUniqueId = input.ReadUInt32();
            break;
          }
          case 82: {
            global::EggLink.DanhengServer.Proto.PileItem subBuilder = new global::EggLink.DanhengServer.Proto.PileItem();
            if (itemOneofCaseCase_ == ItemOneofCaseOneofCase.PileItem) {
              subBuilder.MergeFrom(PileItem);
            }
            input.ReadMessage(subBuilder);
            PileItem = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
