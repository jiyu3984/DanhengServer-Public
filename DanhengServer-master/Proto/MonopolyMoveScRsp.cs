// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonopolyMoveScRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from MonopolyMoveScRsp.proto</summary>
  public static partial class MonopolyMoveScRspReflection {

    #region Descriptor
    /// <summary>File descriptor for MonopolyMoveScRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonopolyMoveScRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdNb25vcG9seU1vdmVTY1JzcC5wcm90bxoRRk9LTkxMS0lDRU8ucHJvdG8a",
            "EU9GSUxCTkJQTEdFLnByb3RvImgKEU1vbm9wb2x5TW92ZVNjUnNwEiEKC0NQ",
            "QUFPQ0lLRE9DGA8gAygLMgwuRk9LTkxMS0lDRU8SDwoHcmV0Y29kZRgBIAEo",
            "DRIfCglyb2d1ZV9tYXAYDCABKAsyDC5PRklMQk5CUExHRUIeqgIbRWdnTGlu",
            "ay5EYW5oZW5nU2VydmVyLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.FOKNLLKICEOReflection.Descriptor, global::EggLink.DanhengServer.Proto.OFILBNBPLGEReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.MonopolyMoveScRsp), global::EggLink.DanhengServer.Proto.MonopolyMoveScRsp.Parser, new[]{ "CPAAOCIKDOC", "Retcode", "RogueMap" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonopolyMoveScRsp : pb::IMessage<MonopolyMoveScRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonopolyMoveScRsp> _parser = new pb::MessageParser<MonopolyMoveScRsp>(() => new MonopolyMoveScRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonopolyMoveScRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.MonopolyMoveScRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMoveScRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMoveScRsp(MonopolyMoveScRsp other) : this() {
      cPAAOCIKDOC_ = other.cPAAOCIKDOC_.Clone();
      retcode_ = other.retcode_;
      rogueMap_ = other.rogueMap_ != null ? other.rogueMap_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonopolyMoveScRsp Clone() {
      return new MonopolyMoveScRsp(this);
    }

    /// <summary>Field number for the "CPAAOCIKDOC" field.</summary>
    public const int CPAAOCIKDOCFieldNumber = 15;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.FOKNLLKICEO> _repeated_cPAAOCIKDOC_codec
        = pb::FieldCodec.ForMessage(122, global::EggLink.DanhengServer.Proto.FOKNLLKICEO.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.FOKNLLKICEO> cPAAOCIKDOC_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.FOKNLLKICEO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.FOKNLLKICEO> CPAAOCIKDOC {
      get { return cPAAOCIKDOC_; }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 1;
    private uint retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "rogue_map" field.</summary>
    public const int RogueMapFieldNumber = 12;
    private global::EggLink.DanhengServer.Proto.OFILBNBPLGE rogueMap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.OFILBNBPLGE RogueMap {
      get { return rogueMap_; }
      set {
        rogueMap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonopolyMoveScRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonopolyMoveScRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cPAAOCIKDOC_.Equals(other.cPAAOCIKDOC_)) return false;
      if (Retcode != other.Retcode) return false;
      if (!object.Equals(RogueMap, other.RogueMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cPAAOCIKDOC_.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (rogueMap_ != null) hash ^= RogueMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Retcode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Retcode);
      }
      if (rogueMap_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RogueMap);
      }
      cPAAOCIKDOC_.WriteTo(output, _repeated_cPAAOCIKDOC_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Retcode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Retcode);
      }
      if (rogueMap_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RogueMap);
      }
      cPAAOCIKDOC_.WriteTo(ref output, _repeated_cPAAOCIKDOC_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cPAAOCIKDOC_.CalculateSize(_repeated_cPAAOCIKDOC_codec);
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Retcode);
      }
      if (rogueMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueMap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonopolyMoveScRsp other) {
      if (other == null) {
        return;
      }
      cPAAOCIKDOC_.Add(other.cPAAOCIKDOC_);
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.rogueMap_ != null) {
        if (rogueMap_ == null) {
          RogueMap = new global::EggLink.DanhengServer.Proto.OFILBNBPLGE();
        }
        RogueMap.MergeFrom(other.RogueMap);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rogueMap_ == null) {
              RogueMap = new global::EggLink.DanhengServer.Proto.OFILBNBPLGE();
            }
            input.ReadMessage(RogueMap);
            break;
          }
          case 122: {
            cPAAOCIKDOC_.AddEntriesFrom(input, _repeated_cPAAOCIKDOC_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Retcode = input.ReadUInt32();
            break;
          }
          case 98: {
            if (rogueMap_ == null) {
              RogueMap = new global::EggLink.DanhengServer.Proto.OFILBNBPLGE();
            }
            input.ReadMessage(RogueMap);
            break;
          }
          case 122: {
            cPAAOCIKDOC_.AddEntriesFrom(ref input, _repeated_cPAAOCIKDOC_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
