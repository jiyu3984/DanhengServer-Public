// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattleOp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from BattleOp.proto</summary>
  public static partial class BattleOpReflection {

    #region Descriptor
    /// <summary>File descriptor for BattleOp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleOpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5CYXR0bGVPcC5wcm90byK5AQoIQmF0dGxlT3ASFAoMdHVybl9jb3VudGVy",
            "GAEgASgNEg0KBXN0YXRlGAIgASgNEhgKEGFjdGlvbl9lbnRpdHlfaWQYAyAB",
            "KA0SGAoQdGFyZ2V0X2VudGl0eV9pZBgEIAEoDRIPCgdvcF90eXBlGAUgASgN",
            "EhMKC3NraWxsX2luZGV4GAYgASgNEhkKEW9wZXJhdGlvbl9jb3VudGVyGAcg",
            "ASgNEhMKC0NLS09QTkhCRk9NGAggASgJQh6qAhtFZ2dMaW5rLkRhbmhlbmdT",
            "ZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.BattleOp), global::EggLink.DanhengServer.Proto.BattleOp.Parser, new[]{ "TurnCounter", "State", "ActionEntityId", "TargetEntityId", "OpType", "SkillIndex", "OperationCounter", "CKKOPNHBFOM" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattleOp : pb::IMessage<BattleOp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleOp> _parser = new pb::MessageParser<BattleOp>(() => new BattleOp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattleOp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.BattleOpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleOp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleOp(BattleOp other) : this() {
      turnCounter_ = other.turnCounter_;
      state_ = other.state_;
      actionEntityId_ = other.actionEntityId_;
      targetEntityId_ = other.targetEntityId_;
      opType_ = other.opType_;
      skillIndex_ = other.skillIndex_;
      operationCounter_ = other.operationCounter_;
      cKKOPNHBFOM_ = other.cKKOPNHBFOM_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleOp Clone() {
      return new BattleOp(this);
    }

    /// <summary>Field number for the "turn_counter" field.</summary>
    public const int TurnCounterFieldNumber = 1;
    private uint turnCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TurnCounter {
      get { return turnCounter_; }
      set {
        turnCounter_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "action_entity_id" field.</summary>
    public const int ActionEntityIdFieldNumber = 3;
    private uint actionEntityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActionEntityId {
      get { return actionEntityId_; }
      set {
        actionEntityId_ = value;
      }
    }

    /// <summary>Field number for the "target_entity_id" field.</summary>
    public const int TargetEntityIdFieldNumber = 4;
    private uint targetEntityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetEntityId {
      get { return targetEntityId_; }
      set {
        targetEntityId_ = value;
      }
    }

    /// <summary>Field number for the "op_type" field.</summary>
    public const int OpTypeFieldNumber = 5;
    private uint opType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OpType {
      get { return opType_; }
      set {
        opType_ = value;
      }
    }

    /// <summary>Field number for the "skill_index" field.</summary>
    public const int SkillIndexFieldNumber = 6;
    private uint skillIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SkillIndex {
      get { return skillIndex_; }
      set {
        skillIndex_ = value;
      }
    }

    /// <summary>Field number for the "operation_counter" field.</summary>
    public const int OperationCounterFieldNumber = 7;
    private uint operationCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OperationCounter {
      get { return operationCounter_; }
      set {
        operationCounter_ = value;
      }
    }

    /// <summary>Field number for the "CKKOPNHBFOM" field.</summary>
    public const int CKKOPNHBFOMFieldNumber = 8;
    private string cKKOPNHBFOM_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CKKOPNHBFOM {
      get { return cKKOPNHBFOM_; }
      set {
        cKKOPNHBFOM_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattleOp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattleOp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TurnCounter != other.TurnCounter) return false;
      if (State != other.State) return false;
      if (ActionEntityId != other.ActionEntityId) return false;
      if (TargetEntityId != other.TargetEntityId) return false;
      if (OpType != other.OpType) return false;
      if (SkillIndex != other.SkillIndex) return false;
      if (OperationCounter != other.OperationCounter) return false;
      if (CKKOPNHBFOM != other.CKKOPNHBFOM) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TurnCounter != 0) hash ^= TurnCounter.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (ActionEntityId != 0) hash ^= ActionEntityId.GetHashCode();
      if (TargetEntityId != 0) hash ^= TargetEntityId.GetHashCode();
      if (OpType != 0) hash ^= OpType.GetHashCode();
      if (SkillIndex != 0) hash ^= SkillIndex.GetHashCode();
      if (OperationCounter != 0) hash ^= OperationCounter.GetHashCode();
      if (CKKOPNHBFOM.Length != 0) hash ^= CKKOPNHBFOM.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TurnCounter != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TurnCounter);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (ActionEntityId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ActionEntityId);
      }
      if (TargetEntityId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TargetEntityId);
      }
      if (OpType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OpType);
      }
      if (SkillIndex != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SkillIndex);
      }
      if (OperationCounter != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(OperationCounter);
      }
      if (CKKOPNHBFOM.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CKKOPNHBFOM);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TurnCounter != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TurnCounter);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (ActionEntityId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ActionEntityId);
      }
      if (TargetEntityId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TargetEntityId);
      }
      if (OpType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OpType);
      }
      if (SkillIndex != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SkillIndex);
      }
      if (OperationCounter != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(OperationCounter);
      }
      if (CKKOPNHBFOM.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CKKOPNHBFOM);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TurnCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TurnCounter);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (ActionEntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionEntityId);
      }
      if (TargetEntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetEntityId);
      }
      if (OpType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OpType);
      }
      if (SkillIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkillIndex);
      }
      if (OperationCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OperationCounter);
      }
      if (CKKOPNHBFOM.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CKKOPNHBFOM);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattleOp other) {
      if (other == null) {
        return;
      }
      if (other.TurnCounter != 0) {
        TurnCounter = other.TurnCounter;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.ActionEntityId != 0) {
        ActionEntityId = other.ActionEntityId;
      }
      if (other.TargetEntityId != 0) {
        TargetEntityId = other.TargetEntityId;
      }
      if (other.OpType != 0) {
        OpType = other.OpType;
      }
      if (other.SkillIndex != 0) {
        SkillIndex = other.SkillIndex;
      }
      if (other.OperationCounter != 0) {
        OperationCounter = other.OperationCounter;
      }
      if (other.CKKOPNHBFOM.Length != 0) {
        CKKOPNHBFOM = other.CKKOPNHBFOM;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TurnCounter = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
          case 24: {
            ActionEntityId = input.ReadUInt32();
            break;
          }
          case 32: {
            TargetEntityId = input.ReadUInt32();
            break;
          }
          case 40: {
            OpType = input.ReadUInt32();
            break;
          }
          case 48: {
            SkillIndex = input.ReadUInt32();
            break;
          }
          case 56: {
            OperationCounter = input.ReadUInt32();
            break;
          }
          case 66: {
            CKKOPNHBFOM = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TurnCounter = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
          case 24: {
            ActionEntityId = input.ReadUInt32();
            break;
          }
          case 32: {
            TargetEntityId = input.ReadUInt32();
            break;
          }
          case 40: {
            OpType = input.ReadUInt32();
            break;
          }
          case 48: {
            SkillIndex = input.ReadUInt32();
            break;
          }
          case 56: {
            OperationCounter = input.ReadUInt32();
            break;
          }
          case 66: {
            CKKOPNHBFOM = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
