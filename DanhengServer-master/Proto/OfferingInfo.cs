// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OfferingInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from OfferingInfo.proto</summary>
  public static partial class OfferingInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for OfferingInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OfferingInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJPZmZlcmluZ0luZm8ucHJvdG8aE09mZmVyaW5nU3RhdGUucHJvdG8iqwEK",
            "DE9mZmVyaW5nSW5mbxIWCg5vZmZlcmluZ19sZXZlbBgKIAEoDRIgChhoYXNf",
            "dGFrZW5fcmV3YXJkX2lkX2xpc3QYCyADKA0SEQoJdG90YWxfZXhwGAQgASgN",
            "EhMKC29mZmVyaW5nX2lkGAEgASgNEhEKCWxldmVsX2V4cBgHIAEoDRImCg5v",
            "ZmZlcmluZ19zdGF0ZRgPIAEoDjIOLk9mZmVyaW5nU3RhdGVCHqoCG0VnZ0xp",
            "bmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.OfferingStateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.OfferingInfo), global::EggLink.DanhengServer.Proto.OfferingInfo.Parser, new[]{ "OfferingLevel", "HasTakenRewardIdList", "TotalExp", "OfferingId", "LevelExp", "OfferingState" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OfferingInfo : pb::IMessage<OfferingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfferingInfo> _parser = new pb::MessageParser<OfferingInfo>(() => new OfferingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfferingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.OfferingInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfferingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfferingInfo(OfferingInfo other) : this() {
      offeringLevel_ = other.offeringLevel_;
      hasTakenRewardIdList_ = other.hasTakenRewardIdList_.Clone();
      totalExp_ = other.totalExp_;
      offeringId_ = other.offeringId_;
      levelExp_ = other.levelExp_;
      offeringState_ = other.offeringState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfferingInfo Clone() {
      return new OfferingInfo(this);
    }

    /// <summary>Field number for the "offering_level" field.</summary>
    public const int OfferingLevelFieldNumber = 10;
    private uint offeringLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferingLevel {
      get { return offeringLevel_; }
      set {
        offeringLevel_ = value;
      }
    }

    /// <summary>Field number for the "has_taken_reward_id_list" field.</summary>
    public const int HasTakenRewardIdListFieldNumber = 11;
    private static readonly pb::FieldCodec<uint> _repeated_hasTakenRewardIdList_codec
        = pb::FieldCodec.ForUInt32(90);
    private readonly pbc::RepeatedField<uint> hasTakenRewardIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> HasTakenRewardIdList {
      get { return hasTakenRewardIdList_; }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 4;
    private uint totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "offering_id" field.</summary>
    public const int OfferingIdFieldNumber = 1;
    private uint offeringId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferingId {
      get { return offeringId_; }
      set {
        offeringId_ = value;
      }
    }

    /// <summary>Field number for the "level_exp" field.</summary>
    public const int LevelExpFieldNumber = 7;
    private uint levelExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LevelExp {
      get { return levelExp_; }
      set {
        levelExp_ = value;
      }
    }

    /// <summary>Field number for the "offering_state" field.</summary>
    public const int OfferingStateFieldNumber = 15;
    private global::EggLink.DanhengServer.Proto.OfferingState offeringState_ = global::EggLink.DanhengServer.Proto.OfferingState.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.OfferingState OfferingState {
      get { return offeringState_; }
      set {
        offeringState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfferingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfferingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferingLevel != other.OfferingLevel) return false;
      if(!hasTakenRewardIdList_.Equals(other.hasTakenRewardIdList_)) return false;
      if (TotalExp != other.TotalExp) return false;
      if (OfferingId != other.OfferingId) return false;
      if (LevelExp != other.LevelExp) return false;
      if (OfferingState != other.OfferingState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferingLevel != 0) hash ^= OfferingLevel.GetHashCode();
      hash ^= hasTakenRewardIdList_.GetHashCode();
      if (TotalExp != 0) hash ^= TotalExp.GetHashCode();
      if (OfferingId != 0) hash ^= OfferingId.GetHashCode();
      if (LevelExp != 0) hash ^= LevelExp.GetHashCode();
      if (OfferingState != global::EggLink.DanhengServer.Proto.OfferingState.None) hash ^= OfferingState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OfferingId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(OfferingId);
      }
      if (TotalExp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalExp);
      }
      if (LevelExp != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(LevelExp);
      }
      if (OfferingLevel != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(OfferingLevel);
      }
      hasTakenRewardIdList_.WriteTo(output, _repeated_hasTakenRewardIdList_codec);
      if (OfferingState != global::EggLink.DanhengServer.Proto.OfferingState.None) {
        output.WriteRawTag(120);
        output.WriteEnum((int) OfferingState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OfferingId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(OfferingId);
      }
      if (TotalExp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TotalExp);
      }
      if (LevelExp != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(LevelExp);
      }
      if (OfferingLevel != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(OfferingLevel);
      }
      hasTakenRewardIdList_.WriteTo(ref output, _repeated_hasTakenRewardIdList_codec);
      if (OfferingState != global::EggLink.DanhengServer.Proto.OfferingState.None) {
        output.WriteRawTag(120);
        output.WriteEnum((int) OfferingState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OfferingLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OfferingLevel);
      }
      size += hasTakenRewardIdList_.CalculateSize(_repeated_hasTakenRewardIdList_codec);
      if (TotalExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalExp);
      }
      if (OfferingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OfferingId);
      }
      if (LevelExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelExp);
      }
      if (OfferingState != global::EggLink.DanhengServer.Proto.OfferingState.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OfferingState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfferingInfo other) {
      if (other == null) {
        return;
      }
      if (other.OfferingLevel != 0) {
        OfferingLevel = other.OfferingLevel;
      }
      hasTakenRewardIdList_.Add(other.hasTakenRewardIdList_);
      if (other.TotalExp != 0) {
        TotalExp = other.TotalExp;
      }
      if (other.OfferingId != 0) {
        OfferingId = other.OfferingId;
      }
      if (other.LevelExp != 0) {
        LevelExp = other.LevelExp;
      }
      if (other.OfferingState != global::EggLink.DanhengServer.Proto.OfferingState.None) {
        OfferingState = other.OfferingState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OfferingId = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalExp = input.ReadUInt32();
            break;
          }
          case 56: {
            LevelExp = input.ReadUInt32();
            break;
          }
          case 80: {
            OfferingLevel = input.ReadUInt32();
            break;
          }
          case 90:
          case 88: {
            hasTakenRewardIdList_.AddEntriesFrom(input, _repeated_hasTakenRewardIdList_codec);
            break;
          }
          case 120: {
            OfferingState = (global::EggLink.DanhengServer.Proto.OfferingState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OfferingId = input.ReadUInt32();
            break;
          }
          case 32: {
            TotalExp = input.ReadUInt32();
            break;
          }
          case 56: {
            LevelExp = input.ReadUInt32();
            break;
          }
          case 80: {
            OfferingLevel = input.ReadUInt32();
            break;
          }
          case 90:
          case 88: {
            hasTakenRewardIdList_.AddEntriesFrom(ref input, _repeated_hasTakenRewardIdList_codec);
            break;
          }
          case 120: {
            OfferingState = (global::EggLink.DanhengServer.Proto.OfferingState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
