// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AvatarBattleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from AvatarBattleInfo.proto</summary>
  public static partial class AvatarBattleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for AvatarBattleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AvatarBattleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZBdmF0YXJCYXR0bGVJbmZvLnByb3RvGhFTcEFkZFNvdXJjZS5wcm90bxoV",
            "QXZhdGFyU2tpbGxUcmVlLnByb3RvGhpBdHRhY2tEYW1hZ2VQcm9wZXJ0eS5w",
            "cm90bxoRQmF0dGxlUmVsaWMucHJvdG8aF0VxdWlwbWVudFByb3BlcnR5LnBy",
            "b3RvGhRBdmF0YXJQcm9wZXJ0eS5wcm90bxoTQWJpbGl0eVVzZVN0dC5wcm90",
            "bxoQQXZhdGFyVHlwZS5wcm90bxoWU2tpbGxVc2VQcm9wZXJ0eS5wcm90byK5",
            "CwoQQXZhdGFyQmF0dGxlSW5mbxIgCgthdmF0YXJfdHlwZRgBIAEoDjILLkF2",
            "YXRhclR5cGUSCgoCaWQYAiABKA0SFAoMYXZhdGFyX2xldmVsGAMgASgNEhMK",
            "C2F2YXRhcl9yYW5rGAQgASgNEhgKEGF2YXRhcl9wcm9tb3Rpb24YBSABKA0S",
            "JgoNYXZhdGFyX3N0YXR1cxgGIAEoCzIPLkF2YXRhclByb3BlcnR5EiYKDGF2",
            "YXRhcl9za2lsbBgHIAMoCzIQLkF2YXRhclNraWxsVHJlZRIsChBhdmF0YXJf",
            "ZXF1aXBtZW50GAggAygLMhIuRXF1aXBtZW50UHJvcGVydHkSEwoLdG90YWxf",
            "dHVybnMYCSABKA0SFAoMdG90YWxfZGFtYWdlGAogASgBEhIKCnRvdGFsX2hl",
            "YWwYCyABKAESGgoSdG90YWxfZGFtYWdlX3Rha2VuGAwgASgBEhgKEHRvdGFs",
            "X2hwX3JlY292ZXIYDSABKAESFQoNdG90YWxfc3BfY29zdBgOIAEoARIQCghz",
            "dGFnZV9pZBgPIAEoDRISCgpzdGFnZV90eXBlGBAgASgNEhoKEnRvdGFsX2Jy",
            "ZWFrX2RhbWFnZRgRIAEoARIxChJhdHRhY2tfdHlwZV9kYW1hZ2UYEiADKAsy",
            "FS5BdHRhY2tEYW1hZ2VQcm9wZXJ0eRI3ChhhdHRhY2tfdHlwZV9icmVha19k",
            "YW1hZ2UYEyADKAsyFS5BdHRhY2tEYW1hZ2VQcm9wZXJ0eRI1ChZhdHRhY2tf",
            "dHlwZV9tYXhfZGFtYWdlGBQgAygLMhUuQXR0YWNrRGFtYWdlUHJvcGVydHkS",
            "JgoLc2tpbGxfdGltZXMYFSADKAsyES5Ta2lsbFVzZVByb3BlcnR5EhYKDmRl",
            "bGF5X2N1bXVsYXRlGBYgASgBEhQKDHRvdGFsX3NwX2FkZBgXIAEoDRIjCg1z",
            "cF9hZGRfc291cmNlGBggAygLMgwuU3BBZGRTb3VyY2USFQoNdG90YWxfYnBf",
            "Y29zdBgZIAEoDRIRCglkaWVfdGltZXMYGiABKA0SFAoMcmV2aXZlX3RpbWVz",
            "GBsgASgNEhMKC2JyZWFrX3RpbWVzGBwgASgNEhMKC2V4dHJhX3R1cm5zGB0g",
            "ASgNEhQKDHRvdGFsX3NoaWVsZBgeIAEoARIaChJ0b3RhbF9zaGllbGRfdGFr",
            "ZW4YHyABKAESGwoTdG90YWxfc2hpZWxkX2RhbWFnZRggIAEoARInCg5pbml0",
            "aWFsX3N0YXR1cxghIAEoCzIPLkF2YXRhclByb3BlcnR5EhwKBnJlbGljcxgi",
            "IAMoCzIMLkJhdHRsZVJlbGljEhIKCmFzc2lzdF91aWQYIyABKA0SKgoLSkVB",
            "Qk1DSk1IS0cYJCADKAsyFS5BdHRhY2tEYW1hZ2VQcm9wZXJ0eRITCgtMTkFQ",
            "QU9OR0dJSRglIAEoARITCgtEQUdCQ01BUFBFQhgmIAEoARITCgtMQU1KRU5J",
            "Q0ZQSRgnIAEoARITCgtGQlBOQkNDSkFDTBgoIAEoARIjCgtIQ0lJSEJGSklG",
            "RRgpIAMoCzIOLkFiaWxpdHlVc2VTdHQSEwoLSk9PQkRBSU1CSkUYKiABKA0S",
            "EwoLT0FKQUNLSkpDR1AYKyABKA0SEwoLSktFSElNR0JEQUYYLCABKAESEwoL",
            "SEhDTU9OS0pMS0MYLSABKAESEwoLT0tETkFJUExFQUoYLiABKAESEwoLTUpE",
            "QkFNSUtQTU0YLyABKAESEwoLQkZERE1OSEFDRE8YMCABKAESEwoLTktFRU1M",
            "SEtPT0wYMSABKA0SEwoLQ0tMTkRMSUxJUEwYMiABKA0SEwoLQUpGREVETExB",
            "S04YMyABKA0SEwoLR0JNRUJIUERJQ0cYNCABKAESEwoLSkhFQUhLSEtDR0oY",
            "NSABKA0SEwoLSUpOSkZGSE9OQUkYNiABKA1CHqoCG0VnZ0xpbmsuRGFuaGVu",
            "Z1NlcnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.SpAddSourceReflection.Descriptor, global::EggLink.DanhengServer.Proto.AvatarSkillTreeReflection.Descriptor, global::EggLink.DanhengServer.Proto.AttackDamagePropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.BattleRelicReflection.Descriptor, global::EggLink.DanhengServer.Proto.EquipmentPropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.AvatarPropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.AbilityUseSttReflection.Descriptor, global::EggLink.DanhengServer.Proto.AvatarTypeReflection.Descriptor, global::EggLink.DanhengServer.Proto.SkillUsePropertyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.AvatarBattleInfo), global::EggLink.DanhengServer.Proto.AvatarBattleInfo.Parser, new[]{ "AvatarType", "Id", "AvatarLevel", "AvatarRank", "AvatarPromotion", "AvatarStatus", "AvatarSkill", "AvatarEquipment", "TotalTurns", "TotalDamage", "TotalHeal", "TotalDamageTaken", "TotalHpRecover", "TotalSpCost", "StageId", "StageType", "TotalBreakDamage", "AttackTypeDamage", "AttackTypeBreakDamage", "AttackTypeMaxDamage", "SkillTimes", "DelayCumulate", "TotalSpAdd", "SpAddSource", "TotalBpCost", "DieTimes", "ReviveTimes", "BreakTimes", "ExtraTurns", "TotalShield", "TotalShieldTaken", "TotalShieldDamage", "InitialStatus", "Relics", "AssistUid", "JEABMCJMHKG", "LNAPAONGGII", "DAGBCMAPPEB", "LAMJENICFPI", "FBPNBCCJACL", "HCIIHBFJIFE", "JOOBDAIMBJE", "OAJACKJJCGP", "JKEHIMGBDAF", "HHCMONKJLKC", "OKDNAIPLEAJ", "MJDBAMIKPMM", "BFDDMNHACDO", "NKEEMLHKOOL", "CKLNDLILIPL", "AJFDEDLLAKN", "GBMEBHPDICG", "JHEAHKHKCGJ", "IJNJFFHONAI" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AvatarBattleInfo : pb::IMessage<AvatarBattleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvatarBattleInfo> _parser = new pb::MessageParser<AvatarBattleInfo>(() => new AvatarBattleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AvatarBattleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.AvatarBattleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvatarBattleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvatarBattleInfo(AvatarBattleInfo other) : this() {
      avatarType_ = other.avatarType_;
      id_ = other.id_;
      avatarLevel_ = other.avatarLevel_;
      avatarRank_ = other.avatarRank_;
      avatarPromotion_ = other.avatarPromotion_;
      avatarStatus_ = other.avatarStatus_ != null ? other.avatarStatus_.Clone() : null;
      avatarSkill_ = other.avatarSkill_.Clone();
      avatarEquipment_ = other.avatarEquipment_.Clone();
      totalTurns_ = other.totalTurns_;
      totalDamage_ = other.totalDamage_;
      totalHeal_ = other.totalHeal_;
      totalDamageTaken_ = other.totalDamageTaken_;
      totalHpRecover_ = other.totalHpRecover_;
      totalSpCost_ = other.totalSpCost_;
      stageId_ = other.stageId_;
      stageType_ = other.stageType_;
      totalBreakDamage_ = other.totalBreakDamage_;
      attackTypeDamage_ = other.attackTypeDamage_.Clone();
      attackTypeBreakDamage_ = other.attackTypeBreakDamage_.Clone();
      attackTypeMaxDamage_ = other.attackTypeMaxDamage_.Clone();
      skillTimes_ = other.skillTimes_.Clone();
      delayCumulate_ = other.delayCumulate_;
      totalSpAdd_ = other.totalSpAdd_;
      spAddSource_ = other.spAddSource_.Clone();
      totalBpCost_ = other.totalBpCost_;
      dieTimes_ = other.dieTimes_;
      reviveTimes_ = other.reviveTimes_;
      breakTimes_ = other.breakTimes_;
      extraTurns_ = other.extraTurns_;
      totalShield_ = other.totalShield_;
      totalShieldTaken_ = other.totalShieldTaken_;
      totalShieldDamage_ = other.totalShieldDamage_;
      initialStatus_ = other.initialStatus_ != null ? other.initialStatus_.Clone() : null;
      relics_ = other.relics_.Clone();
      assistUid_ = other.assistUid_;
      jEABMCJMHKG_ = other.jEABMCJMHKG_.Clone();
      lNAPAONGGII_ = other.lNAPAONGGII_;
      dAGBCMAPPEB_ = other.dAGBCMAPPEB_;
      lAMJENICFPI_ = other.lAMJENICFPI_;
      fBPNBCCJACL_ = other.fBPNBCCJACL_;
      hCIIHBFJIFE_ = other.hCIIHBFJIFE_.Clone();
      jOOBDAIMBJE_ = other.jOOBDAIMBJE_;
      oAJACKJJCGP_ = other.oAJACKJJCGP_;
      jKEHIMGBDAF_ = other.jKEHIMGBDAF_;
      hHCMONKJLKC_ = other.hHCMONKJLKC_;
      oKDNAIPLEAJ_ = other.oKDNAIPLEAJ_;
      mJDBAMIKPMM_ = other.mJDBAMIKPMM_;
      bFDDMNHACDO_ = other.bFDDMNHACDO_;
      nKEEMLHKOOL_ = other.nKEEMLHKOOL_;
      cKLNDLILIPL_ = other.cKLNDLILIPL_;
      aJFDEDLLAKN_ = other.aJFDEDLLAKN_;
      gBMEBHPDICG_ = other.gBMEBHPDICG_;
      jHEAHKHKCGJ_ = other.jHEAHKHKCGJ_;
      iJNJFFHONAI_ = other.iJNJFFHONAI_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AvatarBattleInfo Clone() {
      return new AvatarBattleInfo(this);
    }

    /// <summary>Field number for the "avatar_type" field.</summary>
    public const int AvatarTypeFieldNumber = 1;
    private global::EggLink.DanhengServer.Proto.AvatarType avatarType_ = global::EggLink.DanhengServer.Proto.AvatarType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.AvatarType AvatarType {
      get { return avatarType_; }
      set {
        avatarType_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "avatar_level" field.</summary>
    public const int AvatarLevelFieldNumber = 3;
    private uint avatarLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarLevel {
      get { return avatarLevel_; }
      set {
        avatarLevel_ = value;
      }
    }

    /// <summary>Field number for the "avatar_rank" field.</summary>
    public const int AvatarRankFieldNumber = 4;
    private uint avatarRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarRank {
      get { return avatarRank_; }
      set {
        avatarRank_ = value;
      }
    }

    /// <summary>Field number for the "avatar_promotion" field.</summary>
    public const int AvatarPromotionFieldNumber = 5;
    private uint avatarPromotion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarPromotion {
      get { return avatarPromotion_; }
      set {
        avatarPromotion_ = value;
      }
    }

    /// <summary>Field number for the "avatar_status" field.</summary>
    public const int AvatarStatusFieldNumber = 6;
    private global::EggLink.DanhengServer.Proto.AvatarProperty avatarStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.AvatarProperty AvatarStatus {
      get { return avatarStatus_; }
      set {
        avatarStatus_ = value;
      }
    }

    /// <summary>Field number for the "avatar_skill" field.</summary>
    public const int AvatarSkillFieldNumber = 7;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AvatarSkillTree> _repeated_avatarSkill_codec
        = pb::FieldCodec.ForMessage(58, global::EggLink.DanhengServer.Proto.AvatarSkillTree.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree> avatarSkill_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AvatarSkillTree> AvatarSkill {
      get { return avatarSkill_; }
    }

    /// <summary>Field number for the "avatar_equipment" field.</summary>
    public const int AvatarEquipmentFieldNumber = 8;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.EquipmentProperty> _repeated_avatarEquipment_codec
        = pb::FieldCodec.ForMessage(66, global::EggLink.DanhengServer.Proto.EquipmentProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipmentProperty> avatarEquipment_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipmentProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.EquipmentProperty> AvatarEquipment {
      get { return avatarEquipment_; }
    }

    /// <summary>Field number for the "total_turns" field.</summary>
    public const int TotalTurnsFieldNumber = 9;
    private uint totalTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalTurns {
      get { return totalTurns_; }
      set {
        totalTurns_ = value;
      }
    }

    /// <summary>Field number for the "total_damage" field.</summary>
    public const int TotalDamageFieldNumber = 10;
    private double totalDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalDamage {
      get { return totalDamage_; }
      set {
        totalDamage_ = value;
      }
    }

    /// <summary>Field number for the "total_heal" field.</summary>
    public const int TotalHealFieldNumber = 11;
    private double totalHeal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalHeal {
      get { return totalHeal_; }
      set {
        totalHeal_ = value;
      }
    }

    /// <summary>Field number for the "total_damage_taken" field.</summary>
    public const int TotalDamageTakenFieldNumber = 12;
    private double totalDamageTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalDamageTaken {
      get { return totalDamageTaken_; }
      set {
        totalDamageTaken_ = value;
      }
    }

    /// <summary>Field number for the "total_hp_recover" field.</summary>
    public const int TotalHpRecoverFieldNumber = 13;
    private double totalHpRecover_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalHpRecover {
      get { return totalHpRecover_; }
      set {
        totalHpRecover_ = value;
      }
    }

    /// <summary>Field number for the "total_sp_cost" field.</summary>
    public const int TotalSpCostFieldNumber = 14;
    private double totalSpCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalSpCost {
      get { return totalSpCost_; }
      set {
        totalSpCost_ = value;
      }
    }

    /// <summary>Field number for the "stage_id" field.</summary>
    public const int StageIdFieldNumber = 15;
    private uint stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "stage_type" field.</summary>
    public const int StageTypeFieldNumber = 16;
    private uint stageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageType {
      get { return stageType_; }
      set {
        stageType_ = value;
      }
    }

    /// <summary>Field number for the "total_break_damage" field.</summary>
    public const int TotalBreakDamageFieldNumber = 17;
    private double totalBreakDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalBreakDamage {
      get { return totalBreakDamage_; }
      set {
        totalBreakDamage_ = value;
      }
    }

    /// <summary>Field number for the "attack_type_damage" field.</summary>
    public const int AttackTypeDamageFieldNumber = 18;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AttackDamageProperty> _repeated_attackTypeDamage_codec
        = pb::FieldCodec.ForMessage(146, global::EggLink.DanhengServer.Proto.AttackDamageProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> attackTypeDamage_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> AttackTypeDamage {
      get { return attackTypeDamage_; }
    }

    /// <summary>Field number for the "attack_type_break_damage" field.</summary>
    public const int AttackTypeBreakDamageFieldNumber = 19;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AttackDamageProperty> _repeated_attackTypeBreakDamage_codec
        = pb::FieldCodec.ForMessage(154, global::EggLink.DanhengServer.Proto.AttackDamageProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> attackTypeBreakDamage_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> AttackTypeBreakDamage {
      get { return attackTypeBreakDamage_; }
    }

    /// <summary>Field number for the "attack_type_max_damage" field.</summary>
    public const int AttackTypeMaxDamageFieldNumber = 20;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AttackDamageProperty> _repeated_attackTypeMaxDamage_codec
        = pb::FieldCodec.ForMessage(162, global::EggLink.DanhengServer.Proto.AttackDamageProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> attackTypeMaxDamage_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> AttackTypeMaxDamage {
      get { return attackTypeMaxDamage_; }
    }

    /// <summary>Field number for the "skill_times" field.</summary>
    public const int SkillTimesFieldNumber = 21;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.SkillUseProperty> _repeated_skillTimes_codec
        = pb::FieldCodec.ForMessage(170, global::EggLink.DanhengServer.Proto.SkillUseProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty> skillTimes_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty> SkillTimes {
      get { return skillTimes_; }
    }

    /// <summary>Field number for the "delay_cumulate" field.</summary>
    public const int DelayCumulateFieldNumber = 22;
    private double delayCumulate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DelayCumulate {
      get { return delayCumulate_; }
      set {
        delayCumulate_ = value;
      }
    }

    /// <summary>Field number for the "total_sp_add" field.</summary>
    public const int TotalSpAddFieldNumber = 23;
    private uint totalSpAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalSpAdd {
      get { return totalSpAdd_; }
      set {
        totalSpAdd_ = value;
      }
    }

    /// <summary>Field number for the "sp_add_source" field.</summary>
    public const int SpAddSourceFieldNumber = 24;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.SpAddSource> _repeated_spAddSource_codec
        = pb::FieldCodec.ForMessage(194, global::EggLink.DanhengServer.Proto.SpAddSource.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SpAddSource> spAddSource_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SpAddSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SpAddSource> SpAddSource {
      get { return spAddSource_; }
    }

    /// <summary>Field number for the "total_bp_cost" field.</summary>
    public const int TotalBpCostFieldNumber = 25;
    private uint totalBpCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalBpCost {
      get { return totalBpCost_; }
      set {
        totalBpCost_ = value;
      }
    }

    /// <summary>Field number for the "die_times" field.</summary>
    public const int DieTimesFieldNumber = 26;
    private uint dieTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DieTimes {
      get { return dieTimes_; }
      set {
        dieTimes_ = value;
      }
    }

    /// <summary>Field number for the "revive_times" field.</summary>
    public const int ReviveTimesFieldNumber = 27;
    private uint reviveTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReviveTimes {
      get { return reviveTimes_; }
      set {
        reviveTimes_ = value;
      }
    }

    /// <summary>Field number for the "break_times" field.</summary>
    public const int BreakTimesFieldNumber = 28;
    private uint breakTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BreakTimes {
      get { return breakTimes_; }
      set {
        breakTimes_ = value;
      }
    }

    /// <summary>Field number for the "extra_turns" field.</summary>
    public const int ExtraTurnsFieldNumber = 29;
    private uint extraTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExtraTurns {
      get { return extraTurns_; }
      set {
        extraTurns_ = value;
      }
    }

    /// <summary>Field number for the "total_shield" field.</summary>
    public const int TotalShieldFieldNumber = 30;
    private double totalShield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalShield {
      get { return totalShield_; }
      set {
        totalShield_ = value;
      }
    }

    /// <summary>Field number for the "total_shield_taken" field.</summary>
    public const int TotalShieldTakenFieldNumber = 31;
    private double totalShieldTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalShieldTaken {
      get { return totalShieldTaken_; }
      set {
        totalShieldTaken_ = value;
      }
    }

    /// <summary>Field number for the "total_shield_damage" field.</summary>
    public const int TotalShieldDamageFieldNumber = 32;
    private double totalShieldDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalShieldDamage {
      get { return totalShieldDamage_; }
      set {
        totalShieldDamage_ = value;
      }
    }

    /// <summary>Field number for the "initial_status" field.</summary>
    public const int InitialStatusFieldNumber = 33;
    private global::EggLink.DanhengServer.Proto.AvatarProperty initialStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.AvatarProperty InitialStatus {
      get { return initialStatus_; }
      set {
        initialStatus_ = value;
      }
    }

    /// <summary>Field number for the "relics" field.</summary>
    public const int RelicsFieldNumber = 34;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.BattleRelic> _repeated_relics_codec
        = pb::FieldCodec.ForMessage(274, global::EggLink.DanhengServer.Proto.BattleRelic.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleRelic> relics_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleRelic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.BattleRelic> Relics {
      get { return relics_; }
    }

    /// <summary>Field number for the "assist_uid" field.</summary>
    public const int AssistUidFieldNumber = 35;
    private uint assistUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AssistUid {
      get { return assistUid_; }
      set {
        assistUid_ = value;
      }
    }

    /// <summary>Field number for the "JEABMCJMHKG" field.</summary>
    public const int JEABMCJMHKGFieldNumber = 36;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AttackDamageProperty> _repeated_jEABMCJMHKG_codec
        = pb::FieldCodec.ForMessage(290, global::EggLink.DanhengServer.Proto.AttackDamageProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> jEABMCJMHKG_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> JEABMCJMHKG {
      get { return jEABMCJMHKG_; }
    }

    /// <summary>Field number for the "LNAPAONGGII" field.</summary>
    public const int LNAPAONGGIIFieldNumber = 37;
    private double lNAPAONGGII_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LNAPAONGGII {
      get { return lNAPAONGGII_; }
      set {
        lNAPAONGGII_ = value;
      }
    }

    /// <summary>Field number for the "DAGBCMAPPEB" field.</summary>
    public const int DAGBCMAPPEBFieldNumber = 38;
    private double dAGBCMAPPEB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DAGBCMAPPEB {
      get { return dAGBCMAPPEB_; }
      set {
        dAGBCMAPPEB_ = value;
      }
    }

    /// <summary>Field number for the "LAMJENICFPI" field.</summary>
    public const int LAMJENICFPIFieldNumber = 39;
    private double lAMJENICFPI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LAMJENICFPI {
      get { return lAMJENICFPI_; }
      set {
        lAMJENICFPI_ = value;
      }
    }

    /// <summary>Field number for the "FBPNBCCJACL" field.</summary>
    public const int FBPNBCCJACLFieldNumber = 40;
    private double fBPNBCCJACL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FBPNBCCJACL {
      get { return fBPNBCCJACL_; }
      set {
        fBPNBCCJACL_ = value;
      }
    }

    /// <summary>Field number for the "HCIIHBFJIFE" field.</summary>
    public const int HCIIHBFJIFEFieldNumber = 41;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AbilityUseStt> _repeated_hCIIHBFJIFE_codec
        = pb::FieldCodec.ForMessage(330, global::EggLink.DanhengServer.Proto.AbilityUseStt.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AbilityUseStt> hCIIHBFJIFE_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AbilityUseStt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AbilityUseStt> HCIIHBFJIFE {
      get { return hCIIHBFJIFE_; }
    }

    /// <summary>Field number for the "JOOBDAIMBJE" field.</summary>
    public const int JOOBDAIMBJEFieldNumber = 42;
    private uint jOOBDAIMBJE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint JOOBDAIMBJE {
      get { return jOOBDAIMBJE_; }
      set {
        jOOBDAIMBJE_ = value;
      }
    }

    /// <summary>Field number for the "OAJACKJJCGP" field.</summary>
    public const int OAJACKJJCGPFieldNumber = 43;
    private uint oAJACKJJCGP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OAJACKJJCGP {
      get { return oAJACKJJCGP_; }
      set {
        oAJACKJJCGP_ = value;
      }
    }

    /// <summary>Field number for the "JKEHIMGBDAF" field.</summary>
    public const int JKEHIMGBDAFFieldNumber = 44;
    private double jKEHIMGBDAF_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double JKEHIMGBDAF {
      get { return jKEHIMGBDAF_; }
      set {
        jKEHIMGBDAF_ = value;
      }
    }

    /// <summary>Field number for the "HHCMONKJLKC" field.</summary>
    public const int HHCMONKJLKCFieldNumber = 45;
    private double hHCMONKJLKC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HHCMONKJLKC {
      get { return hHCMONKJLKC_; }
      set {
        hHCMONKJLKC_ = value;
      }
    }

    /// <summary>Field number for the "OKDNAIPLEAJ" field.</summary>
    public const int OKDNAIPLEAJFieldNumber = 46;
    private double oKDNAIPLEAJ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OKDNAIPLEAJ {
      get { return oKDNAIPLEAJ_; }
      set {
        oKDNAIPLEAJ_ = value;
      }
    }

    /// <summary>Field number for the "MJDBAMIKPMM" field.</summary>
    public const int MJDBAMIKPMMFieldNumber = 47;
    private double mJDBAMIKPMM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MJDBAMIKPMM {
      get { return mJDBAMIKPMM_; }
      set {
        mJDBAMIKPMM_ = value;
      }
    }

    /// <summary>Field number for the "BFDDMNHACDO" field.</summary>
    public const int BFDDMNHACDOFieldNumber = 48;
    private double bFDDMNHACDO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double BFDDMNHACDO {
      get { return bFDDMNHACDO_; }
      set {
        bFDDMNHACDO_ = value;
      }
    }

    /// <summary>Field number for the "NKEEMLHKOOL" field.</summary>
    public const int NKEEMLHKOOLFieldNumber = 49;
    private uint nKEEMLHKOOL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NKEEMLHKOOL {
      get { return nKEEMLHKOOL_; }
      set {
        nKEEMLHKOOL_ = value;
      }
    }

    /// <summary>Field number for the "CKLNDLILIPL" field.</summary>
    public const int CKLNDLILIPLFieldNumber = 50;
    private uint cKLNDLILIPL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CKLNDLILIPL {
      get { return cKLNDLILIPL_; }
      set {
        cKLNDLILIPL_ = value;
      }
    }

    /// <summary>Field number for the "AJFDEDLLAKN" field.</summary>
    public const int AJFDEDLLAKNFieldNumber = 51;
    private uint aJFDEDLLAKN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AJFDEDLLAKN {
      get { return aJFDEDLLAKN_; }
      set {
        aJFDEDLLAKN_ = value;
      }
    }

    /// <summary>Field number for the "GBMEBHPDICG" field.</summary>
    public const int GBMEBHPDICGFieldNumber = 52;
    private double gBMEBHPDICG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double GBMEBHPDICG {
      get { return gBMEBHPDICG_; }
      set {
        gBMEBHPDICG_ = value;
      }
    }

    /// <summary>Field number for the "JHEAHKHKCGJ" field.</summary>
    public const int JHEAHKHKCGJFieldNumber = 53;
    private uint jHEAHKHKCGJ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint JHEAHKHKCGJ {
      get { return jHEAHKHKCGJ_; }
      set {
        jHEAHKHKCGJ_ = value;
      }
    }

    /// <summary>Field number for the "IJNJFFHONAI" field.</summary>
    public const int IJNJFFHONAIFieldNumber = 54;
    private uint iJNJFFHONAI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint IJNJFFHONAI {
      get { return iJNJFFHONAI_; }
      set {
        iJNJFFHONAI_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AvatarBattleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AvatarBattleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvatarType != other.AvatarType) return false;
      if (Id != other.Id) return false;
      if (AvatarLevel != other.AvatarLevel) return false;
      if (AvatarRank != other.AvatarRank) return false;
      if (AvatarPromotion != other.AvatarPromotion) return false;
      if (!object.Equals(AvatarStatus, other.AvatarStatus)) return false;
      if(!avatarSkill_.Equals(other.avatarSkill_)) return false;
      if(!avatarEquipment_.Equals(other.avatarEquipment_)) return false;
      if (TotalTurns != other.TotalTurns) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDamage, other.TotalDamage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalHeal, other.TotalHeal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDamageTaken, other.TotalDamageTaken)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalHpRecover, other.TotalHpRecover)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalSpCost, other.TotalSpCost)) return false;
      if (StageId != other.StageId) return false;
      if (StageType != other.StageType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalBreakDamage, other.TotalBreakDamage)) return false;
      if(!attackTypeDamage_.Equals(other.attackTypeDamage_)) return false;
      if(!attackTypeBreakDamage_.Equals(other.attackTypeBreakDamage_)) return false;
      if(!attackTypeMaxDamage_.Equals(other.attackTypeMaxDamage_)) return false;
      if(!skillTimes_.Equals(other.skillTimes_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DelayCumulate, other.DelayCumulate)) return false;
      if (TotalSpAdd != other.TotalSpAdd) return false;
      if(!spAddSource_.Equals(other.spAddSource_)) return false;
      if (TotalBpCost != other.TotalBpCost) return false;
      if (DieTimes != other.DieTimes) return false;
      if (ReviveTimes != other.ReviveTimes) return false;
      if (BreakTimes != other.BreakTimes) return false;
      if (ExtraTurns != other.ExtraTurns) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalShield, other.TotalShield)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalShieldTaken, other.TotalShieldTaken)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalShieldDamage, other.TotalShieldDamage)) return false;
      if (!object.Equals(InitialStatus, other.InitialStatus)) return false;
      if(!relics_.Equals(other.relics_)) return false;
      if (AssistUid != other.AssistUid) return false;
      if(!jEABMCJMHKG_.Equals(other.jEABMCJMHKG_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LNAPAONGGII, other.LNAPAONGGII)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DAGBCMAPPEB, other.DAGBCMAPPEB)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LAMJENICFPI, other.LAMJENICFPI)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FBPNBCCJACL, other.FBPNBCCJACL)) return false;
      if(!hCIIHBFJIFE_.Equals(other.hCIIHBFJIFE_)) return false;
      if (JOOBDAIMBJE != other.JOOBDAIMBJE) return false;
      if (OAJACKJJCGP != other.OAJACKJJCGP) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JKEHIMGBDAF, other.JKEHIMGBDAF)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HHCMONKJLKC, other.HHCMONKJLKC)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OKDNAIPLEAJ, other.OKDNAIPLEAJ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MJDBAMIKPMM, other.MJDBAMIKPMM)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BFDDMNHACDO, other.BFDDMNHACDO)) return false;
      if (NKEEMLHKOOL != other.NKEEMLHKOOL) return false;
      if (CKLNDLILIPL != other.CKLNDLILIPL) return false;
      if (AJFDEDLLAKN != other.AJFDEDLLAKN) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GBMEBHPDICG, other.GBMEBHPDICG)) return false;
      if (JHEAHKHKCGJ != other.JHEAHKHKCGJ) return false;
      if (IJNJFFHONAI != other.IJNJFFHONAI) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AvatarType != global::EggLink.DanhengServer.Proto.AvatarType.None) hash ^= AvatarType.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AvatarLevel != 0) hash ^= AvatarLevel.GetHashCode();
      if (AvatarRank != 0) hash ^= AvatarRank.GetHashCode();
      if (AvatarPromotion != 0) hash ^= AvatarPromotion.GetHashCode();
      if (avatarStatus_ != null) hash ^= AvatarStatus.GetHashCode();
      hash ^= avatarSkill_.GetHashCode();
      hash ^= avatarEquipment_.GetHashCode();
      if (TotalTurns != 0) hash ^= TotalTurns.GetHashCode();
      if (TotalDamage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDamage);
      if (TotalHeal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalHeal);
      if (TotalDamageTaken != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDamageTaken);
      if (TotalHpRecover != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalHpRecover);
      if (TotalSpCost != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalSpCost);
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (StageType != 0) hash ^= StageType.GetHashCode();
      if (TotalBreakDamage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalBreakDamage);
      hash ^= attackTypeDamage_.GetHashCode();
      hash ^= attackTypeBreakDamage_.GetHashCode();
      hash ^= attackTypeMaxDamage_.GetHashCode();
      hash ^= skillTimes_.GetHashCode();
      if (DelayCumulate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DelayCumulate);
      if (TotalSpAdd != 0) hash ^= TotalSpAdd.GetHashCode();
      hash ^= spAddSource_.GetHashCode();
      if (TotalBpCost != 0) hash ^= TotalBpCost.GetHashCode();
      if (DieTimes != 0) hash ^= DieTimes.GetHashCode();
      if (ReviveTimes != 0) hash ^= ReviveTimes.GetHashCode();
      if (BreakTimes != 0) hash ^= BreakTimes.GetHashCode();
      if (ExtraTurns != 0) hash ^= ExtraTurns.GetHashCode();
      if (TotalShield != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalShield);
      if (TotalShieldTaken != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalShieldTaken);
      if (TotalShieldDamage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalShieldDamage);
      if (initialStatus_ != null) hash ^= InitialStatus.GetHashCode();
      hash ^= relics_.GetHashCode();
      if (AssistUid != 0) hash ^= AssistUid.GetHashCode();
      hash ^= jEABMCJMHKG_.GetHashCode();
      if (LNAPAONGGII != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LNAPAONGGII);
      if (DAGBCMAPPEB != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DAGBCMAPPEB);
      if (LAMJENICFPI != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LAMJENICFPI);
      if (FBPNBCCJACL != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FBPNBCCJACL);
      hash ^= hCIIHBFJIFE_.GetHashCode();
      if (JOOBDAIMBJE != 0) hash ^= JOOBDAIMBJE.GetHashCode();
      if (OAJACKJJCGP != 0) hash ^= OAJACKJJCGP.GetHashCode();
      if (JKEHIMGBDAF != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JKEHIMGBDAF);
      if (HHCMONKJLKC != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HHCMONKJLKC);
      if (OKDNAIPLEAJ != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OKDNAIPLEAJ);
      if (MJDBAMIKPMM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MJDBAMIKPMM);
      if (BFDDMNHACDO != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BFDDMNHACDO);
      if (NKEEMLHKOOL != 0) hash ^= NKEEMLHKOOL.GetHashCode();
      if (CKLNDLILIPL != 0) hash ^= CKLNDLILIPL.GetHashCode();
      if (AJFDEDLLAKN != 0) hash ^= AJFDEDLLAKN.GetHashCode();
      if (GBMEBHPDICG != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GBMEBHPDICG);
      if (JHEAHKHKCGJ != 0) hash ^= JHEAHKHKCGJ.GetHashCode();
      if (IJNJFFHONAI != 0) hash ^= IJNJFFHONAI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AvatarType != global::EggLink.DanhengServer.Proto.AvatarType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AvatarType);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (AvatarLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AvatarLevel);
      }
      if (AvatarRank != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AvatarRank);
      }
      if (AvatarPromotion != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(AvatarPromotion);
      }
      if (avatarStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AvatarStatus);
      }
      avatarSkill_.WriteTo(output, _repeated_avatarSkill_codec);
      avatarEquipment_.WriteTo(output, _repeated_avatarEquipment_codec);
      if (TotalTurns != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TotalTurns);
      }
      if (TotalDamage != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(TotalDamage);
      }
      if (TotalHeal != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(TotalHeal);
      }
      if (TotalDamageTaken != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(TotalDamageTaken);
      }
      if (TotalHpRecover != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(TotalHpRecover);
      }
      if (TotalSpCost != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(TotalSpCost);
      }
      if (StageId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(StageId);
      }
      if (StageType != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(StageType);
      }
      if (TotalBreakDamage != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(TotalBreakDamage);
      }
      attackTypeDamage_.WriteTo(output, _repeated_attackTypeDamage_codec);
      attackTypeBreakDamage_.WriteTo(output, _repeated_attackTypeBreakDamage_codec);
      attackTypeMaxDamage_.WriteTo(output, _repeated_attackTypeMaxDamage_codec);
      skillTimes_.WriteTo(output, _repeated_skillTimes_codec);
      if (DelayCumulate != 0D) {
        output.WriteRawTag(177, 1);
        output.WriteDouble(DelayCumulate);
      }
      if (TotalSpAdd != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(TotalSpAdd);
      }
      spAddSource_.WriteTo(output, _repeated_spAddSource_codec);
      if (TotalBpCost != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(TotalBpCost);
      }
      if (DieTimes != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(DieTimes);
      }
      if (ReviveTimes != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(ReviveTimes);
      }
      if (BreakTimes != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(BreakTimes);
      }
      if (ExtraTurns != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(ExtraTurns);
      }
      if (TotalShield != 0D) {
        output.WriteRawTag(241, 1);
        output.WriteDouble(TotalShield);
      }
      if (TotalShieldTaken != 0D) {
        output.WriteRawTag(249, 1);
        output.WriteDouble(TotalShieldTaken);
      }
      if (TotalShieldDamage != 0D) {
        output.WriteRawTag(129, 2);
        output.WriteDouble(TotalShieldDamage);
      }
      if (initialStatus_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(InitialStatus);
      }
      relics_.WriteTo(output, _repeated_relics_codec);
      if (AssistUid != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(AssistUid);
      }
      jEABMCJMHKG_.WriteTo(output, _repeated_jEABMCJMHKG_codec);
      if (LNAPAONGGII != 0D) {
        output.WriteRawTag(169, 2);
        output.WriteDouble(LNAPAONGGII);
      }
      if (DAGBCMAPPEB != 0D) {
        output.WriteRawTag(177, 2);
        output.WriteDouble(DAGBCMAPPEB);
      }
      if (LAMJENICFPI != 0D) {
        output.WriteRawTag(185, 2);
        output.WriteDouble(LAMJENICFPI);
      }
      if (FBPNBCCJACL != 0D) {
        output.WriteRawTag(193, 2);
        output.WriteDouble(FBPNBCCJACL);
      }
      hCIIHBFJIFE_.WriteTo(output, _repeated_hCIIHBFJIFE_codec);
      if (JOOBDAIMBJE != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(JOOBDAIMBJE);
      }
      if (OAJACKJJCGP != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(OAJACKJJCGP);
      }
      if (JKEHIMGBDAF != 0D) {
        output.WriteRawTag(225, 2);
        output.WriteDouble(JKEHIMGBDAF);
      }
      if (HHCMONKJLKC != 0D) {
        output.WriteRawTag(233, 2);
        output.WriteDouble(HHCMONKJLKC);
      }
      if (OKDNAIPLEAJ != 0D) {
        output.WriteRawTag(241, 2);
        output.WriteDouble(OKDNAIPLEAJ);
      }
      if (MJDBAMIKPMM != 0D) {
        output.WriteRawTag(249, 2);
        output.WriteDouble(MJDBAMIKPMM);
      }
      if (BFDDMNHACDO != 0D) {
        output.WriteRawTag(129, 3);
        output.WriteDouble(BFDDMNHACDO);
      }
      if (NKEEMLHKOOL != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(NKEEMLHKOOL);
      }
      if (CKLNDLILIPL != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(CKLNDLILIPL);
      }
      if (AJFDEDLLAKN != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(AJFDEDLLAKN);
      }
      if (GBMEBHPDICG != 0D) {
        output.WriteRawTag(161, 3);
        output.WriteDouble(GBMEBHPDICG);
      }
      if (JHEAHKHKCGJ != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(JHEAHKHKCGJ);
      }
      if (IJNJFFHONAI != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(IJNJFFHONAI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AvatarType != global::EggLink.DanhengServer.Proto.AvatarType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AvatarType);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (AvatarLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AvatarLevel);
      }
      if (AvatarRank != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AvatarRank);
      }
      if (AvatarPromotion != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(AvatarPromotion);
      }
      if (avatarStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AvatarStatus);
      }
      avatarSkill_.WriteTo(ref output, _repeated_avatarSkill_codec);
      avatarEquipment_.WriteTo(ref output, _repeated_avatarEquipment_codec);
      if (TotalTurns != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TotalTurns);
      }
      if (TotalDamage != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(TotalDamage);
      }
      if (TotalHeal != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(TotalHeal);
      }
      if (TotalDamageTaken != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(TotalDamageTaken);
      }
      if (TotalHpRecover != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(TotalHpRecover);
      }
      if (TotalSpCost != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(TotalSpCost);
      }
      if (StageId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(StageId);
      }
      if (StageType != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(StageType);
      }
      if (TotalBreakDamage != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(TotalBreakDamage);
      }
      attackTypeDamage_.WriteTo(ref output, _repeated_attackTypeDamage_codec);
      attackTypeBreakDamage_.WriteTo(ref output, _repeated_attackTypeBreakDamage_codec);
      attackTypeMaxDamage_.WriteTo(ref output, _repeated_attackTypeMaxDamage_codec);
      skillTimes_.WriteTo(ref output, _repeated_skillTimes_codec);
      if (DelayCumulate != 0D) {
        output.WriteRawTag(177, 1);
        output.WriteDouble(DelayCumulate);
      }
      if (TotalSpAdd != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(TotalSpAdd);
      }
      spAddSource_.WriteTo(ref output, _repeated_spAddSource_codec);
      if (TotalBpCost != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(TotalBpCost);
      }
      if (DieTimes != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(DieTimes);
      }
      if (ReviveTimes != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(ReviveTimes);
      }
      if (BreakTimes != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(BreakTimes);
      }
      if (ExtraTurns != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(ExtraTurns);
      }
      if (TotalShield != 0D) {
        output.WriteRawTag(241, 1);
        output.WriteDouble(TotalShield);
      }
      if (TotalShieldTaken != 0D) {
        output.WriteRawTag(249, 1);
        output.WriteDouble(TotalShieldTaken);
      }
      if (TotalShieldDamage != 0D) {
        output.WriteRawTag(129, 2);
        output.WriteDouble(TotalShieldDamage);
      }
      if (initialStatus_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(InitialStatus);
      }
      relics_.WriteTo(ref output, _repeated_relics_codec);
      if (AssistUid != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(AssistUid);
      }
      jEABMCJMHKG_.WriteTo(ref output, _repeated_jEABMCJMHKG_codec);
      if (LNAPAONGGII != 0D) {
        output.WriteRawTag(169, 2);
        output.WriteDouble(LNAPAONGGII);
      }
      if (DAGBCMAPPEB != 0D) {
        output.WriteRawTag(177, 2);
        output.WriteDouble(DAGBCMAPPEB);
      }
      if (LAMJENICFPI != 0D) {
        output.WriteRawTag(185, 2);
        output.WriteDouble(LAMJENICFPI);
      }
      if (FBPNBCCJACL != 0D) {
        output.WriteRawTag(193, 2);
        output.WriteDouble(FBPNBCCJACL);
      }
      hCIIHBFJIFE_.WriteTo(ref output, _repeated_hCIIHBFJIFE_codec);
      if (JOOBDAIMBJE != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(JOOBDAIMBJE);
      }
      if (OAJACKJJCGP != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(OAJACKJJCGP);
      }
      if (JKEHIMGBDAF != 0D) {
        output.WriteRawTag(225, 2);
        output.WriteDouble(JKEHIMGBDAF);
      }
      if (HHCMONKJLKC != 0D) {
        output.WriteRawTag(233, 2);
        output.WriteDouble(HHCMONKJLKC);
      }
      if (OKDNAIPLEAJ != 0D) {
        output.WriteRawTag(241, 2);
        output.WriteDouble(OKDNAIPLEAJ);
      }
      if (MJDBAMIKPMM != 0D) {
        output.WriteRawTag(249, 2);
        output.WriteDouble(MJDBAMIKPMM);
      }
      if (BFDDMNHACDO != 0D) {
        output.WriteRawTag(129, 3);
        output.WriteDouble(BFDDMNHACDO);
      }
      if (NKEEMLHKOOL != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(NKEEMLHKOOL);
      }
      if (CKLNDLILIPL != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(CKLNDLILIPL);
      }
      if (AJFDEDLLAKN != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(AJFDEDLLAKN);
      }
      if (GBMEBHPDICG != 0D) {
        output.WriteRawTag(161, 3);
        output.WriteDouble(GBMEBHPDICG);
      }
      if (JHEAHKHKCGJ != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(JHEAHKHKCGJ);
      }
      if (IJNJFFHONAI != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(IJNJFFHONAI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AvatarType != global::EggLink.DanhengServer.Proto.AvatarType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AvatarType);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (AvatarLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarLevel);
      }
      if (AvatarRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarRank);
      }
      if (AvatarPromotion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarPromotion);
      }
      if (avatarStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarStatus);
      }
      size += avatarSkill_.CalculateSize(_repeated_avatarSkill_codec);
      size += avatarEquipment_.CalculateSize(_repeated_avatarEquipment_codec);
      if (TotalTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTurns);
      }
      if (TotalDamage != 0D) {
        size += 1 + 8;
      }
      if (TotalHeal != 0D) {
        size += 1 + 8;
      }
      if (TotalDamageTaken != 0D) {
        size += 1 + 8;
      }
      if (TotalHpRecover != 0D) {
        size += 1 + 8;
      }
      if (TotalSpCost != 0D) {
        size += 1 + 8;
      }
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (StageType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StageType);
      }
      if (TotalBreakDamage != 0D) {
        size += 2 + 8;
      }
      size += attackTypeDamage_.CalculateSize(_repeated_attackTypeDamage_codec);
      size += attackTypeBreakDamage_.CalculateSize(_repeated_attackTypeBreakDamage_codec);
      size += attackTypeMaxDamage_.CalculateSize(_repeated_attackTypeMaxDamage_codec);
      size += skillTimes_.CalculateSize(_repeated_skillTimes_codec);
      if (DelayCumulate != 0D) {
        size += 2 + 8;
      }
      if (TotalSpAdd != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalSpAdd);
      }
      size += spAddSource_.CalculateSize(_repeated_spAddSource_codec);
      if (TotalBpCost != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalBpCost);
      }
      if (DieTimes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DieTimes);
      }
      if (ReviveTimes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReviveTimes);
      }
      if (BreakTimes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BreakTimes);
      }
      if (ExtraTurns != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ExtraTurns);
      }
      if (TotalShield != 0D) {
        size += 2 + 8;
      }
      if (TotalShieldTaken != 0D) {
        size += 2 + 8;
      }
      if (TotalShieldDamage != 0D) {
        size += 2 + 8;
      }
      if (initialStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InitialStatus);
      }
      size += relics_.CalculateSize(_repeated_relics_codec);
      if (AssistUid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AssistUid);
      }
      size += jEABMCJMHKG_.CalculateSize(_repeated_jEABMCJMHKG_codec);
      if (LNAPAONGGII != 0D) {
        size += 2 + 8;
      }
      if (DAGBCMAPPEB != 0D) {
        size += 2 + 8;
      }
      if (LAMJENICFPI != 0D) {
        size += 2 + 8;
      }
      if (FBPNBCCJACL != 0D) {
        size += 2 + 8;
      }
      size += hCIIHBFJIFE_.CalculateSize(_repeated_hCIIHBFJIFE_codec);
      if (JOOBDAIMBJE != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JOOBDAIMBJE);
      }
      if (OAJACKJJCGP != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OAJACKJJCGP);
      }
      if (JKEHIMGBDAF != 0D) {
        size += 2 + 8;
      }
      if (HHCMONKJLKC != 0D) {
        size += 2 + 8;
      }
      if (OKDNAIPLEAJ != 0D) {
        size += 2 + 8;
      }
      if (MJDBAMIKPMM != 0D) {
        size += 2 + 8;
      }
      if (BFDDMNHACDO != 0D) {
        size += 2 + 8;
      }
      if (NKEEMLHKOOL != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NKEEMLHKOOL);
      }
      if (CKLNDLILIPL != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CKLNDLILIPL);
      }
      if (AJFDEDLLAKN != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AJFDEDLLAKN);
      }
      if (GBMEBHPDICG != 0D) {
        size += 2 + 8;
      }
      if (JHEAHKHKCGJ != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JHEAHKHKCGJ);
      }
      if (IJNJFFHONAI != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(IJNJFFHONAI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AvatarBattleInfo other) {
      if (other == null) {
        return;
      }
      if (other.AvatarType != global::EggLink.DanhengServer.Proto.AvatarType.None) {
        AvatarType = other.AvatarType;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AvatarLevel != 0) {
        AvatarLevel = other.AvatarLevel;
      }
      if (other.AvatarRank != 0) {
        AvatarRank = other.AvatarRank;
      }
      if (other.AvatarPromotion != 0) {
        AvatarPromotion = other.AvatarPromotion;
      }
      if (other.avatarStatus_ != null) {
        if (avatarStatus_ == null) {
          AvatarStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
        }
        AvatarStatus.MergeFrom(other.AvatarStatus);
      }
      avatarSkill_.Add(other.avatarSkill_);
      avatarEquipment_.Add(other.avatarEquipment_);
      if (other.TotalTurns != 0) {
        TotalTurns = other.TotalTurns;
      }
      if (other.TotalDamage != 0D) {
        TotalDamage = other.TotalDamage;
      }
      if (other.TotalHeal != 0D) {
        TotalHeal = other.TotalHeal;
      }
      if (other.TotalDamageTaken != 0D) {
        TotalDamageTaken = other.TotalDamageTaken;
      }
      if (other.TotalHpRecover != 0D) {
        TotalHpRecover = other.TotalHpRecover;
      }
      if (other.TotalSpCost != 0D) {
        TotalSpCost = other.TotalSpCost;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.StageType != 0) {
        StageType = other.StageType;
      }
      if (other.TotalBreakDamage != 0D) {
        TotalBreakDamage = other.TotalBreakDamage;
      }
      attackTypeDamage_.Add(other.attackTypeDamage_);
      attackTypeBreakDamage_.Add(other.attackTypeBreakDamage_);
      attackTypeMaxDamage_.Add(other.attackTypeMaxDamage_);
      skillTimes_.Add(other.skillTimes_);
      if (other.DelayCumulate != 0D) {
        DelayCumulate = other.DelayCumulate;
      }
      if (other.TotalSpAdd != 0) {
        TotalSpAdd = other.TotalSpAdd;
      }
      spAddSource_.Add(other.spAddSource_);
      if (other.TotalBpCost != 0) {
        TotalBpCost = other.TotalBpCost;
      }
      if (other.DieTimes != 0) {
        DieTimes = other.DieTimes;
      }
      if (other.ReviveTimes != 0) {
        ReviveTimes = other.ReviveTimes;
      }
      if (other.BreakTimes != 0) {
        BreakTimes = other.BreakTimes;
      }
      if (other.ExtraTurns != 0) {
        ExtraTurns = other.ExtraTurns;
      }
      if (other.TotalShield != 0D) {
        TotalShield = other.TotalShield;
      }
      if (other.TotalShieldTaken != 0D) {
        TotalShieldTaken = other.TotalShieldTaken;
      }
      if (other.TotalShieldDamage != 0D) {
        TotalShieldDamage = other.TotalShieldDamage;
      }
      if (other.initialStatus_ != null) {
        if (initialStatus_ == null) {
          InitialStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
        }
        InitialStatus.MergeFrom(other.InitialStatus);
      }
      relics_.Add(other.relics_);
      if (other.AssistUid != 0) {
        AssistUid = other.AssistUid;
      }
      jEABMCJMHKG_.Add(other.jEABMCJMHKG_);
      if (other.LNAPAONGGII != 0D) {
        LNAPAONGGII = other.LNAPAONGGII;
      }
      if (other.DAGBCMAPPEB != 0D) {
        DAGBCMAPPEB = other.DAGBCMAPPEB;
      }
      if (other.LAMJENICFPI != 0D) {
        LAMJENICFPI = other.LAMJENICFPI;
      }
      if (other.FBPNBCCJACL != 0D) {
        FBPNBCCJACL = other.FBPNBCCJACL;
      }
      hCIIHBFJIFE_.Add(other.hCIIHBFJIFE_);
      if (other.JOOBDAIMBJE != 0) {
        JOOBDAIMBJE = other.JOOBDAIMBJE;
      }
      if (other.OAJACKJJCGP != 0) {
        OAJACKJJCGP = other.OAJACKJJCGP;
      }
      if (other.JKEHIMGBDAF != 0D) {
        JKEHIMGBDAF = other.JKEHIMGBDAF;
      }
      if (other.HHCMONKJLKC != 0D) {
        HHCMONKJLKC = other.HHCMONKJLKC;
      }
      if (other.OKDNAIPLEAJ != 0D) {
        OKDNAIPLEAJ = other.OKDNAIPLEAJ;
      }
      if (other.MJDBAMIKPMM != 0D) {
        MJDBAMIKPMM = other.MJDBAMIKPMM;
      }
      if (other.BFDDMNHACDO != 0D) {
        BFDDMNHACDO = other.BFDDMNHACDO;
      }
      if (other.NKEEMLHKOOL != 0) {
        NKEEMLHKOOL = other.NKEEMLHKOOL;
      }
      if (other.CKLNDLILIPL != 0) {
        CKLNDLILIPL = other.CKLNDLILIPL;
      }
      if (other.AJFDEDLLAKN != 0) {
        AJFDEDLLAKN = other.AJFDEDLLAKN;
      }
      if (other.GBMEBHPDICG != 0D) {
        GBMEBHPDICG = other.GBMEBHPDICG;
      }
      if (other.JHEAHKHKCGJ != 0) {
        JHEAHKHKCGJ = other.JHEAHKHKCGJ;
      }
      if (other.IJNJFFHONAI != 0) {
        IJNJFFHONAI = other.IJNJFFHONAI;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AvatarType = (global::EggLink.DanhengServer.Proto.AvatarType) input.ReadEnum();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            AvatarLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            AvatarRank = input.ReadUInt32();
            break;
          }
          case 40: {
            AvatarPromotion = input.ReadUInt32();
            break;
          }
          case 50: {
            if (avatarStatus_ == null) {
              AvatarStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
            }
            input.ReadMessage(AvatarStatus);
            break;
          }
          case 58: {
            avatarSkill_.AddEntriesFrom(input, _repeated_avatarSkill_codec);
            break;
          }
          case 66: {
            avatarEquipment_.AddEntriesFrom(input, _repeated_avatarEquipment_codec);
            break;
          }
          case 72: {
            TotalTurns = input.ReadUInt32();
            break;
          }
          case 81: {
            TotalDamage = input.ReadDouble();
            break;
          }
          case 89: {
            TotalHeal = input.ReadDouble();
            break;
          }
          case 97: {
            TotalDamageTaken = input.ReadDouble();
            break;
          }
          case 105: {
            TotalHpRecover = input.ReadDouble();
            break;
          }
          case 113: {
            TotalSpCost = input.ReadDouble();
            break;
          }
          case 120: {
            StageId = input.ReadUInt32();
            break;
          }
          case 128: {
            StageType = input.ReadUInt32();
            break;
          }
          case 137: {
            TotalBreakDamage = input.ReadDouble();
            break;
          }
          case 146: {
            attackTypeDamage_.AddEntriesFrom(input, _repeated_attackTypeDamage_codec);
            break;
          }
          case 154: {
            attackTypeBreakDamage_.AddEntriesFrom(input, _repeated_attackTypeBreakDamage_codec);
            break;
          }
          case 162: {
            attackTypeMaxDamage_.AddEntriesFrom(input, _repeated_attackTypeMaxDamage_codec);
            break;
          }
          case 170: {
            skillTimes_.AddEntriesFrom(input, _repeated_skillTimes_codec);
            break;
          }
          case 177: {
            DelayCumulate = input.ReadDouble();
            break;
          }
          case 184: {
            TotalSpAdd = input.ReadUInt32();
            break;
          }
          case 194: {
            spAddSource_.AddEntriesFrom(input, _repeated_spAddSource_codec);
            break;
          }
          case 200: {
            TotalBpCost = input.ReadUInt32();
            break;
          }
          case 208: {
            DieTimes = input.ReadUInt32();
            break;
          }
          case 216: {
            ReviveTimes = input.ReadUInt32();
            break;
          }
          case 224: {
            BreakTimes = input.ReadUInt32();
            break;
          }
          case 232: {
            ExtraTurns = input.ReadUInt32();
            break;
          }
          case 241: {
            TotalShield = input.ReadDouble();
            break;
          }
          case 249: {
            TotalShieldTaken = input.ReadDouble();
            break;
          }
          case 257: {
            TotalShieldDamage = input.ReadDouble();
            break;
          }
          case 266: {
            if (initialStatus_ == null) {
              InitialStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
            }
            input.ReadMessage(InitialStatus);
            break;
          }
          case 274: {
            relics_.AddEntriesFrom(input, _repeated_relics_codec);
            break;
          }
          case 280: {
            AssistUid = input.ReadUInt32();
            break;
          }
          case 290: {
            jEABMCJMHKG_.AddEntriesFrom(input, _repeated_jEABMCJMHKG_codec);
            break;
          }
          case 297: {
            LNAPAONGGII = input.ReadDouble();
            break;
          }
          case 305: {
            DAGBCMAPPEB = input.ReadDouble();
            break;
          }
          case 313: {
            LAMJENICFPI = input.ReadDouble();
            break;
          }
          case 321: {
            FBPNBCCJACL = input.ReadDouble();
            break;
          }
          case 330: {
            hCIIHBFJIFE_.AddEntriesFrom(input, _repeated_hCIIHBFJIFE_codec);
            break;
          }
          case 336: {
            JOOBDAIMBJE = input.ReadUInt32();
            break;
          }
          case 344: {
            OAJACKJJCGP = input.ReadUInt32();
            break;
          }
          case 353: {
            JKEHIMGBDAF = input.ReadDouble();
            break;
          }
          case 361: {
            HHCMONKJLKC = input.ReadDouble();
            break;
          }
          case 369: {
            OKDNAIPLEAJ = input.ReadDouble();
            break;
          }
          case 377: {
            MJDBAMIKPMM = input.ReadDouble();
            break;
          }
          case 385: {
            BFDDMNHACDO = input.ReadDouble();
            break;
          }
          case 392: {
            NKEEMLHKOOL = input.ReadUInt32();
            break;
          }
          case 400: {
            CKLNDLILIPL = input.ReadUInt32();
            break;
          }
          case 408: {
            AJFDEDLLAKN = input.ReadUInt32();
            break;
          }
          case 417: {
            GBMEBHPDICG = input.ReadDouble();
            break;
          }
          case 424: {
            JHEAHKHKCGJ = input.ReadUInt32();
            break;
          }
          case 432: {
            IJNJFFHONAI = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AvatarType = (global::EggLink.DanhengServer.Proto.AvatarType) input.ReadEnum();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            AvatarLevel = input.ReadUInt32();
            break;
          }
          case 32: {
            AvatarRank = input.ReadUInt32();
            break;
          }
          case 40: {
            AvatarPromotion = input.ReadUInt32();
            break;
          }
          case 50: {
            if (avatarStatus_ == null) {
              AvatarStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
            }
            input.ReadMessage(AvatarStatus);
            break;
          }
          case 58: {
            avatarSkill_.AddEntriesFrom(ref input, _repeated_avatarSkill_codec);
            break;
          }
          case 66: {
            avatarEquipment_.AddEntriesFrom(ref input, _repeated_avatarEquipment_codec);
            break;
          }
          case 72: {
            TotalTurns = input.ReadUInt32();
            break;
          }
          case 81: {
            TotalDamage = input.ReadDouble();
            break;
          }
          case 89: {
            TotalHeal = input.ReadDouble();
            break;
          }
          case 97: {
            TotalDamageTaken = input.ReadDouble();
            break;
          }
          case 105: {
            TotalHpRecover = input.ReadDouble();
            break;
          }
          case 113: {
            TotalSpCost = input.ReadDouble();
            break;
          }
          case 120: {
            StageId = input.ReadUInt32();
            break;
          }
          case 128: {
            StageType = input.ReadUInt32();
            break;
          }
          case 137: {
            TotalBreakDamage = input.ReadDouble();
            break;
          }
          case 146: {
            attackTypeDamage_.AddEntriesFrom(ref input, _repeated_attackTypeDamage_codec);
            break;
          }
          case 154: {
            attackTypeBreakDamage_.AddEntriesFrom(ref input, _repeated_attackTypeBreakDamage_codec);
            break;
          }
          case 162: {
            attackTypeMaxDamage_.AddEntriesFrom(ref input, _repeated_attackTypeMaxDamage_codec);
            break;
          }
          case 170: {
            skillTimes_.AddEntriesFrom(ref input, _repeated_skillTimes_codec);
            break;
          }
          case 177: {
            DelayCumulate = input.ReadDouble();
            break;
          }
          case 184: {
            TotalSpAdd = input.ReadUInt32();
            break;
          }
          case 194: {
            spAddSource_.AddEntriesFrom(ref input, _repeated_spAddSource_codec);
            break;
          }
          case 200: {
            TotalBpCost = input.ReadUInt32();
            break;
          }
          case 208: {
            DieTimes = input.ReadUInt32();
            break;
          }
          case 216: {
            ReviveTimes = input.ReadUInt32();
            break;
          }
          case 224: {
            BreakTimes = input.ReadUInt32();
            break;
          }
          case 232: {
            ExtraTurns = input.ReadUInt32();
            break;
          }
          case 241: {
            TotalShield = input.ReadDouble();
            break;
          }
          case 249: {
            TotalShieldTaken = input.ReadDouble();
            break;
          }
          case 257: {
            TotalShieldDamage = input.ReadDouble();
            break;
          }
          case 266: {
            if (initialStatus_ == null) {
              InitialStatus = new global::EggLink.DanhengServer.Proto.AvatarProperty();
            }
            input.ReadMessage(InitialStatus);
            break;
          }
          case 274: {
            relics_.AddEntriesFrom(ref input, _repeated_relics_codec);
            break;
          }
          case 280: {
            AssistUid = input.ReadUInt32();
            break;
          }
          case 290: {
            jEABMCJMHKG_.AddEntriesFrom(ref input, _repeated_jEABMCJMHKG_codec);
            break;
          }
          case 297: {
            LNAPAONGGII = input.ReadDouble();
            break;
          }
          case 305: {
            DAGBCMAPPEB = input.ReadDouble();
            break;
          }
          case 313: {
            LAMJENICFPI = input.ReadDouble();
            break;
          }
          case 321: {
            FBPNBCCJACL = input.ReadDouble();
            break;
          }
          case 330: {
            hCIIHBFJIFE_.AddEntriesFrom(ref input, _repeated_hCIIHBFJIFE_codec);
            break;
          }
          case 336: {
            JOOBDAIMBJE = input.ReadUInt32();
            break;
          }
          case 344: {
            OAJACKJJCGP = input.ReadUInt32();
            break;
          }
          case 353: {
            JKEHIMGBDAF = input.ReadDouble();
            break;
          }
          case 361: {
            HHCMONKJLKC = input.ReadDouble();
            break;
          }
          case 369: {
            OKDNAIPLEAJ = input.ReadDouble();
            break;
          }
          case 377: {
            MJDBAMIKPMM = input.ReadDouble();
            break;
          }
          case 385: {
            BFDDMNHACDO = input.ReadDouble();
            break;
          }
          case 392: {
            NKEEMLHKOOL = input.ReadUInt32();
            break;
          }
          case 400: {
            CKLNDLILIPL = input.ReadUInt32();
            break;
          }
          case 408: {
            AJFDEDLLAKN = input.ReadUInt32();
            break;
          }
          case 417: {
            GBMEBHPDICG = input.ReadDouble();
            break;
          }
          case 424: {
            JHEAHKHKCGJ = input.ReadUInt32();
            break;
          }
          case 432: {
            IJNJFFHONAI = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
