// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChessRogueGameInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ChessRogueGameInfo.proto</summary>
  public static partial class ChessRogueGameInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ChessRogueGameInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChessRogueGameInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhDaGVzc1JvZ3VlR2FtZUluZm8ucHJvdG8aGUNoZXNzUm9ndWVMZXZlbElu",
            "Zm8ucHJvdG8aGENoZXNzUm9ndWVCdWZmSW5mby5wcm90bxoaQ2hlc3NSb2d1",
            "ZUxpbmV1cEluZm8ucHJvdG8aGUNoZXNzUm9ndWVTdG9yeUluZm8ucHJvdG8a",
            "JUNoZXNzUm9ndWVDdXJyZW50RGlmZmljdWx0eUluZm8ucHJvdG8aEU5HRUpF",
            "Q0ROQUVPLnByb3RvGhhDaGVzc1JvZ3VlRGljZUluZm8ucHJvdG8aEUxPSk5B",
            "RUtJRU5QLnByb3RvGhNSb2d1ZUdhbWVJbmZvLnByb3RvGh1DaGVzc1JvZ3Vl",
            "Tm91c1ZhbHVlSW5mby5wcm90bxoeUm9ndWVDb21tb25QZW5kaW5nQWN0aW9u",
            "LnByb3RvGhZSb2d1ZVZpcnR1YWxJdGVtLnByb3RvGhhDaGVzc1JvZ3VlQWVv",
            "bkluZm8ucHJvdG8aG0NoZXNzUm9ndWVNaXJhY2xlSW5mby5wcm90byLNBQoS",
            "Q2hlc3NSb2d1ZUdhbWVJbmZvEjEKEWdhbWVfbWlyYWNsZV9pbmZvGAEgASgL",
            "MhYuQ2hlc3NSb2d1ZU1pcmFjbGVJbmZvEjAKEXJvZ3VlX2xpbmV1cF9pbmZv",
            "GAUgASgLMhUuQ2hlc3NSb2d1ZUxpbmV1cEluZm8SQAoVcm9ndWVfZGlmZmlj",
            "dWx0eV9pbmZvGLEBIAEoCzIgLkNoZXNzUm9ndWVDdXJyZW50RGlmZmljdWx0",
            "eUluZm8SIAoKc3RvcnlfaW5mbxgJIAEoCzIMLk5HRUpFQ0ROQUVPEi0KF3Jv",
            "Z3VlX3ZpcnR1YWxfaXRlbV9pbmZvGAIgASgLMgwuTE9KTkFFS0lFTlASLAoP",
            "cm9ndWVfYWVvbl9pbmZvGAogASgLMhMuQ2hlc3NSb2d1ZUFlb25JbmZvEjEK",
            "DnBlbmRpbmdfYWN0aW9uGAYgASgLMhkuUm9ndWVDb21tb25QZW5kaW5nQWN0",
            "aW9uEi4KEHJvZ3VlX3N0b3J5X2luZm8YByABKAsyFC5DaGVzc1JvZ3VlU3Rv",
            "cnlJbmZvEigKCmxldmVsX2luZm8YCyABKAsyFC5DaGVzc1JvZ3VlTGV2ZWxJ",
            "bmZvEjEKD25vdXNfdmFsdWVfaW5mbxgEIAEoCzIYLkNoZXNzUm9ndWVOb3Vz",
            "VmFsdWVJbmZvEiwKD3JvZ3VlX2J1ZmZfaW5mbxgIIAEoCzITLkNoZXNzUm9n",
            "dWVCdWZmSW5mbxIvChdyb2d1ZV9jdXJyZW50X2dhbWVfaW5mbxgMIAMoCzIO",
            "LlJvZ3VlR2FtZUluZm8SLAoPcm9ndWVfZGljZV9pbmZvGAMgASgLMhMuQ2hl",
            "c3NSb2d1ZURpY2VJbmZvEiwKEXZpcnR1YWxfaXRlbV9pbmZvGA0gASgLMhEu",
            "Um9ndWVWaXJ0dWFsSXRlbRIWCg5yb2d1ZV9zdWJfbW9kZRgPIAEoDUIeqgIb",
            "RWdnTGluay5EYW5oZW5nU2VydmVyLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChessRogueLevelInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueBuffInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueLineupInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueStoryInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.NGEJECDNAEOReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueDiceInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.LOJNAEKIENPReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueGameInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueCommonPendingActionReflection.Descriptor, global::EggLink.DanhengServer.Proto.RogueVirtualItemReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueAeonInfoReflection.Descriptor, global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ChessRogueGameInfo), global::EggLink.DanhengServer.Proto.ChessRogueGameInfo.Parser, new[]{ "GameMiracleInfo", "RogueLineupInfo", "RogueDifficultyInfo", "StoryInfo", "RogueVirtualItemInfo", "RogueAeonInfo", "PendingAction", "RogueStoryInfo", "LevelInfo", "NousValueInfo", "RogueBuffInfo", "RogueCurrentGameInfo", "RogueDiceInfo", "VirtualItemInfo", "RogueSubMode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChessRogueGameInfo : pb::IMessage<ChessRogueGameInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChessRogueGameInfo> _parser = new pb::MessageParser<ChessRogueGameInfo>(() => new ChessRogueGameInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChessRogueGameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChessRogueGameInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueGameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueGameInfo(ChessRogueGameInfo other) : this() {
      gameMiracleInfo_ = other.gameMiracleInfo_ != null ? other.gameMiracleInfo_.Clone() : null;
      rogueLineupInfo_ = other.rogueLineupInfo_ != null ? other.rogueLineupInfo_.Clone() : null;
      rogueDifficultyInfo_ = other.rogueDifficultyInfo_ != null ? other.rogueDifficultyInfo_.Clone() : null;
      storyInfo_ = other.storyInfo_ != null ? other.storyInfo_.Clone() : null;
      rogueVirtualItemInfo_ = other.rogueVirtualItemInfo_ != null ? other.rogueVirtualItemInfo_.Clone() : null;
      rogueAeonInfo_ = other.rogueAeonInfo_ != null ? other.rogueAeonInfo_.Clone() : null;
      pendingAction_ = other.pendingAction_ != null ? other.pendingAction_.Clone() : null;
      rogueStoryInfo_ = other.rogueStoryInfo_ != null ? other.rogueStoryInfo_.Clone() : null;
      levelInfo_ = other.levelInfo_ != null ? other.levelInfo_.Clone() : null;
      nousValueInfo_ = other.nousValueInfo_ != null ? other.nousValueInfo_.Clone() : null;
      rogueBuffInfo_ = other.rogueBuffInfo_ != null ? other.rogueBuffInfo_.Clone() : null;
      rogueCurrentGameInfo_ = other.rogueCurrentGameInfo_.Clone();
      rogueDiceInfo_ = other.rogueDiceInfo_ != null ? other.rogueDiceInfo_.Clone() : null;
      virtualItemInfo_ = other.virtualItemInfo_ != null ? other.virtualItemInfo_.Clone() : null;
      rogueSubMode_ = other.rogueSubMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChessRogueGameInfo Clone() {
      return new ChessRogueGameInfo(this);
    }

    /// <summary>Field number for the "game_miracle_info" field.</summary>
    public const int GameMiracleInfoFieldNumber = 1;
    private global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo gameMiracleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo GameMiracleInfo {
      get { return gameMiracleInfo_; }
      set {
        gameMiracleInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_lineup_info" field.</summary>
    public const int RogueLineupInfoFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo rogueLineupInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo RogueLineupInfo {
      get { return rogueLineupInfo_; }
      set {
        rogueLineupInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_difficulty_info" field.</summary>
    public const int RogueDifficultyInfoFieldNumber = 177;
    private global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo rogueDifficultyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo RogueDifficultyInfo {
      get { return rogueDifficultyInfo_; }
      set {
        rogueDifficultyInfo_ = value;
      }
    }

    /// <summary>Field number for the "story_info" field.</summary>
    public const int StoryInfoFieldNumber = 9;
    private global::EggLink.DanhengServer.Proto.NGEJECDNAEO storyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.NGEJECDNAEO StoryInfo {
      get { return storyInfo_; }
      set {
        storyInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_virtual_item_info" field.</summary>
    public const int RogueVirtualItemInfoFieldNumber = 2;
    private global::EggLink.DanhengServer.Proto.LOJNAEKIENP rogueVirtualItemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LOJNAEKIENP RogueVirtualItemInfo {
      get { return rogueVirtualItemInfo_; }
      set {
        rogueVirtualItemInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_aeon_info" field.</summary>
    public const int RogueAeonInfoFieldNumber = 10;
    private global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo rogueAeonInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo RogueAeonInfo {
      get { return rogueAeonInfo_; }
      set {
        rogueAeonInfo_ = value;
      }
    }

    /// <summary>Field number for the "pending_action" field.</summary>
    public const int PendingActionFieldNumber = 6;
    private global::EggLink.DanhengServer.Proto.RogueCommonPendingAction pendingAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueCommonPendingAction PendingAction {
      get { return pendingAction_; }
      set {
        pendingAction_ = value;
      }
    }

    /// <summary>Field number for the "rogue_story_info" field.</summary>
    public const int RogueStoryInfoFieldNumber = 7;
    private global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo rogueStoryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo RogueStoryInfo {
      get { return rogueStoryInfo_; }
      set {
        rogueStoryInfo_ = value;
      }
    }

    /// <summary>Field number for the "level_info" field.</summary>
    public const int LevelInfoFieldNumber = 11;
    private global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo levelInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo LevelInfo {
      get { return levelInfo_; }
      set {
        levelInfo_ = value;
      }
    }

    /// <summary>Field number for the "nous_value_info" field.</summary>
    public const int NousValueInfoFieldNumber = 4;
    private global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfo nousValueInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfo NousValueInfo {
      get { return nousValueInfo_; }
      set {
        nousValueInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_buff_info" field.</summary>
    public const int RogueBuffInfoFieldNumber = 8;
    private global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo rogueBuffInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo RogueBuffInfo {
      get { return rogueBuffInfo_; }
      set {
        rogueBuffInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_current_game_info" field.</summary>
    public const int RogueCurrentGameInfoFieldNumber = 12;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.RogueGameInfo> _repeated_rogueCurrentGameInfo_codec
        = pb::FieldCodec.ForMessage(98, global::EggLink.DanhengServer.Proto.RogueGameInfo.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGameInfo> rogueCurrentGameInfo_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGameInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.RogueGameInfo> RogueCurrentGameInfo {
      get { return rogueCurrentGameInfo_; }
    }

    /// <summary>Field number for the "rogue_dice_info" field.</summary>
    public const int RogueDiceInfoFieldNumber = 3;
    private global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo rogueDiceInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo RogueDiceInfo {
      get { return rogueDiceInfo_; }
      set {
        rogueDiceInfo_ = value;
      }
    }

    /// <summary>Field number for the "virtual_item_info" field.</summary>
    public const int VirtualItemInfoFieldNumber = 13;
    private global::EggLink.DanhengServer.Proto.RogueVirtualItem virtualItemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.RogueVirtualItem VirtualItemInfo {
      get { return virtualItemInfo_; }
      set {
        virtualItemInfo_ = value;
      }
    }

    /// <summary>Field number for the "rogue_sub_mode" field.</summary>
    public const int RogueSubModeFieldNumber = 15;
    private uint rogueSubMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RogueSubMode {
      get { return rogueSubMode_; }
      set {
        rogueSubMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChessRogueGameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChessRogueGameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameMiracleInfo, other.GameMiracleInfo)) return false;
      if (!object.Equals(RogueLineupInfo, other.RogueLineupInfo)) return false;
      if (!object.Equals(RogueDifficultyInfo, other.RogueDifficultyInfo)) return false;
      if (!object.Equals(StoryInfo, other.StoryInfo)) return false;
      if (!object.Equals(RogueVirtualItemInfo, other.RogueVirtualItemInfo)) return false;
      if (!object.Equals(RogueAeonInfo, other.RogueAeonInfo)) return false;
      if (!object.Equals(PendingAction, other.PendingAction)) return false;
      if (!object.Equals(RogueStoryInfo, other.RogueStoryInfo)) return false;
      if (!object.Equals(LevelInfo, other.LevelInfo)) return false;
      if (!object.Equals(NousValueInfo, other.NousValueInfo)) return false;
      if (!object.Equals(RogueBuffInfo, other.RogueBuffInfo)) return false;
      if(!rogueCurrentGameInfo_.Equals(other.rogueCurrentGameInfo_)) return false;
      if (!object.Equals(RogueDiceInfo, other.RogueDiceInfo)) return false;
      if (!object.Equals(VirtualItemInfo, other.VirtualItemInfo)) return false;
      if (RogueSubMode != other.RogueSubMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameMiracleInfo_ != null) hash ^= GameMiracleInfo.GetHashCode();
      if (rogueLineupInfo_ != null) hash ^= RogueLineupInfo.GetHashCode();
      if (rogueDifficultyInfo_ != null) hash ^= RogueDifficultyInfo.GetHashCode();
      if (storyInfo_ != null) hash ^= StoryInfo.GetHashCode();
      if (rogueVirtualItemInfo_ != null) hash ^= RogueVirtualItemInfo.GetHashCode();
      if (rogueAeonInfo_ != null) hash ^= RogueAeonInfo.GetHashCode();
      if (pendingAction_ != null) hash ^= PendingAction.GetHashCode();
      if (rogueStoryInfo_ != null) hash ^= RogueStoryInfo.GetHashCode();
      if (levelInfo_ != null) hash ^= LevelInfo.GetHashCode();
      if (nousValueInfo_ != null) hash ^= NousValueInfo.GetHashCode();
      if (rogueBuffInfo_ != null) hash ^= RogueBuffInfo.GetHashCode();
      hash ^= rogueCurrentGameInfo_.GetHashCode();
      if (rogueDiceInfo_ != null) hash ^= RogueDiceInfo.GetHashCode();
      if (virtualItemInfo_ != null) hash ^= VirtualItemInfo.GetHashCode();
      if (RogueSubMode != 0) hash ^= RogueSubMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueVirtualItemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueVirtualItemInfo);
      }
      if (rogueDiceInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueDiceInfo);
      }
      if (nousValueInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NousValueInfo);
      }
      if (rogueLineupInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RogueLineupInfo);
      }
      if (pendingAction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PendingAction);
      }
      if (rogueStoryInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RogueStoryInfo);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RogueBuffInfo);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StoryInfo);
      }
      if (rogueAeonInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RogueAeonInfo);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LevelInfo);
      }
      rogueCurrentGameInfo_.WriteTo(output, _repeated_rogueCurrentGameInfo_codec);
      if (virtualItemInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VirtualItemInfo);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RogueSubMode);
      }
      if (rogueDifficultyInfo_ != null) {
        output.WriteRawTag(138, 11);
        output.WriteMessage(RogueDifficultyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameMiracleInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameMiracleInfo);
      }
      if (rogueVirtualItemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RogueVirtualItemInfo);
      }
      if (rogueDiceInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RogueDiceInfo);
      }
      if (nousValueInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NousValueInfo);
      }
      if (rogueLineupInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RogueLineupInfo);
      }
      if (pendingAction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PendingAction);
      }
      if (rogueStoryInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RogueStoryInfo);
      }
      if (rogueBuffInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RogueBuffInfo);
      }
      if (storyInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StoryInfo);
      }
      if (rogueAeonInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RogueAeonInfo);
      }
      if (levelInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LevelInfo);
      }
      rogueCurrentGameInfo_.WriteTo(ref output, _repeated_rogueCurrentGameInfo_codec);
      if (virtualItemInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VirtualItemInfo);
      }
      if (RogueSubMode != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RogueSubMode);
      }
      if (rogueDifficultyInfo_ != null) {
        output.WriteRawTag(138, 11);
        output.WriteMessage(RogueDifficultyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameMiracleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameMiracleInfo);
      }
      if (rogueLineupInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueLineupInfo);
      }
      if (rogueDifficultyInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RogueDifficultyInfo);
      }
      if (storyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoryInfo);
      }
      if (rogueVirtualItemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueVirtualItemInfo);
      }
      if (rogueAeonInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueAeonInfo);
      }
      if (pendingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PendingAction);
      }
      if (rogueStoryInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueStoryInfo);
      }
      if (levelInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelInfo);
      }
      if (nousValueInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NousValueInfo);
      }
      if (rogueBuffInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueBuffInfo);
      }
      size += rogueCurrentGameInfo_.CalculateSize(_repeated_rogueCurrentGameInfo_codec);
      if (rogueDiceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RogueDiceInfo);
      }
      if (virtualItemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualItemInfo);
      }
      if (RogueSubMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RogueSubMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChessRogueGameInfo other) {
      if (other == null) {
        return;
      }
      if (other.gameMiracleInfo_ != null) {
        if (gameMiracleInfo_ == null) {
          GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
        }
        GameMiracleInfo.MergeFrom(other.GameMiracleInfo);
      }
      if (other.rogueLineupInfo_ != null) {
        if (rogueLineupInfo_ == null) {
          RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
        }
        RogueLineupInfo.MergeFrom(other.RogueLineupInfo);
      }
      if (other.rogueDifficultyInfo_ != null) {
        if (rogueDifficultyInfo_ == null) {
          RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
        }
        RogueDifficultyInfo.MergeFrom(other.RogueDifficultyInfo);
      }
      if (other.storyInfo_ != null) {
        if (storyInfo_ == null) {
          StoryInfo = new global::EggLink.DanhengServer.Proto.NGEJECDNAEO();
        }
        StoryInfo.MergeFrom(other.StoryInfo);
      }
      if (other.rogueVirtualItemInfo_ != null) {
        if (rogueVirtualItemInfo_ == null) {
          RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.LOJNAEKIENP();
        }
        RogueVirtualItemInfo.MergeFrom(other.RogueVirtualItemInfo);
      }
      if (other.rogueAeonInfo_ != null) {
        if (rogueAeonInfo_ == null) {
          RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
        }
        RogueAeonInfo.MergeFrom(other.RogueAeonInfo);
      }
      if (other.pendingAction_ != null) {
        if (pendingAction_ == null) {
          PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
        }
        PendingAction.MergeFrom(other.PendingAction);
      }
      if (other.rogueStoryInfo_ != null) {
        if (rogueStoryInfo_ == null) {
          RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
        }
        RogueStoryInfo.MergeFrom(other.RogueStoryInfo);
      }
      if (other.levelInfo_ != null) {
        if (levelInfo_ == null) {
          LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
        }
        LevelInfo.MergeFrom(other.LevelInfo);
      }
      if (other.nousValueInfo_ != null) {
        if (nousValueInfo_ == null) {
          NousValueInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfo();
        }
        NousValueInfo.MergeFrom(other.NousValueInfo);
      }
      if (other.rogueBuffInfo_ != null) {
        if (rogueBuffInfo_ == null) {
          RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
        }
        RogueBuffInfo.MergeFrom(other.RogueBuffInfo);
      }
      rogueCurrentGameInfo_.Add(other.rogueCurrentGameInfo_);
      if (other.rogueDiceInfo_ != null) {
        if (rogueDiceInfo_ == null) {
          RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
        }
        RogueDiceInfo.MergeFrom(other.RogueDiceInfo);
      }
      if (other.virtualItemInfo_ != null) {
        if (virtualItemInfo_ == null) {
          VirtualItemInfo = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
        }
        VirtualItemInfo.MergeFrom(other.VirtualItemInfo);
      }
      if (other.RogueSubMode != 0) {
        RogueSubMode = other.RogueSubMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 18: {
            if (rogueVirtualItemInfo_ == null) {
              RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.LOJNAEKIENP();
            }
            input.ReadMessage(RogueVirtualItemInfo);
            break;
          }
          case 26: {
            if (rogueDiceInfo_ == null) {
              RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
            }
            input.ReadMessage(RogueDiceInfo);
            break;
          }
          case 34: {
            if (nousValueInfo_ == null) {
              NousValueInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfo();
            }
            input.ReadMessage(NousValueInfo);
            break;
          }
          case 42: {
            if (rogueLineupInfo_ == null) {
              RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
            }
            input.ReadMessage(RogueLineupInfo);
            break;
          }
          case 50: {
            if (pendingAction_ == null) {
              PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
            }
            input.ReadMessage(PendingAction);
            break;
          }
          case 58: {
            if (rogueStoryInfo_ == null) {
              RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(RogueStoryInfo);
            break;
          }
          case 66: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 74: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.NGEJECDNAEO();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 82: {
            if (rogueAeonInfo_ == null) {
              RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
            }
            input.ReadMessage(RogueAeonInfo);
            break;
          }
          case 90: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 98: {
            rogueCurrentGameInfo_.AddEntriesFrom(input, _repeated_rogueCurrentGameInfo_codec);
            break;
          }
          case 106: {
            if (virtualItemInfo_ == null) {
              VirtualItemInfo = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
            }
            input.ReadMessage(VirtualItemInfo);
            break;
          }
          case 120: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
          case 1418: {
            if (rogueDifficultyInfo_ == null) {
              RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
            }
            input.ReadMessage(RogueDifficultyInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameMiracleInfo_ == null) {
              GameMiracleInfo = new global::EggLink.DanhengServer.Proto.ChessRogueMiracleInfo();
            }
            input.ReadMessage(GameMiracleInfo);
            break;
          }
          case 18: {
            if (rogueVirtualItemInfo_ == null) {
              RogueVirtualItemInfo = new global::EggLink.DanhengServer.Proto.LOJNAEKIENP();
            }
            input.ReadMessage(RogueVirtualItemInfo);
            break;
          }
          case 26: {
            if (rogueDiceInfo_ == null) {
              RogueDiceInfo = new global::EggLink.DanhengServer.Proto.ChessRogueDiceInfo();
            }
            input.ReadMessage(RogueDiceInfo);
            break;
          }
          case 34: {
            if (nousValueInfo_ == null) {
              NousValueInfo = new global::EggLink.DanhengServer.Proto.ChessRogueNousValueInfo();
            }
            input.ReadMessage(NousValueInfo);
            break;
          }
          case 42: {
            if (rogueLineupInfo_ == null) {
              RogueLineupInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLineupInfo();
            }
            input.ReadMessage(RogueLineupInfo);
            break;
          }
          case 50: {
            if (pendingAction_ == null) {
              PendingAction = new global::EggLink.DanhengServer.Proto.RogueCommonPendingAction();
            }
            input.ReadMessage(PendingAction);
            break;
          }
          case 58: {
            if (rogueStoryInfo_ == null) {
              RogueStoryInfo = new global::EggLink.DanhengServer.Proto.ChessRogueStoryInfo();
            }
            input.ReadMessage(RogueStoryInfo);
            break;
          }
          case 66: {
            if (rogueBuffInfo_ == null) {
              RogueBuffInfo = new global::EggLink.DanhengServer.Proto.ChessRogueBuffInfo();
            }
            input.ReadMessage(RogueBuffInfo);
            break;
          }
          case 74: {
            if (storyInfo_ == null) {
              StoryInfo = new global::EggLink.DanhengServer.Proto.NGEJECDNAEO();
            }
            input.ReadMessage(StoryInfo);
            break;
          }
          case 82: {
            if (rogueAeonInfo_ == null) {
              RogueAeonInfo = new global::EggLink.DanhengServer.Proto.ChessRogueAeonInfo();
            }
            input.ReadMessage(RogueAeonInfo);
            break;
          }
          case 90: {
            if (levelInfo_ == null) {
              LevelInfo = new global::EggLink.DanhengServer.Proto.ChessRogueLevelInfo();
            }
            input.ReadMessage(LevelInfo);
            break;
          }
          case 98: {
            rogueCurrentGameInfo_.AddEntriesFrom(ref input, _repeated_rogueCurrentGameInfo_codec);
            break;
          }
          case 106: {
            if (virtualItemInfo_ == null) {
              VirtualItemInfo = new global::EggLink.DanhengServer.Proto.RogueVirtualItem();
            }
            input.ReadMessage(VirtualItemInfo);
            break;
          }
          case 120: {
            RogueSubMode = input.ReadUInt32();
            break;
          }
          case 1418: {
            if (rogueDifficultyInfo_ == null) {
              RogueDifficultyInfo = new global::EggLink.DanhengServer.Proto.ChessRogueCurrentDifficultyInfo();
            }
            input.ReadMessage(RogueDifficultyInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
