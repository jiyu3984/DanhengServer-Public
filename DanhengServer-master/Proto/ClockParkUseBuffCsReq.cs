// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ClockParkUseBuffCsReq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from ClockParkUseBuffCsReq.proto</summary>
  public static partial class ClockParkUseBuffCsReqReflection {

    #region Descriptor
    /// <summary>File descriptor for ClockParkUseBuffCsReq.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClockParkUseBuffCsReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtDbG9ja1BhcmtVc2VCdWZmQ3NSZXEucHJvdG8iUgoVQ2xvY2tQYXJrVXNl",
            "QnVmZkNzUmVxEhMKC0VNQ0pOT0ZJTEtQGAkgASgNEhEKCXVuaXF1ZV9pZBgM",
            "IAEoBBIRCglzY3JpcHRfaWQYASABKA1CHqoCG0VnZ0xpbmsuRGFuaGVuZ1Nl",
            "cnZlci5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.ClockParkUseBuffCsReq), global::EggLink.DanhengServer.Proto.ClockParkUseBuffCsReq.Parser, new[]{ "EMCJNOFILKP", "UniqueId", "ScriptId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClockParkUseBuffCsReq : pb::IMessage<ClockParkUseBuffCsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClockParkUseBuffCsReq> _parser = new pb::MessageParser<ClockParkUseBuffCsReq>(() => new ClockParkUseBuffCsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClockParkUseBuffCsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ClockParkUseBuffCsReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClockParkUseBuffCsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClockParkUseBuffCsReq(ClockParkUseBuffCsReq other) : this() {
      eMCJNOFILKP_ = other.eMCJNOFILKP_;
      uniqueId_ = other.uniqueId_;
      scriptId_ = other.scriptId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClockParkUseBuffCsReq Clone() {
      return new ClockParkUseBuffCsReq(this);
    }

    /// <summary>Field number for the "EMCJNOFILKP" field.</summary>
    public const int EMCJNOFILKPFieldNumber = 9;
    private uint eMCJNOFILKP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EMCJNOFILKP {
      get { return eMCJNOFILKP_; }
      set {
        eMCJNOFILKP_ = value;
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 12;
    private ulong uniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    /// <summary>Field number for the "script_id" field.</summary>
    public const int ScriptIdFieldNumber = 1;
    private uint scriptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId {
      get { return scriptId_; }
      set {
        scriptId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClockParkUseBuffCsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClockParkUseBuffCsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EMCJNOFILKP != other.EMCJNOFILKP) return false;
      if (UniqueId != other.UniqueId) return false;
      if (ScriptId != other.ScriptId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EMCJNOFILKP != 0) hash ^= EMCJNOFILKP.GetHashCode();
      if (UniqueId != 0UL) hash ^= UniqueId.GetHashCode();
      if (ScriptId != 0) hash ^= ScriptId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScriptId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScriptId);
      }
      if (EMCJNOFILKP != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EMCJNOFILKP);
      }
      if (UniqueId != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScriptId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScriptId);
      }
      if (EMCJNOFILKP != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EMCJNOFILKP);
      }
      if (UniqueId != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EMCJNOFILKP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EMCJNOFILKP);
      }
      if (UniqueId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UniqueId);
      }
      if (ScriptId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClockParkUseBuffCsReq other) {
      if (other == null) {
        return;
      }
      if (other.EMCJNOFILKP != 0) {
        EMCJNOFILKP = other.EMCJNOFILKP;
      }
      if (other.UniqueId != 0UL) {
        UniqueId = other.UniqueId;
      }
      if (other.ScriptId != 0) {
        ScriptId = other.ScriptId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 72: {
            EMCJNOFILKP = input.ReadUInt32();
            break;
          }
          case 96: {
            UniqueId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 72: {
            EMCJNOFILKP = input.ReadUInt32();
            break;
          }
          case 96: {
            UniqueId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
