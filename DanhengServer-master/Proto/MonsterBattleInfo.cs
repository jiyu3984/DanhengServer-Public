// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonsterBattleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from MonsterBattleInfo.proto</summary>
  public static partial class MonsterBattleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for MonsterBattleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterBattleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdNb25zdGVyQmF0dGxlSW5mby5wcm90bxoVTW9uc3RlclBoYXNlU3R0LnBy",
            "b3RvGhFERUdHQkRPR0VHRy5wcm90bxoRUEpITkhBS09ITUoucHJvdG8aGkF0",
            "dGFja0RhbWFnZVByb3BlcnR5LnByb3RvGhVNb25zdGVyUHJvcGVydHkucHJv",
            "dG8aEURlYXRoU291cmNlLnByb3RvGhZTa2lsbFVzZVByb3BlcnR5LnByb3Rv",
            "GhFMR0pFREZHQkFBUC5wcm90byKjBgoRTW9uc3RlckJhdHRsZUluZm8SEQoJ",
            "ZW50aXR5X2lkGAEgASgNEhIKCm1vbnN0ZXJfaWQYAiABKA0SEwoLR05KSVBC",
            "TkhQSE4YAyABKA0SEwoLQktPR0JLR05HR0cYBCABKA0SJQoLR01JSElJUEVD",
            "UEEYBSABKAsyEC5Nb25zdGVyUHJvcGVydHkSEwoLdG90YWxfdHVybnMYBiAB",
            "KA0SFAoMdG90YWxfZGFtYWdlGAcgASgBEhIKCnRvdGFsX2hlYWwYCCABKAES",
            "GgoSdG90YWxfZGFtYWdlX3Rha2VuGAkgASgBEhMKC1BKTkVOSUtNUE9JGAog",
            "ASgBEhgKEHRvdGFsX2hwX3JlY292ZXIYCyABKAESEAoIc3RhZ2VfaWQYDCAB",
            "KA0SEQoJYmF0dGxlX2lkGA0gASgNEhMKC05DUE1CSk5FT0ZIGA4gASgNEjEK",
            "EmF0dGFja190eXBlX2RhbWFnZRgPIAMoCzIVLkF0dGFja0RhbWFnZVByb3Bl",
            "cnR5EiYKC3NraWxsX3RpbWVzGBAgAygLMhEuU2tpbGxVc2VQcm9wZXJ0eRIS",
            "CgpzdGFnZV90eXBlGBEgASgNEhMKC0ZFQkhCTEZNSU9EGBIgASgBEhYKDmRl",
            "bGF5X2N1bXVsYXRlGBMgASgBEiEKC0NIUENEQ05GSkJGGBQgASgOMgwuRGVh",
            "dGhTb3VyY2USDAoEd2F2ZRgVIAEoDRITCgtHS0lCREFLSEJPRRgWIAEoBRIN",
            "CgVwaGFzZRgXIAEoDRITCgtCTEdLSU9HT0VJRBgYIAEoDRIhCgtOTklJT0VN",
            "RkhDRBgZIAEoDjIMLkxHSkVERkdCQUFQEiAKCnNraWxsX2luZm8YGiADKAsy",
            "DC5QSkhOSEFLT0hNShITCgtITElPSktNQURMTRgbIAEoDRIlCgtKT0pDSU1O",
            "Q0dNUBgcIAMoCzIQLk1vbnN0ZXJQaGFzZVN0dBITCgtESkpOUENIT0tMQxgd",
            "IAEoDRITCgtHQkZMSUhOTlBFRBgeIAEoDRIhCgtMS1BPQ0xBQkdFRRgfIAEo",
            "DjIMLkRFR0dCRE9HRUdHQh6qAhtFZ2dMaW5rLkRhbmhlbmdTZXJ2ZXIuUHJv",
            "dG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.MonsterPhaseSttReflection.Descriptor, global::EggLink.DanhengServer.Proto.DEGGBDOGEGGReflection.Descriptor, global::EggLink.DanhengServer.Proto.PJHNHAKOHMJReflection.Descriptor, global::EggLink.DanhengServer.Proto.AttackDamagePropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.MonsterPropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.DeathSourceReflection.Descriptor, global::EggLink.DanhengServer.Proto.SkillUsePropertyReflection.Descriptor, global::EggLink.DanhengServer.Proto.LGJEDFGBAAPReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.MonsterBattleInfo), global::EggLink.DanhengServer.Proto.MonsterBattleInfo.Parser, new[]{ "EntityId", "MonsterId", "GNJIPBNHPHN", "BKOGBKGNGGG", "GMIHIIPECPA", "TotalTurns", "TotalDamage", "TotalHeal", "TotalDamageTaken", "PJNENIKMPOI", "TotalHpRecover", "StageId", "BattleId", "NCPMBJNEOFH", "AttackTypeDamage", "SkillTimes", "StageType", "FEBHBLFMIOD", "DelayCumulate", "CHPCDCNFJBF", "Wave", "GKIBDAKHBOE", "Phase", "BLGKIOGOEID", "NNIIOEMFHCD", "SkillInfo", "HLIOJKMADLM", "JOJCIMNCGMP", "DJJNPCHOKLC", "GBFLIHNNPED", "LKPOCLABGEE" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterBattleInfo : pb::IMessage<MonsterBattleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterBattleInfo> _parser = new pb::MessageParser<MonsterBattleInfo>(() => new MonsterBattleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterBattleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.MonsterBattleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBattleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBattleInfo(MonsterBattleInfo other) : this() {
      entityId_ = other.entityId_;
      monsterId_ = other.monsterId_;
      gNJIPBNHPHN_ = other.gNJIPBNHPHN_;
      bKOGBKGNGGG_ = other.bKOGBKGNGGG_;
      gMIHIIPECPA_ = other.gMIHIIPECPA_ != null ? other.gMIHIIPECPA_.Clone() : null;
      totalTurns_ = other.totalTurns_;
      totalDamage_ = other.totalDamage_;
      totalHeal_ = other.totalHeal_;
      totalDamageTaken_ = other.totalDamageTaken_;
      pJNENIKMPOI_ = other.pJNENIKMPOI_;
      totalHpRecover_ = other.totalHpRecover_;
      stageId_ = other.stageId_;
      battleId_ = other.battleId_;
      nCPMBJNEOFH_ = other.nCPMBJNEOFH_;
      attackTypeDamage_ = other.attackTypeDamage_.Clone();
      skillTimes_ = other.skillTimes_.Clone();
      stageType_ = other.stageType_;
      fEBHBLFMIOD_ = other.fEBHBLFMIOD_;
      delayCumulate_ = other.delayCumulate_;
      cHPCDCNFJBF_ = other.cHPCDCNFJBF_;
      wave_ = other.wave_;
      gKIBDAKHBOE_ = other.gKIBDAKHBOE_;
      phase_ = other.phase_;
      bLGKIOGOEID_ = other.bLGKIOGOEID_;
      nNIIOEMFHCD_ = other.nNIIOEMFHCD_;
      skillInfo_ = other.skillInfo_.Clone();
      hLIOJKMADLM_ = other.hLIOJKMADLM_;
      jOJCIMNCGMP_ = other.jOJCIMNCGMP_.Clone();
      dJJNPCHOKLC_ = other.dJJNPCHOKLC_;
      gBFLIHNNPED_ = other.gBFLIHNNPED_;
      lKPOCLABGEE_ = other.lKPOCLABGEE_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBattleInfo Clone() {
      return new MonsterBattleInfo(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private uint entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "monster_id" field.</summary>
    public const int MonsterIdFieldNumber = 2;
    private uint monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "GNJIPBNHPHN" field.</summary>
    public const int GNJIPBNHPHNFieldNumber = 3;
    private uint gNJIPBNHPHN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GNJIPBNHPHN {
      get { return gNJIPBNHPHN_; }
      set {
        gNJIPBNHPHN_ = value;
      }
    }

    /// <summary>Field number for the "BKOGBKGNGGG" field.</summary>
    public const int BKOGBKGNGGGFieldNumber = 4;
    private uint bKOGBKGNGGG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BKOGBKGNGGG {
      get { return bKOGBKGNGGG_; }
      set {
        bKOGBKGNGGG_ = value;
      }
    }

    /// <summary>Field number for the "GMIHIIPECPA" field.</summary>
    public const int GMIHIIPECPAFieldNumber = 5;
    private global::EggLink.DanhengServer.Proto.MonsterProperty gMIHIIPECPA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.MonsterProperty GMIHIIPECPA {
      get { return gMIHIIPECPA_; }
      set {
        gMIHIIPECPA_ = value;
      }
    }

    /// <summary>Field number for the "total_turns" field.</summary>
    public const int TotalTurnsFieldNumber = 6;
    private uint totalTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalTurns {
      get { return totalTurns_; }
      set {
        totalTurns_ = value;
      }
    }

    /// <summary>Field number for the "total_damage" field.</summary>
    public const int TotalDamageFieldNumber = 7;
    private double totalDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalDamage {
      get { return totalDamage_; }
      set {
        totalDamage_ = value;
      }
    }

    /// <summary>Field number for the "total_heal" field.</summary>
    public const int TotalHealFieldNumber = 8;
    private double totalHeal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalHeal {
      get { return totalHeal_; }
      set {
        totalHeal_ = value;
      }
    }

    /// <summary>Field number for the "total_damage_taken" field.</summary>
    public const int TotalDamageTakenFieldNumber = 9;
    private double totalDamageTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalDamageTaken {
      get { return totalDamageTaken_; }
      set {
        totalDamageTaken_ = value;
      }
    }

    /// <summary>Field number for the "PJNENIKMPOI" field.</summary>
    public const int PJNENIKMPOIFieldNumber = 10;
    private double pJNENIKMPOI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PJNENIKMPOI {
      get { return pJNENIKMPOI_; }
      set {
        pJNENIKMPOI_ = value;
      }
    }

    /// <summary>Field number for the "total_hp_recover" field.</summary>
    public const int TotalHpRecoverFieldNumber = 11;
    private double totalHpRecover_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalHpRecover {
      get { return totalHpRecover_; }
      set {
        totalHpRecover_ = value;
      }
    }

    /// <summary>Field number for the "stage_id" field.</summary>
    public const int StageIdFieldNumber = 12;
    private uint stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 13;
    private uint battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    /// <summary>Field number for the "NCPMBJNEOFH" field.</summary>
    public const int NCPMBJNEOFHFieldNumber = 14;
    private uint nCPMBJNEOFH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NCPMBJNEOFH {
      get { return nCPMBJNEOFH_; }
      set {
        nCPMBJNEOFH_ = value;
      }
    }

    /// <summary>Field number for the "attack_type_damage" field.</summary>
    public const int AttackTypeDamageFieldNumber = 15;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.AttackDamageProperty> _repeated_attackTypeDamage_codec
        = pb::FieldCodec.ForMessage(122, global::EggLink.DanhengServer.Proto.AttackDamageProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> attackTypeDamage_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.AttackDamageProperty> AttackTypeDamage {
      get { return attackTypeDamage_; }
    }

    /// <summary>Field number for the "skill_times" field.</summary>
    public const int SkillTimesFieldNumber = 16;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.SkillUseProperty> _repeated_skillTimes_codec
        = pb::FieldCodec.ForMessage(130, global::EggLink.DanhengServer.Proto.SkillUseProperty.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty> skillTimes_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.SkillUseProperty> SkillTimes {
      get { return skillTimes_; }
    }

    /// <summary>Field number for the "stage_type" field.</summary>
    public const int StageTypeFieldNumber = 17;
    private uint stageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageType {
      get { return stageType_; }
      set {
        stageType_ = value;
      }
    }

    /// <summary>Field number for the "FEBHBLFMIOD" field.</summary>
    public const int FEBHBLFMIODFieldNumber = 18;
    private double fEBHBLFMIOD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FEBHBLFMIOD {
      get { return fEBHBLFMIOD_; }
      set {
        fEBHBLFMIOD_ = value;
      }
    }

    /// <summary>Field number for the "delay_cumulate" field.</summary>
    public const int DelayCumulateFieldNumber = 19;
    private double delayCumulate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DelayCumulate {
      get { return delayCumulate_; }
      set {
        delayCumulate_ = value;
      }
    }

    /// <summary>Field number for the "CHPCDCNFJBF" field.</summary>
    public const int CHPCDCNFJBFFieldNumber = 20;
    private global::EggLink.DanhengServer.Proto.DeathSource cHPCDCNFJBF_ = global::EggLink.DanhengServer.Proto.DeathSource.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.DeathSource CHPCDCNFJBF {
      get { return cHPCDCNFJBF_; }
      set {
        cHPCDCNFJBF_ = value;
      }
    }

    /// <summary>Field number for the "wave" field.</summary>
    public const int WaveFieldNumber = 21;
    private uint wave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Wave {
      get { return wave_; }
      set {
        wave_ = value;
      }
    }

    /// <summary>Field number for the "GKIBDAKHBOE" field.</summary>
    public const int GKIBDAKHBOEFieldNumber = 22;
    private int gKIBDAKHBOE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GKIBDAKHBOE {
      get { return gKIBDAKHBOE_; }
      set {
        gKIBDAKHBOE_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 23;
    private uint phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "BLGKIOGOEID" field.</summary>
    public const int BLGKIOGOEIDFieldNumber = 24;
    private uint bLGKIOGOEID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BLGKIOGOEID {
      get { return bLGKIOGOEID_; }
      set {
        bLGKIOGOEID_ = value;
      }
    }

    /// <summary>Field number for the "NNIIOEMFHCD" field.</summary>
    public const int NNIIOEMFHCDFieldNumber = 25;
    private global::EggLink.DanhengServer.Proto.LGJEDFGBAAP nNIIOEMFHCD_ = global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.LGJEDFGBAAP NNIIOEMFHCD {
      get { return nNIIOEMFHCD_; }
      set {
        nNIIOEMFHCD_ = value;
      }
    }

    /// <summary>Field number for the "skill_info" field.</summary>
    public const int SkillInfoFieldNumber = 26;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.PJHNHAKOHMJ> _repeated_skillInfo_codec
        = pb::FieldCodec.ForMessage(210, global::EggLink.DanhengServer.Proto.PJHNHAKOHMJ.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PJHNHAKOHMJ> skillInfo_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PJHNHAKOHMJ>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.PJHNHAKOHMJ> SkillInfo {
      get { return skillInfo_; }
    }

    /// <summary>Field number for the "HLIOJKMADLM" field.</summary>
    public const int HLIOJKMADLMFieldNumber = 27;
    private uint hLIOJKMADLM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HLIOJKMADLM {
      get { return hLIOJKMADLM_; }
      set {
        hLIOJKMADLM_ = value;
      }
    }

    /// <summary>Field number for the "JOJCIMNCGMP" field.</summary>
    public const int JOJCIMNCGMPFieldNumber = 28;
    private static readonly pb::FieldCodec<global::EggLink.DanhengServer.Proto.MonsterPhaseStt> _repeated_jOJCIMNCGMP_codec
        = pb::FieldCodec.ForMessage(226, global::EggLink.DanhengServer.Proto.MonsterPhaseStt.Parser);
    private readonly pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MonsterPhaseStt> jOJCIMNCGMP_ = new pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MonsterPhaseStt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EggLink.DanhengServer.Proto.MonsterPhaseStt> JOJCIMNCGMP {
      get { return jOJCIMNCGMP_; }
    }

    /// <summary>Field number for the "DJJNPCHOKLC" field.</summary>
    public const int DJJNPCHOKLCFieldNumber = 29;
    private uint dJJNPCHOKLC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DJJNPCHOKLC {
      get { return dJJNPCHOKLC_; }
      set {
        dJJNPCHOKLC_ = value;
      }
    }

    /// <summary>Field number for the "GBFLIHNNPED" field.</summary>
    public const int GBFLIHNNPEDFieldNumber = 30;
    private uint gBFLIHNNPED_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GBFLIHNNPED {
      get { return gBFLIHNNPED_; }
      set {
        gBFLIHNNPED_ = value;
      }
    }

    /// <summary>Field number for the "LKPOCLABGEE" field.</summary>
    public const int LKPOCLABGEEFieldNumber = 31;
    private global::EggLink.DanhengServer.Proto.DEGGBDOGEGG lKPOCLABGEE_ = global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.DEGGBDOGEGG LKPOCLABGEE {
      get { return lKPOCLABGEE_; }
      set {
        lKPOCLABGEE_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterBattleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterBattleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (MonsterId != other.MonsterId) return false;
      if (GNJIPBNHPHN != other.GNJIPBNHPHN) return false;
      if (BKOGBKGNGGG != other.BKOGBKGNGGG) return false;
      if (!object.Equals(GMIHIIPECPA, other.GMIHIIPECPA)) return false;
      if (TotalTurns != other.TotalTurns) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDamage, other.TotalDamage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalHeal, other.TotalHeal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDamageTaken, other.TotalDamageTaken)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PJNENIKMPOI, other.PJNENIKMPOI)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalHpRecover, other.TotalHpRecover)) return false;
      if (StageId != other.StageId) return false;
      if (BattleId != other.BattleId) return false;
      if (NCPMBJNEOFH != other.NCPMBJNEOFH) return false;
      if(!attackTypeDamage_.Equals(other.attackTypeDamage_)) return false;
      if(!skillTimes_.Equals(other.skillTimes_)) return false;
      if (StageType != other.StageType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FEBHBLFMIOD, other.FEBHBLFMIOD)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DelayCumulate, other.DelayCumulate)) return false;
      if (CHPCDCNFJBF != other.CHPCDCNFJBF) return false;
      if (Wave != other.Wave) return false;
      if (GKIBDAKHBOE != other.GKIBDAKHBOE) return false;
      if (Phase != other.Phase) return false;
      if (BLGKIOGOEID != other.BLGKIOGOEID) return false;
      if (NNIIOEMFHCD != other.NNIIOEMFHCD) return false;
      if(!skillInfo_.Equals(other.skillInfo_)) return false;
      if (HLIOJKMADLM != other.HLIOJKMADLM) return false;
      if(!jOJCIMNCGMP_.Equals(other.jOJCIMNCGMP_)) return false;
      if (DJJNPCHOKLC != other.DJJNPCHOKLC) return false;
      if (GBFLIHNNPED != other.GBFLIHNNPED) return false;
      if (LKPOCLABGEE != other.LKPOCLABGEE) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId != 0) hash ^= EntityId.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (GNJIPBNHPHN != 0) hash ^= GNJIPBNHPHN.GetHashCode();
      if (BKOGBKGNGGG != 0) hash ^= BKOGBKGNGGG.GetHashCode();
      if (gMIHIIPECPA_ != null) hash ^= GMIHIIPECPA.GetHashCode();
      if (TotalTurns != 0) hash ^= TotalTurns.GetHashCode();
      if (TotalDamage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDamage);
      if (TotalHeal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalHeal);
      if (TotalDamageTaken != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDamageTaken);
      if (PJNENIKMPOI != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PJNENIKMPOI);
      if (TotalHpRecover != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalHpRecover);
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (NCPMBJNEOFH != 0) hash ^= NCPMBJNEOFH.GetHashCode();
      hash ^= attackTypeDamage_.GetHashCode();
      hash ^= skillTimes_.GetHashCode();
      if (StageType != 0) hash ^= StageType.GetHashCode();
      if (FEBHBLFMIOD != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FEBHBLFMIOD);
      if (DelayCumulate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DelayCumulate);
      if (CHPCDCNFJBF != global::EggLink.DanhengServer.Proto.DeathSource.Unknown) hash ^= CHPCDCNFJBF.GetHashCode();
      if (Wave != 0) hash ^= Wave.GetHashCode();
      if (GKIBDAKHBOE != 0) hash ^= GKIBDAKHBOE.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (BLGKIOGOEID != 0) hash ^= BLGKIOGOEID.GetHashCode();
      if (NNIIOEMFHCD != global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone) hash ^= NNIIOEMFHCD.GetHashCode();
      hash ^= skillInfo_.GetHashCode();
      if (HLIOJKMADLM != 0) hash ^= HLIOJKMADLM.GetHashCode();
      hash ^= jOJCIMNCGMP_.GetHashCode();
      if (DJJNPCHOKLC != 0) hash ^= DJJNPCHOKLC.GetHashCode();
      if (GBFLIHNNPED != 0) hash ^= GBFLIHNNPED.GetHashCode();
      if (LKPOCLABGEE != global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate) hash ^= LKPOCLABGEE.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EntityId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(EntityId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MonsterId);
      }
      if (GNJIPBNHPHN != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GNJIPBNHPHN);
      }
      if (BKOGBKGNGGG != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BKOGBKGNGGG);
      }
      if (gMIHIIPECPA_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GMIHIIPECPA);
      }
      if (TotalTurns != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotalTurns);
      }
      if (TotalDamage != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TotalDamage);
      }
      if (TotalHeal != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(TotalHeal);
      }
      if (TotalDamageTaken != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TotalDamageTaken);
      }
      if (PJNENIKMPOI != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(PJNENIKMPOI);
      }
      if (TotalHpRecover != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(TotalHpRecover);
      }
      if (StageId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(StageId);
      }
      if (BattleId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BattleId);
      }
      if (NCPMBJNEOFH != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(NCPMBJNEOFH);
      }
      attackTypeDamage_.WriteTo(output, _repeated_attackTypeDamage_codec);
      skillTimes_.WriteTo(output, _repeated_skillTimes_codec);
      if (StageType != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(StageType);
      }
      if (FEBHBLFMIOD != 0D) {
        output.WriteRawTag(145, 1);
        output.WriteDouble(FEBHBLFMIOD);
      }
      if (DelayCumulate != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(DelayCumulate);
      }
      if (CHPCDCNFJBF != global::EggLink.DanhengServer.Proto.DeathSource.Unknown) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) CHPCDCNFJBF);
      }
      if (Wave != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(Wave);
      }
      if (GKIBDAKHBOE != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(GKIBDAKHBOE);
      }
      if (Phase != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Phase);
      }
      if (BLGKIOGOEID != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(BLGKIOGOEID);
      }
      if (NNIIOEMFHCD != global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) NNIIOEMFHCD);
      }
      skillInfo_.WriteTo(output, _repeated_skillInfo_codec);
      if (HLIOJKMADLM != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(HLIOJKMADLM);
      }
      jOJCIMNCGMP_.WriteTo(output, _repeated_jOJCIMNCGMP_codec);
      if (DJJNPCHOKLC != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DJJNPCHOKLC);
      }
      if (GBFLIHNNPED != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(GBFLIHNNPED);
      }
      if (LKPOCLABGEE != global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) LKPOCLABGEE);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EntityId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(EntityId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MonsterId);
      }
      if (GNJIPBNHPHN != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GNJIPBNHPHN);
      }
      if (BKOGBKGNGGG != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BKOGBKGNGGG);
      }
      if (gMIHIIPECPA_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GMIHIIPECPA);
      }
      if (TotalTurns != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotalTurns);
      }
      if (TotalDamage != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TotalDamage);
      }
      if (TotalHeal != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(TotalHeal);
      }
      if (TotalDamageTaken != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TotalDamageTaken);
      }
      if (PJNENIKMPOI != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(PJNENIKMPOI);
      }
      if (TotalHpRecover != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(TotalHpRecover);
      }
      if (StageId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(StageId);
      }
      if (BattleId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BattleId);
      }
      if (NCPMBJNEOFH != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(NCPMBJNEOFH);
      }
      attackTypeDamage_.WriteTo(ref output, _repeated_attackTypeDamage_codec);
      skillTimes_.WriteTo(ref output, _repeated_skillTimes_codec);
      if (StageType != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(StageType);
      }
      if (FEBHBLFMIOD != 0D) {
        output.WriteRawTag(145, 1);
        output.WriteDouble(FEBHBLFMIOD);
      }
      if (DelayCumulate != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(DelayCumulate);
      }
      if (CHPCDCNFJBF != global::EggLink.DanhengServer.Proto.DeathSource.Unknown) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) CHPCDCNFJBF);
      }
      if (Wave != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(Wave);
      }
      if (GKIBDAKHBOE != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(GKIBDAKHBOE);
      }
      if (Phase != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Phase);
      }
      if (BLGKIOGOEID != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(BLGKIOGOEID);
      }
      if (NNIIOEMFHCD != global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) NNIIOEMFHCD);
      }
      skillInfo_.WriteTo(ref output, _repeated_skillInfo_codec);
      if (HLIOJKMADLM != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(HLIOJKMADLM);
      }
      jOJCIMNCGMP_.WriteTo(ref output, _repeated_jOJCIMNCGMP_codec);
      if (DJJNPCHOKLC != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(DJJNPCHOKLC);
      }
      if (GBFLIHNNPED != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(GBFLIHNNPED);
      }
      if (LKPOCLABGEE != global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) LKPOCLABGEE);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonsterId);
      }
      if (GNJIPBNHPHN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GNJIPBNHPHN);
      }
      if (BKOGBKGNGGG != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BKOGBKGNGGG);
      }
      if (gMIHIIPECPA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GMIHIIPECPA);
      }
      if (TotalTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTurns);
      }
      if (TotalDamage != 0D) {
        size += 1 + 8;
      }
      if (TotalHeal != 0D) {
        size += 1 + 8;
      }
      if (TotalDamageTaken != 0D) {
        size += 1 + 8;
      }
      if (PJNENIKMPOI != 0D) {
        size += 1 + 8;
      }
      if (TotalHpRecover != 0D) {
        size += 1 + 8;
      }
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BattleId);
      }
      if (NCPMBJNEOFH != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NCPMBJNEOFH);
      }
      size += attackTypeDamage_.CalculateSize(_repeated_attackTypeDamage_codec);
      size += skillTimes_.CalculateSize(_repeated_skillTimes_codec);
      if (StageType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StageType);
      }
      if (FEBHBLFMIOD != 0D) {
        size += 2 + 8;
      }
      if (DelayCumulate != 0D) {
        size += 2 + 8;
      }
      if (CHPCDCNFJBF != global::EggLink.DanhengServer.Proto.DeathSource.Unknown) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CHPCDCNFJBF);
      }
      if (Wave != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Wave);
      }
      if (GKIBDAKHBOE != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GKIBDAKHBOE);
      }
      if (Phase != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Phase);
      }
      if (BLGKIOGOEID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BLGKIOGOEID);
      }
      if (NNIIOEMFHCD != global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NNIIOEMFHCD);
      }
      size += skillInfo_.CalculateSize(_repeated_skillInfo_codec);
      if (HLIOJKMADLM != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HLIOJKMADLM);
      }
      size += jOJCIMNCGMP_.CalculateSize(_repeated_jOJCIMNCGMP_codec);
      if (DJJNPCHOKLC != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DJJNPCHOKLC);
      }
      if (GBFLIHNNPED != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GBFLIHNNPED);
      }
      if (LKPOCLABGEE != global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LKPOCLABGEE);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterBattleInfo other) {
      if (other == null) {
        return;
      }
      if (other.EntityId != 0) {
        EntityId = other.EntityId;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.GNJIPBNHPHN != 0) {
        GNJIPBNHPHN = other.GNJIPBNHPHN;
      }
      if (other.BKOGBKGNGGG != 0) {
        BKOGBKGNGGG = other.BKOGBKGNGGG;
      }
      if (other.gMIHIIPECPA_ != null) {
        if (gMIHIIPECPA_ == null) {
          GMIHIIPECPA = new global::EggLink.DanhengServer.Proto.MonsterProperty();
        }
        GMIHIIPECPA.MergeFrom(other.GMIHIIPECPA);
      }
      if (other.TotalTurns != 0) {
        TotalTurns = other.TotalTurns;
      }
      if (other.TotalDamage != 0D) {
        TotalDamage = other.TotalDamage;
      }
      if (other.TotalHeal != 0D) {
        TotalHeal = other.TotalHeal;
      }
      if (other.TotalDamageTaken != 0D) {
        TotalDamageTaken = other.TotalDamageTaken;
      }
      if (other.PJNENIKMPOI != 0D) {
        PJNENIKMPOI = other.PJNENIKMPOI;
      }
      if (other.TotalHpRecover != 0D) {
        TotalHpRecover = other.TotalHpRecover;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      if (other.NCPMBJNEOFH != 0) {
        NCPMBJNEOFH = other.NCPMBJNEOFH;
      }
      attackTypeDamage_.Add(other.attackTypeDamage_);
      skillTimes_.Add(other.skillTimes_);
      if (other.StageType != 0) {
        StageType = other.StageType;
      }
      if (other.FEBHBLFMIOD != 0D) {
        FEBHBLFMIOD = other.FEBHBLFMIOD;
      }
      if (other.DelayCumulate != 0D) {
        DelayCumulate = other.DelayCumulate;
      }
      if (other.CHPCDCNFJBF != global::EggLink.DanhengServer.Proto.DeathSource.Unknown) {
        CHPCDCNFJBF = other.CHPCDCNFJBF;
      }
      if (other.Wave != 0) {
        Wave = other.Wave;
      }
      if (other.GKIBDAKHBOE != 0) {
        GKIBDAKHBOE = other.GKIBDAKHBOE;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.BLGKIOGOEID != 0) {
        BLGKIOGOEID = other.BLGKIOGOEID;
      }
      if (other.NNIIOEMFHCD != global::EggLink.DanhengServer.Proto.LGJEDFGBAAP.TagNone) {
        NNIIOEMFHCD = other.NNIIOEMFHCD;
      }
      skillInfo_.Add(other.skillInfo_);
      if (other.HLIOJKMADLM != 0) {
        HLIOJKMADLM = other.HLIOJKMADLM;
      }
      jOJCIMNCGMP_.Add(other.jOJCIMNCGMP_);
      if (other.DJJNPCHOKLC != 0) {
        DJJNPCHOKLC = other.DJJNPCHOKLC;
      }
      if (other.GBFLIHNNPED != 0) {
        GBFLIHNNPED = other.GBFLIHNNPED;
      }
      if (other.LKPOCLABGEE != global::EggLink.DanhengServer.Proto.DEGGBDOGEGG.NormalCreate) {
        LKPOCLABGEE = other.LKPOCLABGEE;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadUInt32();
            break;
          }
          case 24: {
            GNJIPBNHPHN = input.ReadUInt32();
            break;
          }
          case 32: {
            BKOGBKGNGGG = input.ReadUInt32();
            break;
          }
          case 42: {
            if (gMIHIIPECPA_ == null) {
              GMIHIIPECPA = new global::EggLink.DanhengServer.Proto.MonsterProperty();
            }
            input.ReadMessage(GMIHIIPECPA);
            break;
          }
          case 48: {
            TotalTurns = input.ReadUInt32();
            break;
          }
          case 57: {
            TotalDamage = input.ReadDouble();
            break;
          }
          case 65: {
            TotalHeal = input.ReadDouble();
            break;
          }
          case 73: {
            TotalDamageTaken = input.ReadDouble();
            break;
          }
          case 81: {
            PJNENIKMPOI = input.ReadDouble();
            break;
          }
          case 89: {
            TotalHpRecover = input.ReadDouble();
            break;
          }
          case 96: {
            StageId = input.ReadUInt32();
            break;
          }
          case 104: {
            BattleId = input.ReadUInt32();
            break;
          }
          case 112: {
            NCPMBJNEOFH = input.ReadUInt32();
            break;
          }
          case 122: {
            attackTypeDamage_.AddEntriesFrom(input, _repeated_attackTypeDamage_codec);
            break;
          }
          case 130: {
            skillTimes_.AddEntriesFrom(input, _repeated_skillTimes_codec);
            break;
          }
          case 136: {
            StageType = input.ReadUInt32();
            break;
          }
          case 145: {
            FEBHBLFMIOD = input.ReadDouble();
            break;
          }
          case 153: {
            DelayCumulate = input.ReadDouble();
            break;
          }
          case 160: {
            CHPCDCNFJBF = (global::EggLink.DanhengServer.Proto.DeathSource) input.ReadEnum();
            break;
          }
          case 168: {
            Wave = input.ReadUInt32();
            break;
          }
          case 176: {
            GKIBDAKHBOE = input.ReadInt32();
            break;
          }
          case 184: {
            Phase = input.ReadUInt32();
            break;
          }
          case 192: {
            BLGKIOGOEID = input.ReadUInt32();
            break;
          }
          case 200: {
            NNIIOEMFHCD = (global::EggLink.DanhengServer.Proto.LGJEDFGBAAP) input.ReadEnum();
            break;
          }
          case 210: {
            skillInfo_.AddEntriesFrom(input, _repeated_skillInfo_codec);
            break;
          }
          case 216: {
            HLIOJKMADLM = input.ReadUInt32();
            break;
          }
          case 226: {
            jOJCIMNCGMP_.AddEntriesFrom(input, _repeated_jOJCIMNCGMP_codec);
            break;
          }
          case 232: {
            DJJNPCHOKLC = input.ReadUInt32();
            break;
          }
          case 240: {
            GBFLIHNNPED = input.ReadUInt32();
            break;
          }
          case 248: {
            LKPOCLABGEE = (global::EggLink.DanhengServer.Proto.DEGGBDOGEGG) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadUInt32();
            break;
          }
          case 24: {
            GNJIPBNHPHN = input.ReadUInt32();
            break;
          }
          case 32: {
            BKOGBKGNGGG = input.ReadUInt32();
            break;
          }
          case 42: {
            if (gMIHIIPECPA_ == null) {
              GMIHIIPECPA = new global::EggLink.DanhengServer.Proto.MonsterProperty();
            }
            input.ReadMessage(GMIHIIPECPA);
            break;
          }
          case 48: {
            TotalTurns = input.ReadUInt32();
            break;
          }
          case 57: {
            TotalDamage = input.ReadDouble();
            break;
          }
          case 65: {
            TotalHeal = input.ReadDouble();
            break;
          }
          case 73: {
            TotalDamageTaken = input.ReadDouble();
            break;
          }
          case 81: {
            PJNENIKMPOI = input.ReadDouble();
            break;
          }
          case 89: {
            TotalHpRecover = input.ReadDouble();
            break;
          }
          case 96: {
            StageId = input.ReadUInt32();
            break;
          }
          case 104: {
            BattleId = input.ReadUInt32();
            break;
          }
          case 112: {
            NCPMBJNEOFH = input.ReadUInt32();
            break;
          }
          case 122: {
            attackTypeDamage_.AddEntriesFrom(ref input, _repeated_attackTypeDamage_codec);
            break;
          }
          case 130: {
            skillTimes_.AddEntriesFrom(ref input, _repeated_skillTimes_codec);
            break;
          }
          case 136: {
            StageType = input.ReadUInt32();
            break;
          }
          case 145: {
            FEBHBLFMIOD = input.ReadDouble();
            break;
          }
          case 153: {
            DelayCumulate = input.ReadDouble();
            break;
          }
          case 160: {
            CHPCDCNFJBF = (global::EggLink.DanhengServer.Proto.DeathSource) input.ReadEnum();
            break;
          }
          case 168: {
            Wave = input.ReadUInt32();
            break;
          }
          case 176: {
            GKIBDAKHBOE = input.ReadInt32();
            break;
          }
          case 184: {
            Phase = input.ReadUInt32();
            break;
          }
          case 192: {
            BLGKIOGOEID = input.ReadUInt32();
            break;
          }
          case 200: {
            NNIIOEMFHCD = (global::EggLink.DanhengServer.Proto.LGJEDFGBAAP) input.ReadEnum();
            break;
          }
          case 210: {
            skillInfo_.AddEntriesFrom(ref input, _repeated_skillInfo_codec);
            break;
          }
          case 216: {
            HLIOJKMADLM = input.ReadUInt32();
            break;
          }
          case 226: {
            jOJCIMNCGMP_.AddEntriesFrom(ref input, _repeated_jOJCIMNCGMP_codec);
            break;
          }
          case 232: {
            DJJNPCHOKLC = input.ReadUInt32();
            break;
          }
          case 240: {
            GBFLIHNNPED = input.ReadUInt32();
            break;
          }
          case 248: {
            LKPOCLABGEE = (global::EggLink.DanhengServer.Proto.DEGGBDOGEGG) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
