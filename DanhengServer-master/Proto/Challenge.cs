// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Challenge.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from Challenge.proto</summary>
  public static partial class ChallengeReflection {

    #region Descriptor
    /// <summary>File descriptor for Challenge.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChallengeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9DaGFsbGVuZ2UucHJvdG8aGENoYWxsZW5nZVN0YWdlSW5mby5wcm90byK7",
            "AQoJQ2hhbGxlbmdlEhAKCHNjb3JlX2lkGAcgASgNEhMKC0JHRkVLSEZNRUlI",
            "GAwgASgIEhQKDGNoYWxsZW5nZV9pZBgDIAEoDRInCgpzdGFnZV9pbmZvGAsg",
            "ASgLMhMuQ2hhbGxlbmdlU3RhZ2VJbmZvEhEKCXNjb3JlX3R3bxgCIAEoDRIR",
            "CglyZWNvcmRfaWQYASABKA0SFAoMdGFrZW5fcmV3YXJkGAYgASgNEgwKBHN0",
            "YXIYDSABKA1CHqoCG0VnZ0xpbmsuRGFuaGVuZ1NlcnZlci5Qcm90b2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EggLink.DanhengServer.Proto.ChallengeStageInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.Challenge), global::EggLink.DanhengServer.Proto.Challenge.Parser, new[]{ "ScoreId", "BGFEKHFMEIH", "ChallengeId", "StageInfo", "ScoreTwo", "RecordId", "TakenReward", "Star" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Challenge : pb::IMessage<Challenge>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Challenge> _parser = new pb::MessageParser<Challenge>(() => new Challenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Challenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.ChallengeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Challenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Challenge(Challenge other) : this() {
      scoreId_ = other.scoreId_;
      bGFEKHFMEIH_ = other.bGFEKHFMEIH_;
      challengeId_ = other.challengeId_;
      stageInfo_ = other.stageInfo_ != null ? other.stageInfo_.Clone() : null;
      scoreTwo_ = other.scoreTwo_;
      recordId_ = other.recordId_;
      takenReward_ = other.takenReward_;
      star_ = other.star_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Challenge Clone() {
      return new Challenge(this);
    }

    /// <summary>Field number for the "score_id" field.</summary>
    public const int ScoreIdFieldNumber = 7;
    private uint scoreId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreId {
      get { return scoreId_; }
      set {
        scoreId_ = value;
      }
    }

    /// <summary>Field number for the "BGFEKHFMEIH" field.</summary>
    public const int BGFEKHFMEIHFieldNumber = 12;
    private bool bGFEKHFMEIH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BGFEKHFMEIH {
      get { return bGFEKHFMEIH_; }
      set {
        bGFEKHFMEIH_ = value;
      }
    }

    /// <summary>Field number for the "challenge_id" field.</summary>
    public const int ChallengeIdFieldNumber = 3;
    private uint challengeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChallengeId {
      get { return challengeId_; }
      set {
        challengeId_ = value;
      }
    }

    /// <summary>Field number for the "stage_info" field.</summary>
    public const int StageInfoFieldNumber = 11;
    private global::EggLink.DanhengServer.Proto.ChallengeStageInfo stageInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EggLink.DanhengServer.Proto.ChallengeStageInfo StageInfo {
      get { return stageInfo_; }
      set {
        stageInfo_ = value;
      }
    }

    /// <summary>Field number for the "score_two" field.</summary>
    public const int ScoreTwoFieldNumber = 2;
    private uint scoreTwo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreTwo {
      get { return scoreTwo_; }
      set {
        scoreTwo_ = value;
      }
    }

    /// <summary>Field number for the "record_id" field.</summary>
    public const int RecordIdFieldNumber = 1;
    private uint recordId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RecordId {
      get { return recordId_; }
      set {
        recordId_ = value;
      }
    }

    /// <summary>Field number for the "taken_reward" field.</summary>
    public const int TakenRewardFieldNumber = 6;
    private uint takenReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TakenReward {
      get { return takenReward_; }
      set {
        takenReward_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 13;
    private uint star_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Challenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Challenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScoreId != other.ScoreId) return false;
      if (BGFEKHFMEIH != other.BGFEKHFMEIH) return false;
      if (ChallengeId != other.ChallengeId) return false;
      if (!object.Equals(StageInfo, other.StageInfo)) return false;
      if (ScoreTwo != other.ScoreTwo) return false;
      if (RecordId != other.RecordId) return false;
      if (TakenReward != other.TakenReward) return false;
      if (Star != other.Star) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ScoreId != 0) hash ^= ScoreId.GetHashCode();
      if (BGFEKHFMEIH != false) hash ^= BGFEKHFMEIH.GetHashCode();
      if (ChallengeId != 0) hash ^= ChallengeId.GetHashCode();
      if (stageInfo_ != null) hash ^= StageInfo.GetHashCode();
      if (ScoreTwo != 0) hash ^= ScoreTwo.GetHashCode();
      if (RecordId != 0) hash ^= RecordId.GetHashCode();
      if (TakenReward != 0) hash ^= TakenReward.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RecordId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RecordId);
      }
      if (ScoreTwo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScoreTwo);
      }
      if (ChallengeId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ChallengeId);
      }
      if (TakenReward != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TakenReward);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScoreId);
      }
      if (stageInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StageInfo);
      }
      if (BGFEKHFMEIH != false) {
        output.WriteRawTag(96);
        output.WriteBool(BGFEKHFMEIH);
      }
      if (Star != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RecordId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RecordId);
      }
      if (ScoreTwo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScoreTwo);
      }
      if (ChallengeId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ChallengeId);
      }
      if (TakenReward != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TakenReward);
      }
      if (ScoreId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScoreId);
      }
      if (stageInfo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StageInfo);
      }
      if (BGFEKHFMEIH != false) {
        output.WriteRawTag(96);
        output.WriteBool(BGFEKHFMEIH);
      }
      if (Star != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ScoreId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScoreId);
      }
      if (BGFEKHFMEIH != false) {
        size += 1 + 1;
      }
      if (ChallengeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeId);
      }
      if (stageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageInfo);
      }
      if (ScoreTwo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScoreTwo);
      }
      if (RecordId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecordId);
      }
      if (TakenReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TakenReward);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Star);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Challenge other) {
      if (other == null) {
        return;
      }
      if (other.ScoreId != 0) {
        ScoreId = other.ScoreId;
      }
      if (other.BGFEKHFMEIH != false) {
        BGFEKHFMEIH = other.BGFEKHFMEIH;
      }
      if (other.ChallengeId != 0) {
        ChallengeId = other.ChallengeId;
      }
      if (other.stageInfo_ != null) {
        if (stageInfo_ == null) {
          StageInfo = new global::EggLink.DanhengServer.Proto.ChallengeStageInfo();
        }
        StageInfo.MergeFrom(other.StageInfo);
      }
      if (other.ScoreTwo != 0) {
        ScoreTwo = other.ScoreTwo;
      }
      if (other.RecordId != 0) {
        RecordId = other.RecordId;
      }
      if (other.TakenReward != 0) {
        TakenReward = other.TakenReward;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordId = input.ReadUInt32();
            break;
          }
          case 16: {
            ScoreTwo = input.ReadUInt32();
            break;
          }
          case 24: {
            ChallengeId = input.ReadUInt32();
            break;
          }
          case 48: {
            TakenReward = input.ReadUInt32();
            break;
          }
          case 56: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 90: {
            if (stageInfo_ == null) {
              StageInfo = new global::EggLink.DanhengServer.Proto.ChallengeStageInfo();
            }
            input.ReadMessage(StageInfo);
            break;
          }
          case 96: {
            BGFEKHFMEIH = input.ReadBool();
            break;
          }
          case 104: {
            Star = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RecordId = input.ReadUInt32();
            break;
          }
          case 16: {
            ScoreTwo = input.ReadUInt32();
            break;
          }
          case 24: {
            ChallengeId = input.ReadUInt32();
            break;
          }
          case 48: {
            TakenReward = input.ReadUInt32();
            break;
          }
          case 56: {
            ScoreId = input.ReadUInt32();
            break;
          }
          case 90: {
            if (stageInfo_ == null) {
              StageInfo = new global::EggLink.DanhengServer.Proto.ChallengeStageInfo();
            }
            input.ReadMessage(StageInfo);
            break;
          }
          case 96: {
            BGFEKHFMEIH = input.ReadBool();
            break;
          }
          case 104: {
            Star = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
