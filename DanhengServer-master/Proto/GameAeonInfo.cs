// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameAeonInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EggLink.DanhengServer.Proto {

  /// <summary>Holder for reflection information generated from GameAeonInfo.proto</summary>
  public static partial class GameAeonInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for GameAeonInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameAeonInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJHYW1lQWVvbkluZm8ucHJvdG8iXAoMR2FtZUFlb25JbmZvEhMKC2lzX3Vu",
            "bG9ja2VkGA0gASgIEiEKGXVubG9ja2VkX2Flb25fZW5oYW5jZV9udW0YAiAB",
            "KA0SFAoMZ2FtZV9hZW9uX2lkGAQgASgNQh6qAhtFZ2dMaW5rLkRhbmhlbmdT",
            "ZXJ2ZXIuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EggLink.DanhengServer.Proto.GameAeonInfo), global::EggLink.DanhengServer.Proto.GameAeonInfo.Parser, new[]{ "IsUnlocked", "UnlockedAeonEnhanceNum", "GameAeonId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameAeonInfo : pb::IMessage<GameAeonInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameAeonInfo> _parser = new pb::MessageParser<GameAeonInfo>(() => new GameAeonInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameAeonInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EggLink.DanhengServer.Proto.GameAeonInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAeonInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAeonInfo(GameAeonInfo other) : this() {
      isUnlocked_ = other.isUnlocked_;
      unlockedAeonEnhanceNum_ = other.unlockedAeonEnhanceNum_;
      gameAeonId_ = other.gameAeonId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAeonInfo Clone() {
      return new GameAeonInfo(this);
    }

    /// <summary>Field number for the "is_unlocked" field.</summary>
    public const int IsUnlockedFieldNumber = 13;
    private bool isUnlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnlocked {
      get { return isUnlocked_; }
      set {
        isUnlocked_ = value;
      }
    }

    /// <summary>Field number for the "unlocked_aeon_enhance_num" field.</summary>
    public const int UnlockedAeonEnhanceNumFieldNumber = 2;
    private uint unlockedAeonEnhanceNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnlockedAeonEnhanceNum {
      get { return unlockedAeonEnhanceNum_; }
      set {
        unlockedAeonEnhanceNum_ = value;
      }
    }

    /// <summary>Field number for the "game_aeon_id" field.</summary>
    public const int GameAeonIdFieldNumber = 4;
    private uint gameAeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameAeonId {
      get { return gameAeonId_; }
      set {
        gameAeonId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameAeonInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameAeonInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsUnlocked != other.IsUnlocked) return false;
      if (UnlockedAeonEnhanceNum != other.UnlockedAeonEnhanceNum) return false;
      if (GameAeonId != other.GameAeonId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsUnlocked != false) hash ^= IsUnlocked.GetHashCode();
      if (UnlockedAeonEnhanceNum != 0) hash ^= UnlockedAeonEnhanceNum.GetHashCode();
      if (GameAeonId != 0) hash ^= GameAeonId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnlockedAeonEnhanceNum != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnlockedAeonEnhanceNum);
      }
      if (GameAeonId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameAeonId);
      }
      if (IsUnlocked != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsUnlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnlockedAeonEnhanceNum != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UnlockedAeonEnhanceNum);
      }
      if (GameAeonId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameAeonId);
      }
      if (IsUnlocked != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsUnlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsUnlocked != false) {
        size += 1 + 1;
      }
      if (UnlockedAeonEnhanceNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnlockedAeonEnhanceNum);
      }
      if (GameAeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameAeonId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameAeonInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsUnlocked != false) {
        IsUnlocked = other.IsUnlocked;
      }
      if (other.UnlockedAeonEnhanceNum != 0) {
        UnlockedAeonEnhanceNum = other.UnlockedAeonEnhanceNum;
      }
      if (other.GameAeonId != 0) {
        GameAeonId = other.GameAeonId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            UnlockedAeonEnhanceNum = input.ReadUInt32();
            break;
          }
          case 32: {
            GameAeonId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsUnlocked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            UnlockedAeonEnhanceNum = input.ReadUInt32();
            break;
          }
          case 32: {
            GameAeonId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsUnlocked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
